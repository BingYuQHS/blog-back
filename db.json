{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1539235610368},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1539235610369},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1539235610369},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1539235610372},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1539235610372},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1539235610373},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1539235610373},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1539235610374},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1539235610374},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1539235610374},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1539235610375},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1539235610376},{"_id":"themes/next/_config.yml","hash":"458d17dcbb95030c1d8da127ce551b4acf66df29","modified":1539244532944},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1539235610377},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1539235610377},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1539235610424},{"_id":"source/_posts/(一)spring-cloud入门.md","hash":"a30c6e63daff39de85b9e0cddf8398faebbb602d","modified":1539653321585},{"_id":"source/_posts/(三)spring-cloud进阶二.md","hash":"e0d2fa85b1e31cf7830da69152af9cc9ffbcdd86","modified":1539674352053},{"_id":"source/_posts/(二)spring-cloud进阶一.md","hash":"a38d111460c31b69ad72fade27770d82e649c55f","modified":1539657610858},{"_id":"source/_posts/(五)spring-cloud进阶四.md","hash":"8f512126b836b751e519b5d4986928dd8fd2a0fc","modified":1540778885979},{"_id":"source/_posts/(四)spring-cloud进阶三.md","hash":"9abd0cd56ee637e8ad26246947981649e9fe0925","modified":1539678434008},{"_id":"source/_posts/EJBCA使用教程.md","hash":"f6ff85f5142281ddf72f0dda78571391e2b05fde","modified":1543471559258},{"_id":"source/_posts/PKI与SSL网站.md","hash":"a4717719c501ebcd582b292d91bd817c1310ad39","modified":1542352738197},{"_id":"source/_posts/centos7搭建EJBCA环境.md","hash":"e0f248a591d9d468817aede733b8eb4af2c4686b","modified":1541400317492},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1539234437581},{"_id":"source/_posts/hexo-next博客.md","hash":"5318031169270d6275ea92e8712fdf4a7c03882e","modified":1540520758610},{"_id":"source/_posts/markdown常用语法.md","hash":"60a46d654e0b113c619e2308ea64429b8a7215b1","modified":1539240852864},{"_id":"source/_posts/基础回顾.md","hash":"505dbe0cc9719c05a7ceff7ca55d6857b73e1c31","modified":1545805725550},{"_id":"source/_posts/shiro知识总结.md","hash":"47ea1643817b53722eb2f4087ecd7abb7dc046e4","modified":1546052148918},{"_id":"source/_posts/微信文档学习.md","hash":"53656646f3ee27c7996e16b59e6614f78ebb76e5","modified":1542809071255},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1539235610348},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1539235610354},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1539235589105},{"_id":"themes/next/.git/index","hash":"260efa3c477719b989ea8d975032af6456b27479","modified":1539235610580},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1539235610342},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1539235610370},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1539235610370},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1539235610371},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1539235610371},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1539235610378},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1539235610378},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1539235610379},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1539235610379},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1539235610380},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1539235610380},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1539235610381},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1539235610381},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1539235610382},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1539235610382},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1539235610382},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1539235610383},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1539235610384},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1539235610384},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1539235610384},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1539235610385},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1539235610386},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1539235610421},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1539235610422},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1539235610422},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1539235610422},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1539235610423},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1539235610423},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1539235610424},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1539235610425},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1539235610426},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1539235610577},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1539235610578},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1539235610578},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539235610486},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1539235589106},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1539235589106},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1539235589107},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1539235589107},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1539235589108},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1539235589170},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1539235589171},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1539235589171},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1539235589172},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1539235589172},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1539235589173},{"_id":"themes/next/.git/logs/HEAD","hash":"5c75eda24baff079f1265265e3dcd5a437cd73e2","modified":1539235610350},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1539235610386},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1539235610386},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1539235610387},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1539235610387},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1539235610388},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1539235610388},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1539235610389},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1539235610390},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1539235610390},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1539235610391},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1539235610391},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1539235610392},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1539235610393},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1539235610393},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1539235610394},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1539235610398},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1539235610398},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1539235610400},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1539235610413},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1539235610413},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1539235610414},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1539235610415},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1539235610415},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1539235610416},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1539235610416},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1539235610428},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1539235610427},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1539235610428},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1539235610429},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1539235610429},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1539235610430},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1539235610430},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1539235610431},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1539235610431},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1539235610486},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1539235610487},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1539235610487},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1539235610488},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1539235610488},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1539235610489},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1539235610490},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1539235610490},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1539235610491},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1539235610491},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1539235610491},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1539235610492},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1539235610492},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539235610493},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1539235610493},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539235610493},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1539235610494},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1539235610494},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1539235610495},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539235610399},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539235610400},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539235610470},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539235610471},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539235610472},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539235610484},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539235610485},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1539235610350},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1539235610392},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1539235610392},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1539235610394},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1539235610395},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1539235610395},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1539235610396},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1539235610396},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1539235610397},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1539235610397},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1539235610399},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1539235610399},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1539235610400},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1539235610401},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1539235610402},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1539235610402},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1539235610403},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1539235610403},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1539235610403},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1539235610404},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1539235610404},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1539235610405},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1539235610405},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1539235610406},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1539235610406},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1539235610407},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1539235610408},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1539235610409},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1539235610409},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1539235610410},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1539235610410},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1539235610411},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1539235610411},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1539235610412},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1539235610412},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1539235610418},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1539235610419},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1539235610419},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1539235610420},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1539235610470},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1539235610470},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1539235610471},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1539235610471},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1539235610483},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1539235610483},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1539235610485},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1539235610484},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1539235610496},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1539235610496},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1539235610496},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1539235610497},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1539235610497},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1539235610498},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1539235610499},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1539235610499},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1539235610500},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1539235610501},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1539235610501},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1539235610510},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1539235610514},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1539235610515},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1539235610516},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1539235610516},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1539235610525},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1539235610525},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1539235610526},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1539235610526},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1539235610528},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1539235610529},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1539235610529},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1539235610530},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1539235610530},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1539235610549},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1539235610551},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1539235610551},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1539235610552},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1539235610552},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1539235610552},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1539235610553},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1539235610554},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1539235610555},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1539235610555},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1539235610556},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1539235610556},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1539235610557},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1539235610557},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1539235610558},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1539235610558},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1539235610558},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1539235610559},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1539235610559},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1539235610560},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1539235610560},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1539235610561},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1539235610561},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1539235610562},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1539235610563},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1539235610563},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1539235610564},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1539235610571},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1539235610572},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1539235610576},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1539235610576},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1539235610577},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1539235610550},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"5c75eda24baff079f1265265e3dcd5a437cd73e2","modified":1539235610351},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1539235610347},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1539235610417},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1539235610418},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1539235610433},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1539235610434},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1539235610434},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1539235610435},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1539235610435},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1539235610443},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1539235610456},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1539235610467},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1539235610467},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1539235610468},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1539235610468},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1539235610469},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1539235610469},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1539235610466},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1539235610473},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1539235610473},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1539235610474},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1539235610474},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1539235610474},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1539235610475},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1539235610475},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1539235610476},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1539235610478},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1539235610478},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1539235610478},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1539235610479},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1539235610479},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1539235610480},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1539235610481},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1539235610481},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1539235610482},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1539235610482},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1539235610482},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1539235610500},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1539235610506},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1539235610508},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1539235610509},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1539235610517},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1539235610517},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1539235610518},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1539235610518},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1539235610518},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1539235610519},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1539235610523},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1539235610524},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1539235610524},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1539235610527},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1539235610528},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1539235610531},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1539235610531},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1539235610532},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1539235610570},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1539235610571},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1539235610507},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1539235610547},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1539235610548},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1539235610575},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"5c75eda24baff079f1265265e3dcd5a437cd73e2","modified":1539235610347},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1539235610436},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1539235610437},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1539235610437},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1539235610438},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1539235610438},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1539235610439},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1539235610439},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1539235610440},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1539235610440},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1539235610441},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1539235610442},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1539235610442},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1539235610443},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1539235610443},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1539235610444},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1539235610445},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1539235610446},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1539235610445},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1539235610446},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1539235610447},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1539235610447},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1539235610448},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1539235610448},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1539235610449},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1539235610449},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1539235610450},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1539235610450},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1539235610450},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1539235610451},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1539235610452},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1539235610452},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1539235610453},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1539235610453},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1539235610454},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1539235610454},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1539235610455},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1539235610455},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1539235610456},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1539235610456},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1539235610457},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1539235610457},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1539235610458},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1539235610458},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1539235610459},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1539235610459},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1539235610460},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1539235610460},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1539235610461},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1539235610461},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1539235610462},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1539235610462},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1539235610463},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1539235610463},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1539235610464},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1539235610464},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1539235610465},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1539235610465},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1539235610466},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1539235610476},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1539235610477},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1539235610480},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1539235610503},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1539235610503},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1539235610504},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1539235610504},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1539235610505},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1539235610520},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1539235610520},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1539235610521},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1539235610521},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1539235610522},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1539235610522},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1539235610535},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1539235610538},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1539235610546},{"_id":"themes/next/.git/objects/pack/pack-09df78575dd506cafcb2c517908ed591431fdc71.idx","hash":"be430c584ec6e1499b87f9e416e72d0fbc2e3a26","modified":1539235610099},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1539235610513},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1539235610569},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1539235610543},{"_id":"themes/next/.git/objects/pack/pack-09df78575dd506cafcb2c517908ed591431fdc71.pack","hash":"eee901eb2f4a4df31eaa41634f4e9de643c3fb4e","modified":1539235610207}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"(二)spring-cloud进阶一","date":"2018-10-16T01:34:42.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# eureka server添加权限 #\n- 参考：[注册中心加权限](http://www.cnblogs.com/xiaojunbo/p/7094066.html \"注册中心加权限\")\n## 添加security的相关依赖 ##\n- ![](https://i.imgur.com/4qZuOWs.png)\n## 配置配置文件 ##\n- ![](https://i.imgur.com/bkkLccq.png)\n- 在spring boot2.X中，开启security已过时，即`security.basic.enabled: true`配置过时。\n- 可以: ![](https://i.imgur.com/zDTWd72.png)![](https://i.imgur.com/XeH2Uxk.png)\n- ps:[此时启动注册中心，需要输入用户名和密码，但之前的服务提供者eureka-client不能注册成功，需要注册中心为其添加权限]\n# eureka client添加注册权限 #\n- 修改client工程的配置文件，设置：\n>\n\t\teureka.client.serviceUrl.defaultZone=http://${username}:${password}@${eureka.instance.hostname}:${server.port}/eureka/\n- 配置如下：![](https://i.imgur.com/JL4Nt6A.png)\n# eureka client注册不上的问题解决 #\n- 参考：[https://my.oschina.net/bianxin/blog/1819947](https://my.oschina.net/bianxin/blog/1819947 \"Springboot-2.0.2.RELEASE Eureka认证后，服务注册失败问题\")\n- 问题是Spring Security引起的，查看源码发现CSRF保护默认是开启的，可以禁用掉即可。\n- spring boot老版本配置：\n>\n\t\tsecurity:   \n\t\t  basic:\n\t\t    enabled: true\n\t\t  user:\n\t\t    name: admin\n\t\t    password: 123456\n\n- 新版本解决方案：添加一个配置类禁用csrf如下：(会发现注入服务不需要密码了，说明失去了验证。)\n![添加配置类禁用csrf](https://i.imgur.com/nLNagtM.png)","source":"_posts/(二)spring-cloud进阶一.md","raw":"---\ntitle: (二)spring-cloud进阶一\ndate: 2018-10-16 09:34:42\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# eureka server添加权限 #\n- 参考：[注册中心加权限](http://www.cnblogs.com/xiaojunbo/p/7094066.html \"注册中心加权限\")\n## 添加security的相关依赖 ##\n- ![](https://i.imgur.com/4qZuOWs.png)\n## 配置配置文件 ##\n- ![](https://i.imgur.com/bkkLccq.png)\n- 在spring boot2.X中，开启security已过时，即`security.basic.enabled: true`配置过时。\n- 可以: ![](https://i.imgur.com/zDTWd72.png)![](https://i.imgur.com/XeH2Uxk.png)\n- ps:[此时启动注册中心，需要输入用户名和密码，但之前的服务提供者eureka-client不能注册成功，需要注册中心为其添加权限]\n# eureka client添加注册权限 #\n- 修改client工程的配置文件，设置：\n>\n\t\teureka.client.serviceUrl.defaultZone=http://${username}:${password}@${eureka.instance.hostname}:${server.port}/eureka/\n- 配置如下：![](https://i.imgur.com/JL4Nt6A.png)\n# eureka client注册不上的问题解决 #\n- 参考：[https://my.oschina.net/bianxin/blog/1819947](https://my.oschina.net/bianxin/blog/1819947 \"Springboot-2.0.2.RELEASE Eureka认证后，服务注册失败问题\")\n- 问题是Spring Security引起的，查看源码发现CSRF保护默认是开启的，可以禁用掉即可。\n- spring boot老版本配置：\n>\n\t\tsecurity:   \n\t\t  basic:\n\t\t    enabled: true\n\t\t  user:\n\t\t    name: admin\n\t\t    password: 123456\n\n- 新版本解决方案：添加一个配置类禁用csrf如下：(会发现注入服务不需要密码了，说明失去了验证。)\n![添加配置类禁用csrf](https://i.imgur.com/nLNagtM.png)","slug":"(二)spring-cloud进阶一","published":1,"updated":"2018-10-16T02:40:10.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxic0000hcr39s54f4ow","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"eureka-server添加权限\"><a href=\"#eureka-server添加权限\" class=\"headerlink\" title=\"eureka server添加权限\"></a>eureka server添加权限</h1><ul>\n<li>参考：<a href=\"http://www.cnblogs.com/xiaojunbo/p/7094066.html\" title=\"注册中心加权限\" target=\"_blank\" rel=\"noopener\">注册中心加权限</a><h2 id=\"添加security的相关依赖\"><a href=\"#添加security的相关依赖\" class=\"headerlink\" title=\"添加security的相关依赖\"></a>添加security的相关依赖</h2></li>\n<li><img src=\"https://i.imgur.com/4qZuOWs.png\" alt=\"\"><h2 id=\"配置配置文件\"><a href=\"#配置配置文件\" class=\"headerlink\" title=\"配置配置文件\"></a>配置配置文件</h2></li>\n<li><img src=\"https://i.imgur.com/bkkLccq.png\" alt=\"\"></li>\n<li>在spring boot2.X中，开启security已过时，即<code>security.basic.enabled: true</code>配置过时。</li>\n<li>可以: <img src=\"https://i.imgur.com/zDTWd72.png\" alt=\"\"><img src=\"https://i.imgur.com/XeH2Uxk.png\" alt=\"\"></li>\n<li>ps:[此时启动注册中心，需要输入用户名和密码，但之前的服务提供者eureka-client不能注册成功，需要注册中心为其添加权限]<h1 id=\"eureka-client添加注册权限\"><a href=\"#eureka-client添加注册权限\" class=\"headerlink\" title=\"eureka client添加注册权限\"></a>eureka client添加注册权限</h1></li>\n<li>修改client工程的配置文件，设置：<blockquote>\n</blockquote>\n<pre><code>eureka.client.serviceUrl.defaultZone=http://${username}:${password}@${eureka.instance.hostname}:${server.port}/eureka/\n</code></pre></li>\n<li>配置如下：<img src=\"https://i.imgur.com/JL4Nt6A.png\" alt=\"\"><h1 id=\"eureka-client注册不上的问题解决\"><a href=\"#eureka-client注册不上的问题解决\" class=\"headerlink\" title=\"eureka client注册不上的问题解决\"></a>eureka client注册不上的问题解决</h1></li>\n<li>参考：<a href=\"https://my.oschina.net/bianxin/blog/1819947\" title=\"Springboot-2.0.2.RELEASE Eureka认证后，服务注册失败问题\" target=\"_blank\" rel=\"noopener\">https://my.oschina.net/bianxin/blog/1819947</a></li>\n<li>问题是Spring Security引起的，查看源码发现CSRF保护默认是开启的，可以禁用掉即可。</li>\n<li><p>spring boot老版本配置：</p>\n<blockquote>\n</blockquote>\n<pre><code>security:   \n  basic:\n    enabled: true\n  user:\n    name: admin\n    password: 123456\n</code></pre></li>\n<li><p>新版本解决方案：添加一个配置类禁用csrf如下：(会发现注入服务不需要密码了，说明失去了验证。)<br><img src=\"https://i.imgur.com/nLNagtM.png\" alt=\"添加配置类禁用csrf\"></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"eureka-server添加权限\"><a href=\"#eureka-server添加权限\" class=\"headerlink\" title=\"eureka server添加权限\"></a>eureka server添加权限</h1><ul>\n<li>参考：<a href=\"http://www.cnblogs.com/xiaojunbo/p/7094066.html\" title=\"注册中心加权限\" target=\"_blank\" rel=\"noopener\">注册中心加权限</a><h2 id=\"添加security的相关依赖\"><a href=\"#添加security的相关依赖\" class=\"headerlink\" title=\"添加security的相关依赖\"></a>添加security的相关依赖</h2></li>\n<li><img src=\"https://i.imgur.com/4qZuOWs.png\" alt=\"\"><h2 id=\"配置配置文件\"><a href=\"#配置配置文件\" class=\"headerlink\" title=\"配置配置文件\"></a>配置配置文件</h2></li>\n<li><img src=\"https://i.imgur.com/bkkLccq.png\" alt=\"\"></li>\n<li>在spring boot2.X中，开启security已过时，即<code>security.basic.enabled: true</code>配置过时。</li>\n<li>可以: <img src=\"https://i.imgur.com/zDTWd72.png\" alt=\"\"><img src=\"https://i.imgur.com/XeH2Uxk.png\" alt=\"\"></li>\n<li>ps:[此时启动注册中心，需要输入用户名和密码，但之前的服务提供者eureka-client不能注册成功，需要注册中心为其添加权限]<h1 id=\"eureka-client添加注册权限\"><a href=\"#eureka-client添加注册权限\" class=\"headerlink\" title=\"eureka client添加注册权限\"></a>eureka client添加注册权限</h1></li>\n<li>修改client工程的配置文件，设置：<blockquote>\n</blockquote>\n<pre><code>eureka.client.serviceUrl.defaultZone=http://${username}:${password}@${eureka.instance.hostname}:${server.port}/eureka/\n</code></pre></li>\n<li>配置如下：<img src=\"https://i.imgur.com/JL4Nt6A.png\" alt=\"\"><h1 id=\"eureka-client注册不上的问题解决\"><a href=\"#eureka-client注册不上的问题解决\" class=\"headerlink\" title=\"eureka client注册不上的问题解决\"></a>eureka client注册不上的问题解决</h1></li>\n<li>参考：<a href=\"https://my.oschina.net/bianxin/blog/1819947\" title=\"Springboot-2.0.2.RELEASE Eureka认证后，服务注册失败问题\" target=\"_blank\" rel=\"noopener\">https://my.oschina.net/bianxin/blog/1819947</a></li>\n<li>问题是Spring Security引起的，查看源码发现CSRF保护默认是开启的，可以禁用掉即可。</li>\n<li><p>spring boot老版本配置：</p>\n<blockquote>\n</blockquote>\n<pre><code>security:   \n  basic:\n    enabled: true\n  user:\n    name: admin\n    password: 123456\n</code></pre></li>\n<li><p>新版本解决方案：添加一个配置类禁用csrf如下：(会发现注入服务不需要密码了，说明失去了验证。)<br><img src=\"https://i.imgur.com/nLNagtM.png\" alt=\"添加配置类禁用csrf\"></p>\n</li>\n</ul>\n"},{"title":"(一)spring cloud入门","date":"2018-10-15T07:41:26.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n# spring cloud介绍 #\n\n- Spring提供了一系列工具，可以帮助开发人员迅速搭建分布式系统中的公共组件（比如：配置管理，服务发现，断路器，智能路由，微代理，控制总线，一次性令牌，全局锁，主节点选举，分布式session，集群状态）。协助分布式环境中各个系统，为各类服务提供模板性配置。使用spring cloud,开发人员可以搭建实现了这些样板的应用，并且在任何分布式环境下都能工作得很好，小到笔记本电脑，大到数据中心和云平台。\n- spring cloud官网定义比较抽象，我们可以从简单的东西开始。Spring Cloud是基于spring Boot的，最适合用于管理Spring Boot创建的各个微服务应用。要管理分布式环境下的各个Spring Boot微服务，必然存在服务注册问题。所以我们先从服务的注册谈起。既然是注册，必然有个管理注册中心的服务，各个在Spring Cloud管理下的Spring Boot应用就是需要注册的client。\n- Spring Cloud使用eureka server,然后所以需要访问配置文件的应用都作为一个eureka client注册上去。eureka是一个高可用的组件，它没有后端缓存，每一个实例注册后需要向注册中心发送心跳，在默认情况下eureka server也是一个eureka client,必须要指定一个server。\n# spring boot与spring cloud的区别 #\n- springboot是spring的一套快速配置的脚手架，可以基于springboot快速开发单个微服务，springcloud是一个基于springboot实现的云应用开发工具。\n- spring boot专注于快速，方便集成单个个体，spring cloud是关注全局的服务治理框架\n- spring boot使用了默认大于配置的理念，很多集成方案已经帮你选着好了，能不配置就不配置，spring cloud很大一部分是基于springboot来实现的。\n- spring boot可以离开spring cloud独立使用开发项目，但spring cloud离不开spring boot,属于依赖关系。\n# spring boot与spring cloud的版本匹配 #\n- 参考：[spring boot与spring cloud的版本匹配](https://blog.csdn.net/zxl646801924/article/details/80742719)\n- ![版本匹配](https://i.imgur.com/19dmDbt.png)\n# 实践 #\n参考：[spring cloud入门](https://blog.csdn.net/forezp/article/details/81040925)\n## 创建springboot项目 ##\n- ![](https://i.imgur.com/FE7SQ5P.png)\n- ![](https://i.imgur.com/cp4g9Tt.png)\n- ![](https://i.imgur.com/fAd5OWZ.png)\n- ![](https://i.imgur.com/YqllfbF.png)\n- ![](https://i.imgur.com/ze1ttoj.png)\n## 添加依赖 ##\n- ![](https://i.imgur.com/7fRyhIf.png)\n- ![](https://i.imgur.com/Tb8BY9O.png)\n- ![](https://i.imgur.com/6Rr2aSz.png)\n## 创建服务注册中心 ##\n- 创建一个model工程作为服务注册中心，即eureka server,另一个作为eureka client\n- 右键工程-->创建model-->选择spring initialir\n- ![](https://i.imgur.com/ludOPNn.png)\n- ![](https://i.imgur.com/CgGqkxs.png)\n- ![](https://i.imgur.com/t7UIfPh.png)\n- ![](https://i.imgur.com/iVfuY3f.png)\n- ![](https://i.imgur.com/wcQEopY.png)\n- 创建完后的工程，其pom.xml继承了父pom文件，并引入spring-cloud-starter-netflix-eureka-server的依赖\n- ![](https://i.imgur.com/ohiYQUR.png)\n## 启动注册服务中心 ##\n- 启动一个服务注册中心，只需要一个注解@EnableEurekaServer，这个注解需要在springboot工程的启动application类上加\n- ![](https://i.imgur.com/DHZHgAU.png)\n## eureka server的配置文件 ##\n- eureka是一个高可用的组件，它没有后端缓存，每一个实例注册之后需要向注册中心发送心跳（因此可以在内存中完成），在默认情况下erureka server也是一个eureka client ,必须要指定一个 server。eureka server的配置文件appication.yml\n- ![](https://i.imgur.com/6uXm9qd.png)\n- 运行项目后：\n- ![](https://i.imgur.com/CHYbFR7.png)\n## 创建一个服务提供者 ##\n- eureka client,当client向server注册时，它会提供一些元数据，例如主机和端口，URL,主页等。eureka server从每个client实例接收心跳消息。如果心跳超时，则通常将该实例从注册server中删除。\n- 创建过程同server类似，创建完pom.xml如下：\n- ![](https://i.imgur.com/TdgjX2p.png)\n- ![](https://i.imgur.com/7dYWz7h.png)\n- ![](https://i.imgur.com/j38QtPC.png)\n- ![](https://i.imgur.com/2mORUzM.png)\n- 注解@EnableEurekaClient，表明自己是一个eurekaclient，加在项目启动类：\n- ![](https://i.imgur.com/gamdgHg.png)\n##  eureka client的配置文件 ##\n- ![](https://i.imgur.com/CvxV4zv.png)\n- 启动工程(server和client)，打开http://localhost:9876 ，即eureka server 的网址\n- ![](https://i.imgur.com/lfmT8ut.png)\n## 添加一个简单的业务 ##\n- ![](https://i.imgur.com/0haqJao.png)\n- ![](https://i.imgur.com/vp1NCUo.png)\n## Eureka的自我保护模式 ##\n- ![](https://i.imgur.com/fbzslmz.png)\n- ![](https://i.imgur.com/hwMcmf6.png)","source":"_posts/(一)spring-cloud入门.md","raw":"---\ntitle: (一)spring cloud入门\ndate: 2018-10-15 15:41:26\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n# spring cloud介绍 #\n\n- Spring提供了一系列工具，可以帮助开发人员迅速搭建分布式系统中的公共组件（比如：配置管理，服务发现，断路器，智能路由，微代理，控制总线，一次性令牌，全局锁，主节点选举，分布式session，集群状态）。协助分布式环境中各个系统，为各类服务提供模板性配置。使用spring cloud,开发人员可以搭建实现了这些样板的应用，并且在任何分布式环境下都能工作得很好，小到笔记本电脑，大到数据中心和云平台。\n- spring cloud官网定义比较抽象，我们可以从简单的东西开始。Spring Cloud是基于spring Boot的，最适合用于管理Spring Boot创建的各个微服务应用。要管理分布式环境下的各个Spring Boot微服务，必然存在服务注册问题。所以我们先从服务的注册谈起。既然是注册，必然有个管理注册中心的服务，各个在Spring Cloud管理下的Spring Boot应用就是需要注册的client。\n- Spring Cloud使用eureka server,然后所以需要访问配置文件的应用都作为一个eureka client注册上去。eureka是一个高可用的组件，它没有后端缓存，每一个实例注册后需要向注册中心发送心跳，在默认情况下eureka server也是一个eureka client,必须要指定一个server。\n# spring boot与spring cloud的区别 #\n- springboot是spring的一套快速配置的脚手架，可以基于springboot快速开发单个微服务，springcloud是一个基于springboot实现的云应用开发工具。\n- spring boot专注于快速，方便集成单个个体，spring cloud是关注全局的服务治理框架\n- spring boot使用了默认大于配置的理念，很多集成方案已经帮你选着好了，能不配置就不配置，spring cloud很大一部分是基于springboot来实现的。\n- spring boot可以离开spring cloud独立使用开发项目，但spring cloud离不开spring boot,属于依赖关系。\n# spring boot与spring cloud的版本匹配 #\n- 参考：[spring boot与spring cloud的版本匹配](https://blog.csdn.net/zxl646801924/article/details/80742719)\n- ![版本匹配](https://i.imgur.com/19dmDbt.png)\n# 实践 #\n参考：[spring cloud入门](https://blog.csdn.net/forezp/article/details/81040925)\n## 创建springboot项目 ##\n- ![](https://i.imgur.com/FE7SQ5P.png)\n- ![](https://i.imgur.com/cp4g9Tt.png)\n- ![](https://i.imgur.com/fAd5OWZ.png)\n- ![](https://i.imgur.com/YqllfbF.png)\n- ![](https://i.imgur.com/ze1ttoj.png)\n## 添加依赖 ##\n- ![](https://i.imgur.com/7fRyhIf.png)\n- ![](https://i.imgur.com/Tb8BY9O.png)\n- ![](https://i.imgur.com/6Rr2aSz.png)\n## 创建服务注册中心 ##\n- 创建一个model工程作为服务注册中心，即eureka server,另一个作为eureka client\n- 右键工程-->创建model-->选择spring initialir\n- ![](https://i.imgur.com/ludOPNn.png)\n- ![](https://i.imgur.com/CgGqkxs.png)\n- ![](https://i.imgur.com/t7UIfPh.png)\n- ![](https://i.imgur.com/iVfuY3f.png)\n- ![](https://i.imgur.com/wcQEopY.png)\n- 创建完后的工程，其pom.xml继承了父pom文件，并引入spring-cloud-starter-netflix-eureka-server的依赖\n- ![](https://i.imgur.com/ohiYQUR.png)\n## 启动注册服务中心 ##\n- 启动一个服务注册中心，只需要一个注解@EnableEurekaServer，这个注解需要在springboot工程的启动application类上加\n- ![](https://i.imgur.com/DHZHgAU.png)\n## eureka server的配置文件 ##\n- eureka是一个高可用的组件，它没有后端缓存，每一个实例注册之后需要向注册中心发送心跳（因此可以在内存中完成），在默认情况下erureka server也是一个eureka client ,必须要指定一个 server。eureka server的配置文件appication.yml\n- ![](https://i.imgur.com/6uXm9qd.png)\n- 运行项目后：\n- ![](https://i.imgur.com/CHYbFR7.png)\n## 创建一个服务提供者 ##\n- eureka client,当client向server注册时，它会提供一些元数据，例如主机和端口，URL,主页等。eureka server从每个client实例接收心跳消息。如果心跳超时，则通常将该实例从注册server中删除。\n- 创建过程同server类似，创建完pom.xml如下：\n- ![](https://i.imgur.com/TdgjX2p.png)\n- ![](https://i.imgur.com/7dYWz7h.png)\n- ![](https://i.imgur.com/j38QtPC.png)\n- ![](https://i.imgur.com/2mORUzM.png)\n- 注解@EnableEurekaClient，表明自己是一个eurekaclient，加在项目启动类：\n- ![](https://i.imgur.com/gamdgHg.png)\n##  eureka client的配置文件 ##\n- ![](https://i.imgur.com/CvxV4zv.png)\n- 启动工程(server和client)，打开http://localhost:9876 ，即eureka server 的网址\n- ![](https://i.imgur.com/lfmT8ut.png)\n## 添加一个简单的业务 ##\n- ![](https://i.imgur.com/0haqJao.png)\n- ![](https://i.imgur.com/vp1NCUo.png)\n## Eureka的自我保护模式 ##\n- ![](https://i.imgur.com/fbzslmz.png)\n- ![](https://i.imgur.com/hwMcmf6.png)","slug":"(一)spring-cloud入门","published":1,"updated":"2018-10-16T01:28:41.585Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxii0001hcr3nxybwy6l","content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n<h1 id=\"spring-cloud介绍\"><a href=\"#spring-cloud介绍\" class=\"headerlink\" title=\"spring cloud介绍\"></a>spring cloud介绍</h1><ul>\n<li>Spring提供了一系列工具，可以帮助开发人员迅速搭建分布式系统中的公共组件（比如：配置管理，服务发现，断路器，智能路由，微代理，控制总线，一次性令牌，全局锁，主节点选举，分布式session，集群状态）。协助分布式环境中各个系统，为各类服务提供模板性配置。使用spring cloud,开发人员可以搭建实现了这些样板的应用，并且在任何分布式环境下都能工作得很好，小到笔记本电脑，大到数据中心和云平台。</li>\n<li>spring cloud官网定义比较抽象，我们可以从简单的东西开始。Spring Cloud是基于spring Boot的，最适合用于管理Spring Boot创建的各个微服务应用。要管理分布式环境下的各个Spring Boot微服务，必然存在服务注册问题。所以我们先从服务的注册谈起。既然是注册，必然有个管理注册中心的服务，各个在Spring Cloud管理下的Spring Boot应用就是需要注册的client。</li>\n<li>Spring Cloud使用eureka server,然后所以需要访问配置文件的应用都作为一个eureka client注册上去。eureka是一个高可用的组件，它没有后端缓存，每一个实例注册后需要向注册中心发送心跳，在默认情况下eureka server也是一个eureka client,必须要指定一个server。<h1 id=\"spring-boot与spring-cloud的区别\"><a href=\"#spring-boot与spring-cloud的区别\" class=\"headerlink\" title=\"spring boot与spring cloud的区别\"></a>spring boot与spring cloud的区别</h1></li>\n<li>springboot是spring的一套快速配置的脚手架，可以基于springboot快速开发单个微服务，springcloud是一个基于springboot实现的云应用开发工具。</li>\n<li>spring boot专注于快速，方便集成单个个体，spring cloud是关注全局的服务治理框架</li>\n<li>spring boot使用了默认大于配置的理念，很多集成方案已经帮你选着好了，能不配置就不配置，spring cloud很大一部分是基于springboot来实现的。</li>\n<li>spring boot可以离开spring cloud独立使用开发项目，但spring cloud离不开spring boot,属于依赖关系。<h1 id=\"spring-boot与spring-cloud的版本匹配\"><a href=\"#spring-boot与spring-cloud的版本匹配\" class=\"headerlink\" title=\"spring boot与spring cloud的版本匹配\"></a>spring boot与spring cloud的版本匹配</h1></li>\n<li>参考：<a href=\"https://blog.csdn.net/zxl646801924/article/details/80742719\" target=\"_blank\" rel=\"noopener\">spring boot与spring cloud的版本匹配</a></li>\n<li><img src=\"https://i.imgur.com/19dmDbt.png\" alt=\"版本匹配\"><h1 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h1>参考：<a href=\"https://blog.csdn.net/forezp/article/details/81040925\" target=\"_blank\" rel=\"noopener\">spring cloud入门</a><h2 id=\"创建springboot项目\"><a href=\"#创建springboot项目\" class=\"headerlink\" title=\"创建springboot项目\"></a>创建springboot项目</h2></li>\n<li><img src=\"https://i.imgur.com/FE7SQ5P.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/cp4g9Tt.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/fAd5OWZ.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/YqllfbF.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/ze1ttoj.png\" alt=\"\"><h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2></li>\n<li><img src=\"https://i.imgur.com/7fRyhIf.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/Tb8BY9O.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/6Rr2aSz.png\" alt=\"\"><h2 id=\"创建服务注册中心\"><a href=\"#创建服务注册中心\" class=\"headerlink\" title=\"创建服务注册中心\"></a>创建服务注册中心</h2></li>\n<li>创建一个model工程作为服务注册中心，即eureka server,另一个作为eureka client</li>\n<li>右键工程–&gt;创建model–&gt;选择spring initialir</li>\n<li><img src=\"https://i.imgur.com/ludOPNn.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/CgGqkxs.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/t7UIfPh.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/iVfuY3f.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/wcQEopY.png\" alt=\"\"></li>\n<li>创建完后的工程，其pom.xml继承了父pom文件，并引入spring-cloud-starter-netflix-eureka-server的依赖</li>\n<li><img src=\"https://i.imgur.com/ohiYQUR.png\" alt=\"\"><h2 id=\"启动注册服务中心\"><a href=\"#启动注册服务中心\" class=\"headerlink\" title=\"启动注册服务中心\"></a>启动注册服务中心</h2></li>\n<li>启动一个服务注册中心，只需要一个注解@EnableEurekaServer，这个注解需要在springboot工程的启动application类上加</li>\n<li><img src=\"https://i.imgur.com/DHZHgAU.png\" alt=\"\"><h2 id=\"eureka-server的配置文件\"><a href=\"#eureka-server的配置文件\" class=\"headerlink\" title=\"eureka server的配置文件\"></a>eureka server的配置文件</h2></li>\n<li>eureka是一个高可用的组件，它没有后端缓存，每一个实例注册之后需要向注册中心发送心跳（因此可以在内存中完成），在默认情况下erureka server也是一个eureka client ,必须要指定一个 server。eureka server的配置文件appication.yml</li>\n<li><img src=\"https://i.imgur.com/6uXm9qd.png\" alt=\"\"></li>\n<li>运行项目后：</li>\n<li><img src=\"https://i.imgur.com/CHYbFR7.png\" alt=\"\"><h2 id=\"创建一个服务提供者\"><a href=\"#创建一个服务提供者\" class=\"headerlink\" title=\"创建一个服务提供者\"></a>创建一个服务提供者</h2></li>\n<li>eureka client,当client向server注册时，它会提供一些元数据，例如主机和端口，URL,主页等。eureka server从每个client实例接收心跳消息。如果心跳超时，则通常将该实例从注册server中删除。</li>\n<li>创建过程同server类似，创建完pom.xml如下：</li>\n<li><img src=\"https://i.imgur.com/TdgjX2p.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/7dYWz7h.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/j38QtPC.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/2mORUzM.png\" alt=\"\"></li>\n<li>注解@EnableEurekaClient，表明自己是一个eurekaclient，加在项目启动类：</li>\n<li><img src=\"https://i.imgur.com/gamdgHg.png\" alt=\"\"><h2 id=\"eureka-client的配置文件\"><a href=\"#eureka-client的配置文件\" class=\"headerlink\" title=\"eureka client的配置文件\"></a>eureka client的配置文件</h2></li>\n<li><img src=\"https://i.imgur.com/CvxV4zv.png\" alt=\"\"></li>\n<li>启动工程(server和client)，打开<a href=\"http://localhost:9876\" target=\"_blank\" rel=\"noopener\">http://localhost:9876</a> ，即eureka server 的网址</li>\n<li><img src=\"https://i.imgur.com/lfmT8ut.png\" alt=\"\"><h2 id=\"添加一个简单的业务\"><a href=\"#添加一个简单的业务\" class=\"headerlink\" title=\"添加一个简单的业务\"></a>添加一个简单的业务</h2></li>\n<li><img src=\"https://i.imgur.com/0haqJao.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/vp1NCUo.png\" alt=\"\"><h2 id=\"Eureka的自我保护模式\"><a href=\"#Eureka的自我保护模式\" class=\"headerlink\" title=\"Eureka的自我保护模式\"></a>Eureka的自我保护模式</h2></li>\n<li><img src=\"https://i.imgur.com/fbzslmz.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/hwMcmf6.png\" alt=\"\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n<h1 id=\"spring-cloud介绍\"><a href=\"#spring-cloud介绍\" class=\"headerlink\" title=\"spring cloud介绍\"></a>spring cloud介绍</h1><ul>\n<li>Spring提供了一系列工具，可以帮助开发人员迅速搭建分布式系统中的公共组件（比如：配置管理，服务发现，断路器，智能路由，微代理，控制总线，一次性令牌，全局锁，主节点选举，分布式session，集群状态）。协助分布式环境中各个系统，为各类服务提供模板性配置。使用spring cloud,开发人员可以搭建实现了这些样板的应用，并且在任何分布式环境下都能工作得很好，小到笔记本电脑，大到数据中心和云平台。</li>\n<li>spring cloud官网定义比较抽象，我们可以从简单的东西开始。Spring Cloud是基于spring Boot的，最适合用于管理Spring Boot创建的各个微服务应用。要管理分布式环境下的各个Spring Boot微服务，必然存在服务注册问题。所以我们先从服务的注册谈起。既然是注册，必然有个管理注册中心的服务，各个在Spring Cloud管理下的Spring Boot应用就是需要注册的client。</li>\n<li>Spring Cloud使用eureka server,然后所以需要访问配置文件的应用都作为一个eureka client注册上去。eureka是一个高可用的组件，它没有后端缓存，每一个实例注册后需要向注册中心发送心跳，在默认情况下eureka server也是一个eureka client,必须要指定一个server。<h1 id=\"spring-boot与spring-cloud的区别\"><a href=\"#spring-boot与spring-cloud的区别\" class=\"headerlink\" title=\"spring boot与spring cloud的区别\"></a>spring boot与spring cloud的区别</h1></li>\n<li>springboot是spring的一套快速配置的脚手架，可以基于springboot快速开发单个微服务，springcloud是一个基于springboot实现的云应用开发工具。</li>\n<li>spring boot专注于快速，方便集成单个个体，spring cloud是关注全局的服务治理框架</li>\n<li>spring boot使用了默认大于配置的理念，很多集成方案已经帮你选着好了，能不配置就不配置，spring cloud很大一部分是基于springboot来实现的。</li>\n<li>spring boot可以离开spring cloud独立使用开发项目，但spring cloud离不开spring boot,属于依赖关系。<h1 id=\"spring-boot与spring-cloud的版本匹配\"><a href=\"#spring-boot与spring-cloud的版本匹配\" class=\"headerlink\" title=\"spring boot与spring cloud的版本匹配\"></a>spring boot与spring cloud的版本匹配</h1></li>\n<li>参考：<a href=\"https://blog.csdn.net/zxl646801924/article/details/80742719\" target=\"_blank\" rel=\"noopener\">spring boot与spring cloud的版本匹配</a></li>\n<li><img src=\"https://i.imgur.com/19dmDbt.png\" alt=\"版本匹配\"><h1 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h1>参考：<a href=\"https://blog.csdn.net/forezp/article/details/81040925\" target=\"_blank\" rel=\"noopener\">spring cloud入门</a><h2 id=\"创建springboot项目\"><a href=\"#创建springboot项目\" class=\"headerlink\" title=\"创建springboot项目\"></a>创建springboot项目</h2></li>\n<li><img src=\"https://i.imgur.com/FE7SQ5P.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/cp4g9Tt.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/fAd5OWZ.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/YqllfbF.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/ze1ttoj.png\" alt=\"\"><h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2></li>\n<li><img src=\"https://i.imgur.com/7fRyhIf.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/Tb8BY9O.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/6Rr2aSz.png\" alt=\"\"><h2 id=\"创建服务注册中心\"><a href=\"#创建服务注册中心\" class=\"headerlink\" title=\"创建服务注册中心\"></a>创建服务注册中心</h2></li>\n<li>创建一个model工程作为服务注册中心，即eureka server,另一个作为eureka client</li>\n<li>右键工程–&gt;创建model–&gt;选择spring initialir</li>\n<li><img src=\"https://i.imgur.com/ludOPNn.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/CgGqkxs.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/t7UIfPh.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/iVfuY3f.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/wcQEopY.png\" alt=\"\"></li>\n<li>创建完后的工程，其pom.xml继承了父pom文件，并引入spring-cloud-starter-netflix-eureka-server的依赖</li>\n<li><img src=\"https://i.imgur.com/ohiYQUR.png\" alt=\"\"><h2 id=\"启动注册服务中心\"><a href=\"#启动注册服务中心\" class=\"headerlink\" title=\"启动注册服务中心\"></a>启动注册服务中心</h2></li>\n<li>启动一个服务注册中心，只需要一个注解@EnableEurekaServer，这个注解需要在springboot工程的启动application类上加</li>\n<li><img src=\"https://i.imgur.com/DHZHgAU.png\" alt=\"\"><h2 id=\"eureka-server的配置文件\"><a href=\"#eureka-server的配置文件\" class=\"headerlink\" title=\"eureka server的配置文件\"></a>eureka server的配置文件</h2></li>\n<li>eureka是一个高可用的组件，它没有后端缓存，每一个实例注册之后需要向注册中心发送心跳（因此可以在内存中完成），在默认情况下erureka server也是一个eureka client ,必须要指定一个 server。eureka server的配置文件appication.yml</li>\n<li><img src=\"https://i.imgur.com/6uXm9qd.png\" alt=\"\"></li>\n<li>运行项目后：</li>\n<li><img src=\"https://i.imgur.com/CHYbFR7.png\" alt=\"\"><h2 id=\"创建一个服务提供者\"><a href=\"#创建一个服务提供者\" class=\"headerlink\" title=\"创建一个服务提供者\"></a>创建一个服务提供者</h2></li>\n<li>eureka client,当client向server注册时，它会提供一些元数据，例如主机和端口，URL,主页等。eureka server从每个client实例接收心跳消息。如果心跳超时，则通常将该实例从注册server中删除。</li>\n<li>创建过程同server类似，创建完pom.xml如下：</li>\n<li><img src=\"https://i.imgur.com/TdgjX2p.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/7dYWz7h.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/j38QtPC.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/2mORUzM.png\" alt=\"\"></li>\n<li>注解@EnableEurekaClient，表明自己是一个eurekaclient，加在项目启动类：</li>\n<li><img src=\"https://i.imgur.com/gamdgHg.png\" alt=\"\"><h2 id=\"eureka-client的配置文件\"><a href=\"#eureka-client的配置文件\" class=\"headerlink\" title=\"eureka client的配置文件\"></a>eureka client的配置文件</h2></li>\n<li><img src=\"https://i.imgur.com/CvxV4zv.png\" alt=\"\"></li>\n<li>启动工程(server和client)，打开<a href=\"http://localhost:9876\" target=\"_blank\" rel=\"noopener\">http://localhost:9876</a> ，即eureka server 的网址</li>\n<li><img src=\"https://i.imgur.com/lfmT8ut.png\" alt=\"\"><h2 id=\"添加一个简单的业务\"><a href=\"#添加一个简单的业务\" class=\"headerlink\" title=\"添加一个简单的业务\"></a>添加一个简单的业务</h2></li>\n<li><img src=\"https://i.imgur.com/0haqJao.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/vp1NCUo.png\" alt=\"\"><h2 id=\"Eureka的自我保护模式\"><a href=\"#Eureka的自我保护模式\" class=\"headerlink\" title=\"Eureka的自我保护模式\"></a>Eureka的自我保护模式</h2></li>\n<li><img src=\"https://i.imgur.com/fbzslmz.png\" alt=\"\"></li>\n<li><img src=\"https://i.imgur.com/hwMcmf6.png\" alt=\"\"></li>\n</ul>\n"},{"title":"(三)spring-cloud进阶二","date":"2018-10-16T02:43:53.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 服务消费者（rest+ribbon）(Finchley版本) #\n参考：[https://blog.csdn.net/forezp/article/details/81040946](https://blog.csdn.net/forezp/article/details/81040946 \"rest+ribbon(Finchley版本)\")\n- 在微服务架构中，业务都会被拆分成一个独立的服务，服务与服务的通讯是基于http restful的。spring cloud有两种服务调用方式，一种是ribbon+restTemplate,另一种是feign。\n- Ribbon用于负载均衡\n- RestTemplate用于消费其他服务提供的接口\n# 在IEDA下启动多个实例 #\n参考：[https://blog.csdn.net/forezp/article/details/76408139](https://blog.csdn.net/forezp/article/details/76408139 \"idea下启动多个实例\")\n- 启动eureka-server工程\n- 启动service-hi工程【启动了一个实例】\n- 修改service-hi工程的端口（在配置文件中修改），并启动【启动了另一个实例】\n- 会发现service-hi在eureka-server注册了2个实例，这就相当于一个小的集群。\n- 图解：![](https://i.imgur.com/XJx2OR2.png)![](https://i.imgur.com/GobY1oP.png)![](https://i.imgur.com/v79UfEW.png)![](https://i.imgur.com/iX5oAMH.png)![](https://i.imgur.com/pTETbLr.png)\n## 建一个服务消费者 ##\n### 创建一个spring boot项目（module） ###\n- ![](https://i.imgur.com/EhST8GI.png)![](https://i.imgur.com/j4dOGtv.png)![](https://i.imgur.com/OG29a66.png)![](https://i.imgur.com/jvRD3Hk.png)![](https://i.imgur.com/ukxfFVg.png)\n### 添加依赖 ###\n- ![](https://i.imgur.com/oytjbRQ.png)![](https://i.imgur.com/He0oPuC.png)\n### 添加配置文件 ###\n- ![](https://i.imgur.com/TEPnDff.png)\n### 在启动类向服务中心注册 ###\n- 在工程的启动类中，通过@EnableDiscoveryClient向服务注册中心注册，并且向程序的ioc注入一个bean:restTemplate;并且通过@LoadBalanced注解表明这个restTemplate开启负载均衡的功能。\n- 此处注意：spring boot注入restTemplate的方式。\n\t1. 直接在启动类用new RestTemplate()方式实例化restTemplate(如下图一所示)。\n\t2. spring boot自动注入了RestTemplateBuilder的实例，利用builder.buid()方法实例化一个RestTemplate对象（如下图二和三所示）。\n\t3. ![](https://i.imgur.com/L8oV8Cg.png)![](https://i.imgur.com/E7XnZc9.png)![](https://i.imgur.com/getFM2R.png)\n### 通过restTemplate来消费其他服务的接口 ###\n- 编写测试类HelloService，通过之前注入的ioc的restTemplate来消费service-hi服务的\"/hi\"接口，此处直接用程序名替代了具体的url地址，在ribbon中它会根据服务名（前提是restTemplate加了负载均衡的注解@Loadbalanced）选着具体的服务实例，根据服务实例在请求的时候会用具体的url替换掉服务名。\n- ![](https://i.imgur.com/YywSlFk.png)![](https://i.imgur.com/aaDmO6i.png)\n- 运行结果：![](https://i.imgur.com/LFk4sL2.png)![](https://i.imgur.com/T5BLAq9.png)\n- 刷新后：浏览器交替显示，说明调用restTemplate.getForObject(“http://SERVICE-HI/hi?name=”+name,String.class)方法时，已经做了负载均衡，访问了不同的端口的服务实例 ![](https://i.imgur.com/MYrdJoP.png)\n- 此时的架构：![](https://i.imgur.com/eIMdbMC.png)","source":"_posts/(三)spring-cloud进阶二.md","raw":"---\ntitle: (三)spring-cloud进阶二\ndate: 2018-10-16 10:43:53\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 服务消费者（rest+ribbon）(Finchley版本) #\n参考：[https://blog.csdn.net/forezp/article/details/81040946](https://blog.csdn.net/forezp/article/details/81040946 \"rest+ribbon(Finchley版本)\")\n- 在微服务架构中，业务都会被拆分成一个独立的服务，服务与服务的通讯是基于http restful的。spring cloud有两种服务调用方式，一种是ribbon+restTemplate,另一种是feign。\n- Ribbon用于负载均衡\n- RestTemplate用于消费其他服务提供的接口\n# 在IEDA下启动多个实例 #\n参考：[https://blog.csdn.net/forezp/article/details/76408139](https://blog.csdn.net/forezp/article/details/76408139 \"idea下启动多个实例\")\n- 启动eureka-server工程\n- 启动service-hi工程【启动了一个实例】\n- 修改service-hi工程的端口（在配置文件中修改），并启动【启动了另一个实例】\n- 会发现service-hi在eureka-server注册了2个实例，这就相当于一个小的集群。\n- 图解：![](https://i.imgur.com/XJx2OR2.png)![](https://i.imgur.com/GobY1oP.png)![](https://i.imgur.com/v79UfEW.png)![](https://i.imgur.com/iX5oAMH.png)![](https://i.imgur.com/pTETbLr.png)\n## 建一个服务消费者 ##\n### 创建一个spring boot项目（module） ###\n- ![](https://i.imgur.com/EhST8GI.png)![](https://i.imgur.com/j4dOGtv.png)![](https://i.imgur.com/OG29a66.png)![](https://i.imgur.com/jvRD3Hk.png)![](https://i.imgur.com/ukxfFVg.png)\n### 添加依赖 ###\n- ![](https://i.imgur.com/oytjbRQ.png)![](https://i.imgur.com/He0oPuC.png)\n### 添加配置文件 ###\n- ![](https://i.imgur.com/TEPnDff.png)\n### 在启动类向服务中心注册 ###\n- 在工程的启动类中，通过@EnableDiscoveryClient向服务注册中心注册，并且向程序的ioc注入一个bean:restTemplate;并且通过@LoadBalanced注解表明这个restTemplate开启负载均衡的功能。\n- 此处注意：spring boot注入restTemplate的方式。\n\t1. 直接在启动类用new RestTemplate()方式实例化restTemplate(如下图一所示)。\n\t2. spring boot自动注入了RestTemplateBuilder的实例，利用builder.buid()方法实例化一个RestTemplate对象（如下图二和三所示）。\n\t3. ![](https://i.imgur.com/L8oV8Cg.png)![](https://i.imgur.com/E7XnZc9.png)![](https://i.imgur.com/getFM2R.png)\n### 通过restTemplate来消费其他服务的接口 ###\n- 编写测试类HelloService，通过之前注入的ioc的restTemplate来消费service-hi服务的\"/hi\"接口，此处直接用程序名替代了具体的url地址，在ribbon中它会根据服务名（前提是restTemplate加了负载均衡的注解@Loadbalanced）选着具体的服务实例，根据服务实例在请求的时候会用具体的url替换掉服务名。\n- ![](https://i.imgur.com/YywSlFk.png)![](https://i.imgur.com/aaDmO6i.png)\n- 运行结果：![](https://i.imgur.com/LFk4sL2.png)![](https://i.imgur.com/T5BLAq9.png)\n- 刷新后：浏览器交替显示，说明调用restTemplate.getForObject(“http://SERVICE-HI/hi?name=”+name,String.class)方法时，已经做了负载均衡，访问了不同的端口的服务实例 ![](https://i.imgur.com/MYrdJoP.png)\n- 此时的架构：![](https://i.imgur.com/eIMdbMC.png)","slug":"(三)spring-cloud进阶二","published":1,"updated":"2018-10-16T07:19:12.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxim0002hcr3yl9rrta1","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"服务消费者（rest-ribbon）-Finchley版本\"><a href=\"#服务消费者（rest-ribbon）-Finchley版本\" class=\"headerlink\" title=\"服务消费者（rest+ribbon）(Finchley版本)\"></a>服务消费者（rest+ribbon）(Finchley版本)</h1><p>参考：<a href=\"https://blog.csdn.net/forezp/article/details/81040946\" title=\"rest+ribbon(Finchley版本)\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/forezp/article/details/81040946</a></p>\n<ul>\n<li>在微服务架构中，业务都会被拆分成一个独立的服务，服务与服务的通讯是基于http restful的。spring cloud有两种服务调用方式，一种是ribbon+restTemplate,另一种是feign。</li>\n<li>Ribbon用于负载均衡</li>\n<li>RestTemplate用于消费其他服务提供的接口<h1 id=\"在IEDA下启动多个实例\"><a href=\"#在IEDA下启动多个实例\" class=\"headerlink\" title=\"在IEDA下启动多个实例\"></a>在IEDA下启动多个实例</h1>参考：<a href=\"https://blog.csdn.net/forezp/article/details/76408139\" title=\"idea下启动多个实例\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/forezp/article/details/76408139</a></li>\n<li>启动eureka-server工程</li>\n<li>启动service-hi工程【启动了一个实例】</li>\n<li>修改service-hi工程的端口（在配置文件中修改），并启动【启动了另一个实例】</li>\n<li>会发现service-hi在eureka-server注册了2个实例，这就相当于一个小的集群。</li>\n<li>图解：<img src=\"https://i.imgur.com/XJx2OR2.png\" alt=\"\"><img src=\"https://i.imgur.com/GobY1oP.png\" alt=\"\"><img src=\"https://i.imgur.com/v79UfEW.png\" alt=\"\"><img src=\"https://i.imgur.com/iX5oAMH.png\" alt=\"\"><img src=\"https://i.imgur.com/pTETbLr.png\" alt=\"\"><h2 id=\"建一个服务消费者\"><a href=\"#建一个服务消费者\" class=\"headerlink\" title=\"建一个服务消费者\"></a>建一个服务消费者</h2><h3 id=\"创建一个spring-boot项目（module）\"><a href=\"#创建一个spring-boot项目（module）\" class=\"headerlink\" title=\"创建一个spring boot项目（module）\"></a>创建一个spring boot项目（module）</h3></li>\n<li><img src=\"https://i.imgur.com/EhST8GI.png\" alt=\"\"><img src=\"https://i.imgur.com/j4dOGtv.png\" alt=\"\"><img src=\"https://i.imgur.com/OG29a66.png\" alt=\"\"><img src=\"https://i.imgur.com/jvRD3Hk.png\" alt=\"\"><img src=\"https://i.imgur.com/ukxfFVg.png\" alt=\"\"><h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3></li>\n<li><img src=\"https://i.imgur.com/oytjbRQ.png\" alt=\"\"><img src=\"https://i.imgur.com/He0oPuC.png\" alt=\"\"><h3 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h3></li>\n<li><img src=\"https://i.imgur.com/TEPnDff.png\" alt=\"\"><h3 id=\"在启动类向服务中心注册\"><a href=\"#在启动类向服务中心注册\" class=\"headerlink\" title=\"在启动类向服务中心注册\"></a>在启动类向服务中心注册</h3></li>\n<li>在工程的启动类中，通过@EnableDiscoveryClient向服务注册中心注册，并且向程序的ioc注入一个bean:restTemplate;并且通过@LoadBalanced注解表明这个restTemplate开启负载均衡的功能。</li>\n<li>此处注意：spring boot注入restTemplate的方式。<ol>\n<li>直接在启动类用new RestTemplate()方式实例化restTemplate(如下图一所示)。</li>\n<li>spring boot自动注入了RestTemplateBuilder的实例，利用builder.buid()方法实例化一个RestTemplate对象（如下图二和三所示）。</li>\n<li><img src=\"https://i.imgur.com/L8oV8Cg.png\" alt=\"\"><img src=\"https://i.imgur.com/E7XnZc9.png\" alt=\"\"><img src=\"https://i.imgur.com/getFM2R.png\" alt=\"\"><h3 id=\"通过restTemplate来消费其他服务的接口\"><a href=\"#通过restTemplate来消费其他服务的接口\" class=\"headerlink\" title=\"通过restTemplate来消费其他服务的接口\"></a>通过restTemplate来消费其他服务的接口</h3></li>\n</ol>\n</li>\n<li>编写测试类HelloService，通过之前注入的ioc的restTemplate来消费service-hi服务的”/hi”接口，此处直接用程序名替代了具体的url地址，在ribbon中它会根据服务名（前提是restTemplate加了负载均衡的注解@Loadbalanced）选着具体的服务实例，根据服务实例在请求的时候会用具体的url替换掉服务名。</li>\n<li><img src=\"https://i.imgur.com/YywSlFk.png\" alt=\"\"><img src=\"https://i.imgur.com/aaDmO6i.png\" alt=\"\"></li>\n<li>运行结果：<img src=\"https://i.imgur.com/LFk4sL2.png\" alt=\"\"><img src=\"https://i.imgur.com/T5BLAq9.png\" alt=\"\"></li>\n<li>刷新后：浏览器交替显示，说明调用restTemplate.getForObject(“<a href=\"http://SERVICE-HI/hi?name=”+name,String.class)方法时，已经做了负载均衡，访问了不同的端口的服务实例\" target=\"_blank\" rel=\"noopener\">http://SERVICE-HI/hi?name=”+name,String.class)方法时，已经做了负载均衡，访问了不同的端口的服务实例</a> <img src=\"https://i.imgur.com/MYrdJoP.png\" alt=\"\"></li>\n<li>此时的架构：<img src=\"https://i.imgur.com/eIMdbMC.png\" alt=\"\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"服务消费者（rest-ribbon）-Finchley版本\"><a href=\"#服务消费者（rest-ribbon）-Finchley版本\" class=\"headerlink\" title=\"服务消费者（rest+ribbon）(Finchley版本)\"></a>服务消费者（rest+ribbon）(Finchley版本)</h1><p>参考：<a href=\"https://blog.csdn.net/forezp/article/details/81040946\" title=\"rest+ribbon(Finchley版本)\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/forezp/article/details/81040946</a></p>\n<ul>\n<li>在微服务架构中，业务都会被拆分成一个独立的服务，服务与服务的通讯是基于http restful的。spring cloud有两种服务调用方式，一种是ribbon+restTemplate,另一种是feign。</li>\n<li>Ribbon用于负载均衡</li>\n<li>RestTemplate用于消费其他服务提供的接口<h1 id=\"在IEDA下启动多个实例\"><a href=\"#在IEDA下启动多个实例\" class=\"headerlink\" title=\"在IEDA下启动多个实例\"></a>在IEDA下启动多个实例</h1>参考：<a href=\"https://blog.csdn.net/forezp/article/details/76408139\" title=\"idea下启动多个实例\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/forezp/article/details/76408139</a></li>\n<li>启动eureka-server工程</li>\n<li>启动service-hi工程【启动了一个实例】</li>\n<li>修改service-hi工程的端口（在配置文件中修改），并启动【启动了另一个实例】</li>\n<li>会发现service-hi在eureka-server注册了2个实例，这就相当于一个小的集群。</li>\n<li>图解：<img src=\"https://i.imgur.com/XJx2OR2.png\" alt=\"\"><img src=\"https://i.imgur.com/GobY1oP.png\" alt=\"\"><img src=\"https://i.imgur.com/v79UfEW.png\" alt=\"\"><img src=\"https://i.imgur.com/iX5oAMH.png\" alt=\"\"><img src=\"https://i.imgur.com/pTETbLr.png\" alt=\"\"><h2 id=\"建一个服务消费者\"><a href=\"#建一个服务消费者\" class=\"headerlink\" title=\"建一个服务消费者\"></a>建一个服务消费者</h2><h3 id=\"创建一个spring-boot项目（module）\"><a href=\"#创建一个spring-boot项目（module）\" class=\"headerlink\" title=\"创建一个spring boot项目（module）\"></a>创建一个spring boot项目（module）</h3></li>\n<li><img src=\"https://i.imgur.com/EhST8GI.png\" alt=\"\"><img src=\"https://i.imgur.com/j4dOGtv.png\" alt=\"\"><img src=\"https://i.imgur.com/OG29a66.png\" alt=\"\"><img src=\"https://i.imgur.com/jvRD3Hk.png\" alt=\"\"><img src=\"https://i.imgur.com/ukxfFVg.png\" alt=\"\"><h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3></li>\n<li><img src=\"https://i.imgur.com/oytjbRQ.png\" alt=\"\"><img src=\"https://i.imgur.com/He0oPuC.png\" alt=\"\"><h3 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h3></li>\n<li><img src=\"https://i.imgur.com/TEPnDff.png\" alt=\"\"><h3 id=\"在启动类向服务中心注册\"><a href=\"#在启动类向服务中心注册\" class=\"headerlink\" title=\"在启动类向服务中心注册\"></a>在启动类向服务中心注册</h3></li>\n<li>在工程的启动类中，通过@EnableDiscoveryClient向服务注册中心注册，并且向程序的ioc注入一个bean:restTemplate;并且通过@LoadBalanced注解表明这个restTemplate开启负载均衡的功能。</li>\n<li>此处注意：spring boot注入restTemplate的方式。<ol>\n<li>直接在启动类用new RestTemplate()方式实例化restTemplate(如下图一所示)。</li>\n<li>spring boot自动注入了RestTemplateBuilder的实例，利用builder.buid()方法实例化一个RestTemplate对象（如下图二和三所示）。</li>\n<li><img src=\"https://i.imgur.com/L8oV8Cg.png\" alt=\"\"><img src=\"https://i.imgur.com/E7XnZc9.png\" alt=\"\"><img src=\"https://i.imgur.com/getFM2R.png\" alt=\"\"><h3 id=\"通过restTemplate来消费其他服务的接口\"><a href=\"#通过restTemplate来消费其他服务的接口\" class=\"headerlink\" title=\"通过restTemplate来消费其他服务的接口\"></a>通过restTemplate来消费其他服务的接口</h3></li>\n</ol>\n</li>\n<li>编写测试类HelloService，通过之前注入的ioc的restTemplate来消费service-hi服务的”/hi”接口，此处直接用程序名替代了具体的url地址，在ribbon中它会根据服务名（前提是restTemplate加了负载均衡的注解@Loadbalanced）选着具体的服务实例，根据服务实例在请求的时候会用具体的url替换掉服务名。</li>\n<li><img src=\"https://i.imgur.com/YywSlFk.png\" alt=\"\"><img src=\"https://i.imgur.com/aaDmO6i.png\" alt=\"\"></li>\n<li>运行结果：<img src=\"https://i.imgur.com/LFk4sL2.png\" alt=\"\"><img src=\"https://i.imgur.com/T5BLAq9.png\" alt=\"\"></li>\n<li>刷新后：浏览器交替显示，说明调用restTemplate.getForObject(“<a href=\"http://SERVICE-HI/hi?name=”+name,String.class)方法时，已经做了负载均衡，访问了不同的端口的服务实例\" target=\"_blank\" rel=\"noopener\">http://SERVICE-HI/hi?name=”+name,String.class)方法时，已经做了负载均衡，访问了不同的端口的服务实例</a> <img src=\"https://i.imgur.com/MYrdJoP.png\" alt=\"\"></li>\n<li>此时的架构：<img src=\"https://i.imgur.com/eIMdbMC.png\" alt=\"\"></li>\n</ul>\n"},{"title":"(五)spring cloud进阶四——断路器(Hystrix)(Finchley版本)","date":"2018-10-25T06:44:28.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 断路器(Hystrix)(Finchley版本) #\n- 在微服务架构中，根据业务来拆分成一个个的服务，服务与服务间可以相互调用(RPC)，在spring cloud可以用RestTemplate+Ribbon和Feign来调用服务。为了保证其高可用，单个服务通常会集群部署。但由于网络或自身原因，服务并不能保证100%可用，如果单个服务出现了问题，调用服务就会出现线程阻塞，此时若有大量的请求涌入，Servlet容器的线程资源就会被消耗完毕，导致服务瘫痪，因为服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的“雪崩”效应。\n- 为了解决这个问题，业界提出了断路器模型：![](https://i.imgur.com/Ij52NVO.png)![](https://i.imgur.com/QaS6wog.png)\n- 启动eureka-server工程；启动service-hi工程，它的端口为9873。\n# 在ribbon中使用断路器 #\n改造service-ribbon工程的代码\n## 添加hystrix的依赖 ##\n- 添加依赖：spring-cloud-starter-netflix-hystrix![](https://i.imgur.com/jFUVvZj.png)\n## 在启动类开启断路器 ##\n- 在启动类添加@EnableHystrix注解，开启断路器的功能，用于控制servlet容器的线程阻塞。![](https://i.imgur.com/9CE0Zr1.png)\n## 改造HelloService类 ##\n- 改造HelloService类，在hiService方法上加上@HystrixCommand注解，该注解为该方法创建了熔断器功能，并指定了fallbackMethod熔断方法，此处的熔断方法直接返回一个字符串。![](https://i.imgur.com/uyeUM43.png)\n## 启动service-ribbon工程 ##\n- 访问：localhost:9871/hi?name=qinhs\n- 浏览器显示（注意，若service-hi服务正常启动，该服务的/hi接口能正常访问）：![](https://i.imgur.com/yPDUy1l.png)【ps:该图片是service-hi服务正常启动时】\n- 关闭service-hi：当service-hi服务不可用时（如未正常启动），service-ribbon调用service-hi的API接口时，会执行快速失败，直接调用熔断方法（返回字符串），而不是等待响应超时，这就很好地控制了容器地线程阻塞。![](https://i.imgur.com/jcMva5H.png)\n# 在feign使用断路器 #\n- feign是自带断路器的，在D版本的Spring cloud之后，它没有默认打开。需要在配饰文件中配置打开它，在配置文件加以下代码：\n>dd\n\t\tfeign hystrix enabled=true\n\n\n## 改造service-feign工程 ##\n- Feign自带断路器，只需要在FeignClient的schedualServiceHi（定义的Feign接口）接口的注解（@FeignClient注解）中加上fallback的指定类就行了：![](https://i.imgur.com/7O2ryir.png)\n- 注意：SchedualServiceHiHystriclmpl类要实现SchedualserviceHi接口，并使用@Component注解：![](https://i.imgur.com/iVcpoDE.png)\n## 启动service-feign工程 ##\n- 此时没有启动service-hi工程，启动service-feign工程，出现超时问题：![](https://i.imgur.com/wPLnk7B.png)\n- 解决办法：真正原因是忘了加@Component注解，断路器指定的返回方法找不到：![](https://i.imgur.com/iFp2SWu.png)![](https://i.imgur.com/KmfmWRm.png)\n- 启动service-hi工程后（证明熔断器起到了作用）![](https://i.imgur.com/LNKpPas.png)","source":"_posts/(五)spring-cloud进阶四.md","raw":"---\ntitle: (五)spring cloud进阶四——断路器(Hystrix)(Finchley版本)\ndate: 2018-10-25 14:44:28\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 断路器(Hystrix)(Finchley版本) #\n- 在微服务架构中，根据业务来拆分成一个个的服务，服务与服务间可以相互调用(RPC)，在spring cloud可以用RestTemplate+Ribbon和Feign来调用服务。为了保证其高可用，单个服务通常会集群部署。但由于网络或自身原因，服务并不能保证100%可用，如果单个服务出现了问题，调用服务就会出现线程阻塞，此时若有大量的请求涌入，Servlet容器的线程资源就会被消耗完毕，导致服务瘫痪，因为服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的“雪崩”效应。\n- 为了解决这个问题，业界提出了断路器模型：![](https://i.imgur.com/Ij52NVO.png)![](https://i.imgur.com/QaS6wog.png)\n- 启动eureka-server工程；启动service-hi工程，它的端口为9873。\n# 在ribbon中使用断路器 #\n改造service-ribbon工程的代码\n## 添加hystrix的依赖 ##\n- 添加依赖：spring-cloud-starter-netflix-hystrix![](https://i.imgur.com/jFUVvZj.png)\n## 在启动类开启断路器 ##\n- 在启动类添加@EnableHystrix注解，开启断路器的功能，用于控制servlet容器的线程阻塞。![](https://i.imgur.com/9CE0Zr1.png)\n## 改造HelloService类 ##\n- 改造HelloService类，在hiService方法上加上@HystrixCommand注解，该注解为该方法创建了熔断器功能，并指定了fallbackMethod熔断方法，此处的熔断方法直接返回一个字符串。![](https://i.imgur.com/uyeUM43.png)\n## 启动service-ribbon工程 ##\n- 访问：localhost:9871/hi?name=qinhs\n- 浏览器显示（注意，若service-hi服务正常启动，该服务的/hi接口能正常访问）：![](https://i.imgur.com/yPDUy1l.png)【ps:该图片是service-hi服务正常启动时】\n- 关闭service-hi：当service-hi服务不可用时（如未正常启动），service-ribbon调用service-hi的API接口时，会执行快速失败，直接调用熔断方法（返回字符串），而不是等待响应超时，这就很好地控制了容器地线程阻塞。![](https://i.imgur.com/jcMva5H.png)\n# 在feign使用断路器 #\n- feign是自带断路器的，在D版本的Spring cloud之后，它没有默认打开。需要在配饰文件中配置打开它，在配置文件加以下代码：\n>dd\n\t\tfeign hystrix enabled=true\n\n\n## 改造service-feign工程 ##\n- Feign自带断路器，只需要在FeignClient的schedualServiceHi（定义的Feign接口）接口的注解（@FeignClient注解）中加上fallback的指定类就行了：![](https://i.imgur.com/7O2ryir.png)\n- 注意：SchedualServiceHiHystriclmpl类要实现SchedualserviceHi接口，并使用@Component注解：![](https://i.imgur.com/iVcpoDE.png)\n## 启动service-feign工程 ##\n- 此时没有启动service-hi工程，启动service-feign工程，出现超时问题：![](https://i.imgur.com/wPLnk7B.png)\n- 解决办法：真正原因是忘了加@Component注解，断路器指定的返回方法找不到：![](https://i.imgur.com/iFp2SWu.png)![](https://i.imgur.com/KmfmWRm.png)\n- 启动service-hi工程后（证明熔断器起到了作用）![](https://i.imgur.com/LNKpPas.png)","slug":"(五)spring-cloud进阶四","published":1,"updated":"2018-10-29T02:08:05.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxis0003hcr37s3uzsfa","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"断路器-Hystrix-Finchley版本\"><a href=\"#断路器-Hystrix-Finchley版本\" class=\"headerlink\" title=\"断路器(Hystrix)(Finchley版本)\"></a>断路器(Hystrix)(Finchley版本)</h1><ul>\n<li>在微服务架构中，根据业务来拆分成一个个的服务，服务与服务间可以相互调用(RPC)，在spring cloud可以用RestTemplate+Ribbon和Feign来调用服务。为了保证其高可用，单个服务通常会集群部署。但由于网络或自身原因，服务并不能保证100%可用，如果单个服务出现了问题，调用服务就会出现线程阻塞，此时若有大量的请求涌入，Servlet容器的线程资源就会被消耗完毕，导致服务瘫痪，因为服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的“雪崩”效应。</li>\n<li>为了解决这个问题，业界提出了断路器模型：<img src=\"https://i.imgur.com/Ij52NVO.png\" alt=\"\"><img src=\"https://i.imgur.com/QaS6wog.png\" alt=\"\"></li>\n<li>启动eureka-server工程；启动service-hi工程，它的端口为9873。<h1 id=\"在ribbon中使用断路器\"><a href=\"#在ribbon中使用断路器\" class=\"headerlink\" title=\"在ribbon中使用断路器\"></a>在ribbon中使用断路器</h1>改造service-ribbon工程的代码<h2 id=\"添加hystrix的依赖\"><a href=\"#添加hystrix的依赖\" class=\"headerlink\" title=\"添加hystrix的依赖\"></a>添加hystrix的依赖</h2></li>\n<li>添加依赖：spring-cloud-starter-netflix-hystrix<img src=\"https://i.imgur.com/jFUVvZj.png\" alt=\"\"><h2 id=\"在启动类开启断路器\"><a href=\"#在启动类开启断路器\" class=\"headerlink\" title=\"在启动类开启断路器\"></a>在启动类开启断路器</h2></li>\n<li>在启动类添加@EnableHystrix注解，开启断路器的功能，用于控制servlet容器的线程阻塞。<img src=\"https://i.imgur.com/9CE0Zr1.png\" alt=\"\"><h2 id=\"改造HelloService类\"><a href=\"#改造HelloService类\" class=\"headerlink\" title=\"改造HelloService类\"></a>改造HelloService类</h2></li>\n<li>改造HelloService类，在hiService方法上加上@HystrixCommand注解，该注解为该方法创建了熔断器功能，并指定了fallbackMethod熔断方法，此处的熔断方法直接返回一个字符串。<img src=\"https://i.imgur.com/uyeUM43.png\" alt=\"\"><h2 id=\"启动service-ribbon工程\"><a href=\"#启动service-ribbon工程\" class=\"headerlink\" title=\"启动service-ribbon工程\"></a>启动service-ribbon工程</h2></li>\n<li>访问：localhost:9871/hi?name=qinhs</li>\n<li>浏览器显示（注意，若service-hi服务正常启动，该服务的/hi接口能正常访问）：<img src=\"https://i.imgur.com/yPDUy1l.png\" alt=\"\">【ps:该图片是service-hi服务正常启动时】</li>\n<li>关闭service-hi：当service-hi服务不可用时（如未正常启动），service-ribbon调用service-hi的API接口时，会执行快速失败，直接调用熔断方法（返回字符串），而不是等待响应超时，这就很好地控制了容器地线程阻塞。<img src=\"https://i.imgur.com/jcMva5H.png\" alt=\"\"><h1 id=\"在feign使用断路器\"><a href=\"#在feign使用断路器\" class=\"headerlink\" title=\"在feign使用断路器\"></a>在feign使用断路器</h1></li>\n<li>feign是自带断路器的，在D版本的Spring cloud之后，它没有默认打开。需要在配饰文件中配置打开它，在配置文件加以下代码：<blockquote>\n<p>dd</p>\n<pre><code>feign hystrix enabled=true\n</code></pre></blockquote>\n</li>\n</ul>\n<h2 id=\"改造service-feign工程\"><a href=\"#改造service-feign工程\" class=\"headerlink\" title=\"改造service-feign工程\"></a>改造service-feign工程</h2><ul>\n<li>Feign自带断路器，只需要在FeignClient的schedualServiceHi（定义的Feign接口）接口的注解（@FeignClient注解）中加上fallback的指定类就行了：<img src=\"https://i.imgur.com/7O2ryir.png\" alt=\"\"></li>\n<li>注意：SchedualServiceHiHystriclmpl类要实现SchedualserviceHi接口，并使用@Component注解：<img src=\"https://i.imgur.com/iVcpoDE.png\" alt=\"\"><h2 id=\"启动service-feign工程\"><a href=\"#启动service-feign工程\" class=\"headerlink\" title=\"启动service-feign工程\"></a>启动service-feign工程</h2></li>\n<li>此时没有启动service-hi工程，启动service-feign工程，出现超时问题：<img src=\"https://i.imgur.com/wPLnk7B.png\" alt=\"\"></li>\n<li>解决办法：真正原因是忘了加@Component注解，断路器指定的返回方法找不到：<img src=\"https://i.imgur.com/iFp2SWu.png\" alt=\"\"><img src=\"https://i.imgur.com/KmfmWRm.png\" alt=\"\"></li>\n<li>启动service-hi工程后（证明熔断器起到了作用）<img src=\"https://i.imgur.com/LNKpPas.png\" alt=\"\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"断路器-Hystrix-Finchley版本\"><a href=\"#断路器-Hystrix-Finchley版本\" class=\"headerlink\" title=\"断路器(Hystrix)(Finchley版本)\"></a>断路器(Hystrix)(Finchley版本)</h1><ul>\n<li>在微服务架构中，根据业务来拆分成一个个的服务，服务与服务间可以相互调用(RPC)，在spring cloud可以用RestTemplate+Ribbon和Feign来调用服务。为了保证其高可用，单个服务通常会集群部署。但由于网络或自身原因，服务并不能保证100%可用，如果单个服务出现了问题，调用服务就会出现线程阻塞，此时若有大量的请求涌入，Servlet容器的线程资源就会被消耗完毕，导致服务瘫痪，因为服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的“雪崩”效应。</li>\n<li>为了解决这个问题，业界提出了断路器模型：<img src=\"https://i.imgur.com/Ij52NVO.png\" alt=\"\"><img src=\"https://i.imgur.com/QaS6wog.png\" alt=\"\"></li>\n<li>启动eureka-server工程；启动service-hi工程，它的端口为9873。<h1 id=\"在ribbon中使用断路器\"><a href=\"#在ribbon中使用断路器\" class=\"headerlink\" title=\"在ribbon中使用断路器\"></a>在ribbon中使用断路器</h1>改造service-ribbon工程的代码<h2 id=\"添加hystrix的依赖\"><a href=\"#添加hystrix的依赖\" class=\"headerlink\" title=\"添加hystrix的依赖\"></a>添加hystrix的依赖</h2></li>\n<li>添加依赖：spring-cloud-starter-netflix-hystrix<img src=\"https://i.imgur.com/jFUVvZj.png\" alt=\"\"><h2 id=\"在启动类开启断路器\"><a href=\"#在启动类开启断路器\" class=\"headerlink\" title=\"在启动类开启断路器\"></a>在启动类开启断路器</h2></li>\n<li>在启动类添加@EnableHystrix注解，开启断路器的功能，用于控制servlet容器的线程阻塞。<img src=\"https://i.imgur.com/9CE0Zr1.png\" alt=\"\"><h2 id=\"改造HelloService类\"><a href=\"#改造HelloService类\" class=\"headerlink\" title=\"改造HelloService类\"></a>改造HelloService类</h2></li>\n<li>改造HelloService类，在hiService方法上加上@HystrixCommand注解，该注解为该方法创建了熔断器功能，并指定了fallbackMethod熔断方法，此处的熔断方法直接返回一个字符串。<img src=\"https://i.imgur.com/uyeUM43.png\" alt=\"\"><h2 id=\"启动service-ribbon工程\"><a href=\"#启动service-ribbon工程\" class=\"headerlink\" title=\"启动service-ribbon工程\"></a>启动service-ribbon工程</h2></li>\n<li>访问：localhost:9871/hi?name=qinhs</li>\n<li>浏览器显示（注意，若service-hi服务正常启动，该服务的/hi接口能正常访问）：<img src=\"https://i.imgur.com/yPDUy1l.png\" alt=\"\">【ps:该图片是service-hi服务正常启动时】</li>\n<li>关闭service-hi：当service-hi服务不可用时（如未正常启动），service-ribbon调用service-hi的API接口时，会执行快速失败，直接调用熔断方法（返回字符串），而不是等待响应超时，这就很好地控制了容器地线程阻塞。<img src=\"https://i.imgur.com/jcMva5H.png\" alt=\"\"><h1 id=\"在feign使用断路器\"><a href=\"#在feign使用断路器\" class=\"headerlink\" title=\"在feign使用断路器\"></a>在feign使用断路器</h1></li>\n<li>feign是自带断路器的，在D版本的Spring cloud之后，它没有默认打开。需要在配饰文件中配置打开它，在配置文件加以下代码：<blockquote>\n<p>dd</p>\n<pre><code>feign hystrix enabled=true\n</code></pre></blockquote>\n</li>\n</ul>\n<h2 id=\"改造service-feign工程\"><a href=\"#改造service-feign工程\" class=\"headerlink\" title=\"改造service-feign工程\"></a>改造service-feign工程</h2><ul>\n<li>Feign自带断路器，只需要在FeignClient的schedualServiceHi（定义的Feign接口）接口的注解（@FeignClient注解）中加上fallback的指定类就行了：<img src=\"https://i.imgur.com/7O2ryir.png\" alt=\"\"></li>\n<li>注意：SchedualServiceHiHystriclmpl类要实现SchedualserviceHi接口，并使用@Component注解：<img src=\"https://i.imgur.com/iVcpoDE.png\" alt=\"\"><h2 id=\"启动service-feign工程\"><a href=\"#启动service-feign工程\" class=\"headerlink\" title=\"启动service-feign工程\"></a>启动service-feign工程</h2></li>\n<li>此时没有启动service-hi工程，启动service-feign工程，出现超时问题：<img src=\"https://i.imgur.com/wPLnk7B.png\" alt=\"\"></li>\n<li>解决办法：真正原因是忘了加@Component注解，断路器指定的返回方法找不到：<img src=\"https://i.imgur.com/iFp2SWu.png\" alt=\"\"><img src=\"https://i.imgur.com/KmfmWRm.png\" alt=\"\"></li>\n<li>启动service-hi工程后（证明熔断器起到了作用）<img src=\"https://i.imgur.com/LNKpPas.png\" alt=\"\"></li>\n</ul>\n"},{"title":"(四)spring cloud进阶三——服务消费者（feign）(Finchley版本)","date":"2018-10-16T07:47:59.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 服务消费者（Feign）(Finchley版本) #\n- Feign是一个声明式的伪Http客户端，它使得写http客户端变得更简单。使用feign,只需要创建一个接口并注解。它具有可插拔的注解特性，可使用Feign注解和JAX-RS注解。Feign支持可插拔的编码器和解码器。Feign默认集成了Ribbon，并和Eureka结合，默认实现了负载均衡的效果。\n- 和上个教程一样，启动两个service-hi工程的实例【9873，9872端口】\n# 创建一个Feign的服务 #\n## 创建一个spring boot项目（module） ##\n- 参照上个教程的创建方法\n## 添加依赖 ##\n- 注意依赖名称，新版本：openfeign;老版本：feign![](https://i.imgur.com/TbyXNZe.png)\n## 添加配置文件 ##\n- 配置文件application.yml![](https://i.imgur.com/x6Amdxw.png)\n## 在启动类开启feign的功能 ##\n- 在工程的启动类ServiceFeignApplication，加上@EnableFeignClients注解开启Feign的功能。![](https://i.imgur.com/44FKnjL.png)\n## 定义feign接口调用其他服务 ##\n- 定义一个Feign接口，通过@FeignClient（“服务名”），来指定调用哪个服务，比如在代码中调用了service-hi服务的“hi”接口：(注意，只用定义接口，消费的是其他服务)。![](https://i.imgur.com/BcnyNnf.png)\n## 在controller层对外暴露api接口 ##\n- 在web层的controller层，对外暴露一个“/hi”的API接口，通过上面定义的Feign客户端SchedualServiceHi来消费服务。![](https://i.imgur.com/gVTSL9a.png)\n- 启动程序，运行结果：![](https://i.imgur.com/KTxBBmM.png)\n- 结果是浏览器交替显示，即做了负载均衡，交替消费两个运行的实例，与上个教程的效果一致。\n- ![](https://i.imgur.com/AwlTkSg.png)刷新后：![](https://i.imgur.com/QlzLi6X.png)","source":"_posts/(四)spring-cloud进阶三.md","raw":"---\ntitle: (四)spring cloud进阶三——服务消费者（feign）(Finchley版本)\ndate: 2018-10-16 15:47:59\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 服务消费者（Feign）(Finchley版本) #\n- Feign是一个声明式的伪Http客户端，它使得写http客户端变得更简单。使用feign,只需要创建一个接口并注解。它具有可插拔的注解特性，可使用Feign注解和JAX-RS注解。Feign支持可插拔的编码器和解码器。Feign默认集成了Ribbon，并和Eureka结合，默认实现了负载均衡的效果。\n- 和上个教程一样，启动两个service-hi工程的实例【9873，9872端口】\n# 创建一个Feign的服务 #\n## 创建一个spring boot项目（module） ##\n- 参照上个教程的创建方法\n## 添加依赖 ##\n- 注意依赖名称，新版本：openfeign;老版本：feign![](https://i.imgur.com/TbyXNZe.png)\n## 添加配置文件 ##\n- 配置文件application.yml![](https://i.imgur.com/x6Amdxw.png)\n## 在启动类开启feign的功能 ##\n- 在工程的启动类ServiceFeignApplication，加上@EnableFeignClients注解开启Feign的功能。![](https://i.imgur.com/44FKnjL.png)\n## 定义feign接口调用其他服务 ##\n- 定义一个Feign接口，通过@FeignClient（“服务名”），来指定调用哪个服务，比如在代码中调用了service-hi服务的“hi”接口：(注意，只用定义接口，消费的是其他服务)。![](https://i.imgur.com/BcnyNnf.png)\n## 在controller层对外暴露api接口 ##\n- 在web层的controller层，对外暴露一个“/hi”的API接口，通过上面定义的Feign客户端SchedualServiceHi来消费服务。![](https://i.imgur.com/gVTSL9a.png)\n- 启动程序，运行结果：![](https://i.imgur.com/KTxBBmM.png)\n- 结果是浏览器交替显示，即做了负载均衡，交替消费两个运行的实例，与上个教程的效果一致。\n- ![](https://i.imgur.com/AwlTkSg.png)刷新后：![](https://i.imgur.com/QlzLi6X.png)","slug":"(四)spring-cloud进阶三","published":1,"updated":"2018-10-16T08:27:14.008Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxiv0004hcr3te14d8yc","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"服务消费者（Feign）-Finchley版本\"><a href=\"#服务消费者（Feign）-Finchley版本\" class=\"headerlink\" title=\"服务消费者（Feign）(Finchley版本)\"></a>服务消费者（Feign）(Finchley版本)</h1><ul>\n<li>Feign是一个声明式的伪Http客户端，它使得写http客户端变得更简单。使用feign,只需要创建一个接口并注解。它具有可插拔的注解特性，可使用Feign注解和JAX-RS注解。Feign支持可插拔的编码器和解码器。Feign默认集成了Ribbon，并和Eureka结合，默认实现了负载均衡的效果。</li>\n<li>和上个教程一样，启动两个service-hi工程的实例【9873，9872端口】<h1 id=\"创建一个Feign的服务\"><a href=\"#创建一个Feign的服务\" class=\"headerlink\" title=\"创建一个Feign的服务\"></a>创建一个Feign的服务</h1><h2 id=\"创建一个spring-boot项目（module）\"><a href=\"#创建一个spring-boot项目（module）\" class=\"headerlink\" title=\"创建一个spring boot项目（module）\"></a>创建一个spring boot项目（module）</h2></li>\n<li>参照上个教程的创建方法<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2></li>\n<li>注意依赖名称，新版本：openfeign;老版本：feign<img src=\"https://i.imgur.com/TbyXNZe.png\" alt=\"\"><h2 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h2></li>\n<li>配置文件application.yml<img src=\"https://i.imgur.com/x6Amdxw.png\" alt=\"\"><h2 id=\"在启动类开启feign的功能\"><a href=\"#在启动类开启feign的功能\" class=\"headerlink\" title=\"在启动类开启feign的功能\"></a>在启动类开启feign的功能</h2></li>\n<li>在工程的启动类ServiceFeignApplication，加上@EnableFeignClients注解开启Feign的功能。<img src=\"https://i.imgur.com/44FKnjL.png\" alt=\"\"><h2 id=\"定义feign接口调用其他服务\"><a href=\"#定义feign接口调用其他服务\" class=\"headerlink\" title=\"定义feign接口调用其他服务\"></a>定义feign接口调用其他服务</h2></li>\n<li>定义一个Feign接口，通过@FeignClient（“服务名”），来指定调用哪个服务，比如在代码中调用了service-hi服务的“hi”接口：(注意，只用定义接口，消费的是其他服务)。<img src=\"https://i.imgur.com/BcnyNnf.png\" alt=\"\"><h2 id=\"在controller层对外暴露api接口\"><a href=\"#在controller层对外暴露api接口\" class=\"headerlink\" title=\"在controller层对外暴露api接口\"></a>在controller层对外暴露api接口</h2></li>\n<li>在web层的controller层，对外暴露一个“/hi”的API接口，通过上面定义的Feign客户端SchedualServiceHi来消费服务。<img src=\"https://i.imgur.com/gVTSL9a.png\" alt=\"\"></li>\n<li>启动程序，运行结果：<img src=\"https://i.imgur.com/KTxBBmM.png\" alt=\"\"></li>\n<li>结果是浏览器交替显示，即做了负载均衡，交替消费两个运行的实例，与上个教程的效果一致。</li>\n<li><img src=\"https://i.imgur.com/AwlTkSg.png\" alt=\"\">刷新后：<img src=\"https://i.imgur.com/QlzLi6X.png\" alt=\"\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"服务消费者（Feign）-Finchley版本\"><a href=\"#服务消费者（Feign）-Finchley版本\" class=\"headerlink\" title=\"服务消费者（Feign）(Finchley版本)\"></a>服务消费者（Feign）(Finchley版本)</h1><ul>\n<li>Feign是一个声明式的伪Http客户端，它使得写http客户端变得更简单。使用feign,只需要创建一个接口并注解。它具有可插拔的注解特性，可使用Feign注解和JAX-RS注解。Feign支持可插拔的编码器和解码器。Feign默认集成了Ribbon，并和Eureka结合，默认实现了负载均衡的效果。</li>\n<li>和上个教程一样，启动两个service-hi工程的实例【9873，9872端口】<h1 id=\"创建一个Feign的服务\"><a href=\"#创建一个Feign的服务\" class=\"headerlink\" title=\"创建一个Feign的服务\"></a>创建一个Feign的服务</h1><h2 id=\"创建一个spring-boot项目（module）\"><a href=\"#创建一个spring-boot项目（module）\" class=\"headerlink\" title=\"创建一个spring boot项目（module）\"></a>创建一个spring boot项目（module）</h2></li>\n<li>参照上个教程的创建方法<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2></li>\n<li>注意依赖名称，新版本：openfeign;老版本：feign<img src=\"https://i.imgur.com/TbyXNZe.png\" alt=\"\"><h2 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h2></li>\n<li>配置文件application.yml<img src=\"https://i.imgur.com/x6Amdxw.png\" alt=\"\"><h2 id=\"在启动类开启feign的功能\"><a href=\"#在启动类开启feign的功能\" class=\"headerlink\" title=\"在启动类开启feign的功能\"></a>在启动类开启feign的功能</h2></li>\n<li>在工程的启动类ServiceFeignApplication，加上@EnableFeignClients注解开启Feign的功能。<img src=\"https://i.imgur.com/44FKnjL.png\" alt=\"\"><h2 id=\"定义feign接口调用其他服务\"><a href=\"#定义feign接口调用其他服务\" class=\"headerlink\" title=\"定义feign接口调用其他服务\"></a>定义feign接口调用其他服务</h2></li>\n<li>定义一个Feign接口，通过@FeignClient（“服务名”），来指定调用哪个服务，比如在代码中调用了service-hi服务的“hi”接口：(注意，只用定义接口，消费的是其他服务)。<img src=\"https://i.imgur.com/BcnyNnf.png\" alt=\"\"><h2 id=\"在controller层对外暴露api接口\"><a href=\"#在controller层对外暴露api接口\" class=\"headerlink\" title=\"在controller层对外暴露api接口\"></a>在controller层对外暴露api接口</h2></li>\n<li>在web层的controller层，对外暴露一个“/hi”的API接口，通过上面定义的Feign客户端SchedualServiceHi来消费服务。<img src=\"https://i.imgur.com/gVTSL9a.png\" alt=\"\"></li>\n<li>启动程序，运行结果：<img src=\"https://i.imgur.com/KTxBBmM.png\" alt=\"\"></li>\n<li>结果是浏览器交替显示，即做了负载均衡，交替消费两个运行的实例，与上个教程的效果一致。</li>\n<li><img src=\"https://i.imgur.com/AwlTkSg.png\" alt=\"\">刷新后：<img src=\"https://i.imgur.com/QlzLi6X.png\" alt=\"\"></li>\n</ul>\n"},{"title":"EJBCA使用教程","date":"2018-11-05T07:01:40.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# web管理界面 #\n## web页面 ##\n- 拷贝ejbca服务器“/opt/ca/ejbca-ce-6.3.1.1/p12/”下的superadmin.p12到windows，双击安装，密码“ejbca”,ejbca提供了两个界面。\n- 管理员界面(需要证书，使用刚才安装的supeadmin证书)：`https://by.cos7:8443/ejbca/adminweb/`![](https://i.imgur.com/o3c0AcR.png)\n- 用户界面：`http://by.cos7:8080/ejbca/`![](https://i.imgur.com/MPIAwpH.png)\n- 用户指南：`http://by.cos7:8080/ejbca/doc/userguide.html`\n## 用户注册 ##\n- ejbca管理员界面，打开`RA Functions->Add End Entity`菜单，填写“Required”列打勾的项。\n- 用户模板选择“EMPTY”：![](https://i.imgur.com/wKDtk0Q.png)\n- 输入用户名和密码：![](https://i.imgur.com/4mEjZId.png)\n- Common name，如果是服务器用证书，这里填域名：![](https://i.imgur.com/VIvMfTK.png)\n- 证书信息填写，证书模板选择“ENDUSER”，CA选择“dev”,Token选择“P12 file”:![](https://i.imgur.com/e5DAZKp.png)\n- 点击“Add”注册\n## 下载证书 ##\n- ejbca用户界面，打开“Enroll”-“Create Browser Certificate”菜单：![](https://i.imgur.com/0wNUVFl.png)\n- “Key length”选择“2048 bits”;“Cetificate profile”选择“ENDUSER”,点击“Enroll”按钮下载证书：![](https://i.imgur.com/pH3qyIG.png)\n## 吊销证书 ##\n- ejbca管理员界面，打开“RA Functions”—“Search End Entities”菜单。“Search end entities with status”处下拉框选择“All”，点击右边的“Search”按钮查看用户信息（下图省略其他列）勾选需要吊销的用户，点击表格下方的“Revoke Selected”按钮：![](https://i.imgur.com/4serhaB.png)\n## 更新证书 ##\n- ejbca管理员界面，打开“RA Functions”—“Search End Entities”菜单。“Search end entities with status”处下拉框选择“All”，点击右边的“Search”按钮查看用户信息（下图省略其他列）![](https://i.imgur.com/zbAzu7x.png)\n- 点击需要更新的证书用户的最右边列中的“Edit End Entity”超链接，编辑用户：![](https://i.imgur.com/8oyBfPo.png)\n- 设置“Status”为“New”，点击右边的“Save”按钮。然后输入新密码，其他项保持不变，点击页面最下方的“Save”按钮保存设置。\n## 根证书 ##\n- ejbca用户界面，打开“Retrieve”—“Fetch CA Certificates”菜单，可以下载不同格式的根证书\n## 为SSL服务器创建证书配置文件 ##\n- 在`CA Functions`下，按`Certificate Profiles`\n- 输入最终实体证书配置文件的名称，例如`SSLServerCertificateProfile`，然后按`add`\n- 选择`SSLServerCertificateProfile`并按`Edit`\n- 在`Validity`下输入365d（1年有效期)\n- 在`Key usage`下，选择`Digital Signature`数字签名和`Key encipherment`密钥加密（按住Ctrl键单击以选择多个）\n- 取消 `Allow Key Usage Override`\n- 选中 `Extended Key Usage`\n- 在`Extended Key Usage`下，选择`Server Authentication`服务器身份验证\n- 在`Available bit lengths`可用位长度，“1024位”，“2048位”和“4096位”\n- 在可用CA `Available CAs`下，选择您的CA`ManagementCA`（用于颁发服务器证书的CA)\n- 在`Type`下，选择`End Entity`\n- 按`Save`\n- 创建新证书配置文件的另一种方法是使用现有配置文件作为模板：在证书配置文件列表中，单击“克隆”固定配置文件SERVER;输入最终实体证书配置文件的名称，例如`SSLServerCertificateProfile`，然后按“从模板创建” `Create from template`;按`save`\n## 为SSL服务器创建最终实体配置文件 ##\n- 之前应该已在“为SSL服务器创建证书配置文件”部分中为SSL服务器创建了证书配置文件\n- 在`RA Functions`下，按`Edit End Entity Profiles`编辑最终实体配置文件。\n- 输入最终实体配置文件的名称，例如`SSLServerEndEntityProfile`，然后按“添加”。\n- 选择`SSLServerEndEntityProfile`并按`Edit`编辑最终实体配置文件。\n- 在主题DN字段`Subject DN Fields`下，选择`O, Organization`，然后按`Add`。\n- 在`O，Organization`中，在文本框中输入“EJBCA Edu xxx”，选中`required`复选框并取消`modifiable`可修改复选框。\n- 在主题DN字段`Subject DN`下，选择`C, Country`，然后按`Add`。\n- 在“C，Country”中，在文本框中输入`CN`china，选中`required`复选框并取消“modifiable”复选框。\n- 在主题备用字段`Subject Alternative `下，选择`DNS Name`DNS名称，然后按`Add`\n- 取消选中电子邮件域`Email Domain`\n- 在默认证书配置文件`Default Certificate Profile`下，选择`SSLServerCertificateProfile`（之前创建）。\n- 在可用证书配置文件`Available Certificate Profiles`下，选择`SSLServerEndEntityCertificateProfile`\n- 在默认CA`Default CA`下，选择`ManagementCA`（用于颁发服务器证书的CA）。\n- 在可用CA`Available CAs`下，选择`ManagementCA`（与上面相同）。\n- 在默认令牌`Default Token`下，选择用户生成`User Generated`。\n- 在可用标记`Available Tokens`下，选择“User Generated”，“P12”，“JKS”和“PEM”（按住Ctrl单击选择多个）。\n- 按`Save`\n## 申请tomcate服务器证书 ##\n- 用户注册时，证书模板选择“SERVER”,Token选择“JKS file”,其他项不变：![](https://i.imgur.com/vellQeB.png)\n- 下载证书时，在ejbca用户界面中，打开“Enroll”—“Create Keystore”菜单，输入用户名与密码，进入下面的页面![](https://i.imgur.com/D2pi1Uf.png)\n- “Key length”选择“2048 bits”；“Certificate profile”选择“SERVER”，点击“Enroll”按钮下载证书：![](https://i.imgur.com/9XHTrKd.png)\n# ejbca的web service interface #\n- ejbca系统装好了，可以管理数字证书了，但是，所有的操作都在ejbca界面中执行，挺麻烦的，因此，最合理的做法是在ejbca之上构建中间层，用户访问中间层提供的服务，中间层调用ejbca的web service interface\n## superadmin.jks证书 ##\n- ejbca提供的web service需要证书认证，证书格式：jks。对superadmin用户执行更新操作，修改“Token”值为“JKS file”![](https://i.imgur.com/2Za654a.png)\n- 保存，然后按照下载普通用户证书的步骤下载superadmin的证书\n## 初始化web service连接 ##\n- 将web service所需的jar包添加到工程中，这些jar包是下面两个目录下的所以的jar.\n>\n\t\t/opt/ca/ejbca-ce-6.3.1.1/dist/ejbca-ws-cli/lib\n\t\t/opt/ca/ejbca-ce-6.3.1.1/dist/ejbca-ws-cli\n\n- 初始化web service\n>\t  \n    \tpublic void init() {\n    \t\tif (!new File(certPath).exists()) return;\n    \t\tCryptoProviderTools.installBCProvider();\n    \t\tSystem.setProperty(\"javax.net.ssl.trustStore\", \"d:/superadmin.jks\");\n    \t\tSystem.setProperty(\"javax.net.ssl.trustStorePassword\", \"123456\");\n    \t\tSystem.setProperty(\"javax.net.ssl.keyStore\", \"d:/superadmin.jks\");\n    \t\tSystem.setProperty(\"javax.net.ssl.keyStorePassword\", \"123456\");\n    \t\tQName qname = new QName(\"http://ws.protocol.core.ejbca.org/\", \"EjbcaWSService\"); \n    \t\ttry {\n    \t\t\tEjbcaWSService service = new EjbcaWSService(new URL(\"https://ca.xmyself.com:8443/ejbca/ejbcaws/ejbcaws?wsdl\"), qname);\n    \t\t\tEjbcaWS ejbcaWS = service.getEjbcaWSPort();\n    \t\t} catch (Exception e) {\n    \t\t}\n    \t}\n\n- 注意：连接地址只能是域名，因此，连接ejbca的web service的机器要配置hosts`192.168.171.144 by.cos7`\n## 数字证书管理 ##\n- 查看用户是否已经注册\n>\n        private boolean isExist(String username) throws Exception {\n\t    \tUserMatch usermatch = new UserMatch();\n\t    \tusermatch.setMatchwith(UserMatch.MATCH_WITH_USERNAME);\n\t    \tusermatch.setMatchtype(UserMatch.MATCH_TYPE_EQUALS);\n\t    \tusermatch.setMatchvalue(username);\n\t    \ttry {\n\t    \t\tList<UserDataVOWS> users = ejbcaWS.findUser(usermatch);\n\t    \t\tif (users != null && users.size() > 0) {\n\t    \t\t\treturn true;\n\t    \t\t} else {\n\t    \t\t\treturn false;\n\t    \t\t}\n\t    \t} catch (Exception e) {\n\t    \t\tthrow new Exception(\"检查用户 \" + username() + \" 是否存在时出错：\" + e.getMessage());\n\t    \t}\n    \t}\n\n- 用户注册与更新，用的都是editUser()方法，因此要先判断是否存在.\n>\n    \n        public void editUser() throws Exception {\n\t    \tUserDataVOWS userData = new UserDataVOWS();\n\t    \tuserData.setUsername(\"testname\");//用户名\n\t    \tuserData.setPassword(\"123456\");//密码\n\t    \tuserData.setClearPwd(false);//默认\n\t    \tuserData.setSubjectDN(\"CN=\" + \"testname\"\n\t    \t\t\t+ \",OU=\" + \"testou\"\n\t    \t\t\t+ \",O=\" + \"testo\"\n\t    \t\t\t+ \",C=cn\"\n\t    \t\t\t+ \",telephoneNumber=\" + \"1234567890\"\n\t    \t\t\t);//设置唯一甄别名\n\t     \n\t    \tString pattern = \"yyyy-MM-dd HH:mm:ssZZ\"; // ISO 8601标准时间格式\n\t    \tuserData.setStartTime(DateFormatUtils.format(new Date(),pattern));//证书有效起始日期\n\t    \tuserData.setEndTime(DateFormatUtils.format(DateUtils.addDays(new Date(), 100), pattern));//结束日期\n\t     \n\t    \tuserData.setCaName(\"test\");//ca名称，ejbca的名称\n\t    \tuserData.setSubjectAltName(null);\n\t    \tuserData.setEmail(\"test@test.com\");//邮件地址\n\t    \tuserData.setStatus(UserDataVOWS.STATUS_NEW);//状态为new\n\t    \tuserData.setTokenType(UserDataVOWS.TOKEN_TYPE_P12);//设置p12格式证书\n\t    \tuserData.setEndEntityProfileName(\"user\");//终端实体模板\n\t    \tuserData.setCertificateProfileName(\"user\");//证书模板\n\t    \ttry {\n\t    \t\tejbcaWS.editUser(userData);\n\t    \t} catch (Exception e) {\n\t    \t\tthrow new Exception(e.getMessage());\n\t    \t}\n    \t}\n\n- 代码中有几处值得注意的，终端实体模板“user”和证书模板“user”需要在ejbca管理员界面中配置，并且终端实体模板“user”中要配置开启“SubjectDN”的属性如CN、OU、O、C、telephoneNumber等，还要允许修改startTime和endTime\n- 吊销证书\n> \n\t\t\n\t\tpublic void revoke(String username) throws ServiceException {\n\t    \ttry {\n\t    \t\tejbcaWS.revokeUser(username, RevokedCertInfo.REVOCATION_REASON_UNSPECIFIED, false);\n\t    \t} catch (Exception e) {\n\t    \t}\n\t    }\t\n\n- 创建证书\n>\n\t    private void createCert(String username, String password, String path) throws Exception {\n\t    \tFileOutputStream fileOutputStream = null;\n\t    \ttry {\n\t    \t\t// 创建证书文件\n\t    \t\tKeyStore ksenv = ejbcaWS.pkcs12Req(username, password, null, \"2048\", AlgorithmConstants.KEYALGORITHM_RSA);\n\t    \t\tjava.security.KeyStore ks = KeyStoreHelper.getKeyStore(ksenv.getKeystoreData(), \"PKCS12\", password);\n\t    \t\tfileOutputStream = new FileOutputStream(path + File.separator + username + \".p12\");\n\t    \t\tks.store(fileOutputStream, password.toCharArray());\n\t    \t\t// 创建密码文件\n\t    \t\tFile pwdFile = new File(path + File.separator + username + \".pwd\");\n\t    \t\tpwdFile.createNewFile();\n\t    \t\tBufferedWriter out = new BufferedWriter(new FileWriter(pwdFile));\n\t    \t\tout.write(password);\n\t    \t\tout.flush();\n\t    \t\tout.close();\n\t    \t} catch (Exception e) {\n\t    \t\tthrow new Exception(\"用户  \" + username + \" 证书创建失败：\" + e.getMessage());\n\t    \t} finally {\n\t    \t\tif (fileOutputStream != null) {\n\t    \t\t\ttry {\n\t    \t\t\t\tfileOutputStream.close();\n\t    \t\t\t} catch (IOException e) {\n\t    \t\t\t}\n\t    \t\t}\n\t    \t}\n    \t}\t\t\n\n- 证书创建在服务器上，用户调用下载证书的接口服务，返回下载地址，因此，这里需要一个下载服务器，下面介绍将nginx配置为下载服务器，文件存放的目录是/var/tmp + /download/\n>\n\n    \tlocation ^~ /download/{\n\t\t    root   /var/tmp;\n\t\t    if ($request_filename ~* ^.*?\\.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx)$){\n\t\t    \tadd_header Content-Disposition: 'attachment;';\n    \t\t}\n    \t}\n\n# 参考链接 #\n- `https://www.bbsmax.com/A/xl56xw2Yzr/`","source":"_posts/EJBCA使用教程.md","raw":"---\ntitle: EJBCA使用教程\ndate: 2018-11-05 15:01:40\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# web管理界面 #\n## web页面 ##\n- 拷贝ejbca服务器“/opt/ca/ejbca-ce-6.3.1.1/p12/”下的superadmin.p12到windows，双击安装，密码“ejbca”,ejbca提供了两个界面。\n- 管理员界面(需要证书，使用刚才安装的supeadmin证书)：`https://by.cos7:8443/ejbca/adminweb/`![](https://i.imgur.com/o3c0AcR.png)\n- 用户界面：`http://by.cos7:8080/ejbca/`![](https://i.imgur.com/MPIAwpH.png)\n- 用户指南：`http://by.cos7:8080/ejbca/doc/userguide.html`\n## 用户注册 ##\n- ejbca管理员界面，打开`RA Functions->Add End Entity`菜单，填写“Required”列打勾的项。\n- 用户模板选择“EMPTY”：![](https://i.imgur.com/wKDtk0Q.png)\n- 输入用户名和密码：![](https://i.imgur.com/4mEjZId.png)\n- Common name，如果是服务器用证书，这里填域名：![](https://i.imgur.com/VIvMfTK.png)\n- 证书信息填写，证书模板选择“ENDUSER”，CA选择“dev”,Token选择“P12 file”:![](https://i.imgur.com/e5DAZKp.png)\n- 点击“Add”注册\n## 下载证书 ##\n- ejbca用户界面，打开“Enroll”-“Create Browser Certificate”菜单：![](https://i.imgur.com/0wNUVFl.png)\n- “Key length”选择“2048 bits”;“Cetificate profile”选择“ENDUSER”,点击“Enroll”按钮下载证书：![](https://i.imgur.com/pH3qyIG.png)\n## 吊销证书 ##\n- ejbca管理员界面，打开“RA Functions”—“Search End Entities”菜单。“Search end entities with status”处下拉框选择“All”，点击右边的“Search”按钮查看用户信息（下图省略其他列）勾选需要吊销的用户，点击表格下方的“Revoke Selected”按钮：![](https://i.imgur.com/4serhaB.png)\n## 更新证书 ##\n- ejbca管理员界面，打开“RA Functions”—“Search End Entities”菜单。“Search end entities with status”处下拉框选择“All”，点击右边的“Search”按钮查看用户信息（下图省略其他列）![](https://i.imgur.com/zbAzu7x.png)\n- 点击需要更新的证书用户的最右边列中的“Edit End Entity”超链接，编辑用户：![](https://i.imgur.com/8oyBfPo.png)\n- 设置“Status”为“New”，点击右边的“Save”按钮。然后输入新密码，其他项保持不变，点击页面最下方的“Save”按钮保存设置。\n## 根证书 ##\n- ejbca用户界面，打开“Retrieve”—“Fetch CA Certificates”菜单，可以下载不同格式的根证书\n## 为SSL服务器创建证书配置文件 ##\n- 在`CA Functions`下，按`Certificate Profiles`\n- 输入最终实体证书配置文件的名称，例如`SSLServerCertificateProfile`，然后按`add`\n- 选择`SSLServerCertificateProfile`并按`Edit`\n- 在`Validity`下输入365d（1年有效期)\n- 在`Key usage`下，选择`Digital Signature`数字签名和`Key encipherment`密钥加密（按住Ctrl键单击以选择多个）\n- 取消 `Allow Key Usage Override`\n- 选中 `Extended Key Usage`\n- 在`Extended Key Usage`下，选择`Server Authentication`服务器身份验证\n- 在`Available bit lengths`可用位长度，“1024位”，“2048位”和“4096位”\n- 在可用CA `Available CAs`下，选择您的CA`ManagementCA`（用于颁发服务器证书的CA)\n- 在`Type`下，选择`End Entity`\n- 按`Save`\n- 创建新证书配置文件的另一种方法是使用现有配置文件作为模板：在证书配置文件列表中，单击“克隆”固定配置文件SERVER;输入最终实体证书配置文件的名称，例如`SSLServerCertificateProfile`，然后按“从模板创建” `Create from template`;按`save`\n## 为SSL服务器创建最终实体配置文件 ##\n- 之前应该已在“为SSL服务器创建证书配置文件”部分中为SSL服务器创建了证书配置文件\n- 在`RA Functions`下，按`Edit End Entity Profiles`编辑最终实体配置文件。\n- 输入最终实体配置文件的名称，例如`SSLServerEndEntityProfile`，然后按“添加”。\n- 选择`SSLServerEndEntityProfile`并按`Edit`编辑最终实体配置文件。\n- 在主题DN字段`Subject DN Fields`下，选择`O, Organization`，然后按`Add`。\n- 在`O，Organization`中，在文本框中输入“EJBCA Edu xxx”，选中`required`复选框并取消`modifiable`可修改复选框。\n- 在主题DN字段`Subject DN`下，选择`C, Country`，然后按`Add`。\n- 在“C，Country”中，在文本框中输入`CN`china，选中`required`复选框并取消“modifiable”复选框。\n- 在主题备用字段`Subject Alternative `下，选择`DNS Name`DNS名称，然后按`Add`\n- 取消选中电子邮件域`Email Domain`\n- 在默认证书配置文件`Default Certificate Profile`下，选择`SSLServerCertificateProfile`（之前创建）。\n- 在可用证书配置文件`Available Certificate Profiles`下，选择`SSLServerEndEntityCertificateProfile`\n- 在默认CA`Default CA`下，选择`ManagementCA`（用于颁发服务器证书的CA）。\n- 在可用CA`Available CAs`下，选择`ManagementCA`（与上面相同）。\n- 在默认令牌`Default Token`下，选择用户生成`User Generated`。\n- 在可用标记`Available Tokens`下，选择“User Generated”，“P12”，“JKS”和“PEM”（按住Ctrl单击选择多个）。\n- 按`Save`\n## 申请tomcate服务器证书 ##\n- 用户注册时，证书模板选择“SERVER”,Token选择“JKS file”,其他项不变：![](https://i.imgur.com/vellQeB.png)\n- 下载证书时，在ejbca用户界面中，打开“Enroll”—“Create Keystore”菜单，输入用户名与密码，进入下面的页面![](https://i.imgur.com/D2pi1Uf.png)\n- “Key length”选择“2048 bits”；“Certificate profile”选择“SERVER”，点击“Enroll”按钮下载证书：![](https://i.imgur.com/9XHTrKd.png)\n# ejbca的web service interface #\n- ejbca系统装好了，可以管理数字证书了，但是，所有的操作都在ejbca界面中执行，挺麻烦的，因此，最合理的做法是在ejbca之上构建中间层，用户访问中间层提供的服务，中间层调用ejbca的web service interface\n## superadmin.jks证书 ##\n- ejbca提供的web service需要证书认证，证书格式：jks。对superadmin用户执行更新操作，修改“Token”值为“JKS file”![](https://i.imgur.com/2Za654a.png)\n- 保存，然后按照下载普通用户证书的步骤下载superadmin的证书\n## 初始化web service连接 ##\n- 将web service所需的jar包添加到工程中，这些jar包是下面两个目录下的所以的jar.\n>\n\t\t/opt/ca/ejbca-ce-6.3.1.1/dist/ejbca-ws-cli/lib\n\t\t/opt/ca/ejbca-ce-6.3.1.1/dist/ejbca-ws-cli\n\n- 初始化web service\n>\t  \n    \tpublic void init() {\n    \t\tif (!new File(certPath).exists()) return;\n    \t\tCryptoProviderTools.installBCProvider();\n    \t\tSystem.setProperty(\"javax.net.ssl.trustStore\", \"d:/superadmin.jks\");\n    \t\tSystem.setProperty(\"javax.net.ssl.trustStorePassword\", \"123456\");\n    \t\tSystem.setProperty(\"javax.net.ssl.keyStore\", \"d:/superadmin.jks\");\n    \t\tSystem.setProperty(\"javax.net.ssl.keyStorePassword\", \"123456\");\n    \t\tQName qname = new QName(\"http://ws.protocol.core.ejbca.org/\", \"EjbcaWSService\"); \n    \t\ttry {\n    \t\t\tEjbcaWSService service = new EjbcaWSService(new URL(\"https://ca.xmyself.com:8443/ejbca/ejbcaws/ejbcaws?wsdl\"), qname);\n    \t\t\tEjbcaWS ejbcaWS = service.getEjbcaWSPort();\n    \t\t} catch (Exception e) {\n    \t\t}\n    \t}\n\n- 注意：连接地址只能是域名，因此，连接ejbca的web service的机器要配置hosts`192.168.171.144 by.cos7`\n## 数字证书管理 ##\n- 查看用户是否已经注册\n>\n        private boolean isExist(String username) throws Exception {\n\t    \tUserMatch usermatch = new UserMatch();\n\t    \tusermatch.setMatchwith(UserMatch.MATCH_WITH_USERNAME);\n\t    \tusermatch.setMatchtype(UserMatch.MATCH_TYPE_EQUALS);\n\t    \tusermatch.setMatchvalue(username);\n\t    \ttry {\n\t    \t\tList<UserDataVOWS> users = ejbcaWS.findUser(usermatch);\n\t    \t\tif (users != null && users.size() > 0) {\n\t    \t\t\treturn true;\n\t    \t\t} else {\n\t    \t\t\treturn false;\n\t    \t\t}\n\t    \t} catch (Exception e) {\n\t    \t\tthrow new Exception(\"检查用户 \" + username() + \" 是否存在时出错：\" + e.getMessage());\n\t    \t}\n    \t}\n\n- 用户注册与更新，用的都是editUser()方法，因此要先判断是否存在.\n>\n    \n        public void editUser() throws Exception {\n\t    \tUserDataVOWS userData = new UserDataVOWS();\n\t    \tuserData.setUsername(\"testname\");//用户名\n\t    \tuserData.setPassword(\"123456\");//密码\n\t    \tuserData.setClearPwd(false);//默认\n\t    \tuserData.setSubjectDN(\"CN=\" + \"testname\"\n\t    \t\t\t+ \",OU=\" + \"testou\"\n\t    \t\t\t+ \",O=\" + \"testo\"\n\t    \t\t\t+ \",C=cn\"\n\t    \t\t\t+ \",telephoneNumber=\" + \"1234567890\"\n\t    \t\t\t);//设置唯一甄别名\n\t     \n\t    \tString pattern = \"yyyy-MM-dd HH:mm:ssZZ\"; // ISO 8601标准时间格式\n\t    \tuserData.setStartTime(DateFormatUtils.format(new Date(),pattern));//证书有效起始日期\n\t    \tuserData.setEndTime(DateFormatUtils.format(DateUtils.addDays(new Date(), 100), pattern));//结束日期\n\t     \n\t    \tuserData.setCaName(\"test\");//ca名称，ejbca的名称\n\t    \tuserData.setSubjectAltName(null);\n\t    \tuserData.setEmail(\"test@test.com\");//邮件地址\n\t    \tuserData.setStatus(UserDataVOWS.STATUS_NEW);//状态为new\n\t    \tuserData.setTokenType(UserDataVOWS.TOKEN_TYPE_P12);//设置p12格式证书\n\t    \tuserData.setEndEntityProfileName(\"user\");//终端实体模板\n\t    \tuserData.setCertificateProfileName(\"user\");//证书模板\n\t    \ttry {\n\t    \t\tejbcaWS.editUser(userData);\n\t    \t} catch (Exception e) {\n\t    \t\tthrow new Exception(e.getMessage());\n\t    \t}\n    \t}\n\n- 代码中有几处值得注意的，终端实体模板“user”和证书模板“user”需要在ejbca管理员界面中配置，并且终端实体模板“user”中要配置开启“SubjectDN”的属性如CN、OU、O、C、telephoneNumber等，还要允许修改startTime和endTime\n- 吊销证书\n> \n\t\t\n\t\tpublic void revoke(String username) throws ServiceException {\n\t    \ttry {\n\t    \t\tejbcaWS.revokeUser(username, RevokedCertInfo.REVOCATION_REASON_UNSPECIFIED, false);\n\t    \t} catch (Exception e) {\n\t    \t}\n\t    }\t\n\n- 创建证书\n>\n\t    private void createCert(String username, String password, String path) throws Exception {\n\t    \tFileOutputStream fileOutputStream = null;\n\t    \ttry {\n\t    \t\t// 创建证书文件\n\t    \t\tKeyStore ksenv = ejbcaWS.pkcs12Req(username, password, null, \"2048\", AlgorithmConstants.KEYALGORITHM_RSA);\n\t    \t\tjava.security.KeyStore ks = KeyStoreHelper.getKeyStore(ksenv.getKeystoreData(), \"PKCS12\", password);\n\t    \t\tfileOutputStream = new FileOutputStream(path + File.separator + username + \".p12\");\n\t    \t\tks.store(fileOutputStream, password.toCharArray());\n\t    \t\t// 创建密码文件\n\t    \t\tFile pwdFile = new File(path + File.separator + username + \".pwd\");\n\t    \t\tpwdFile.createNewFile();\n\t    \t\tBufferedWriter out = new BufferedWriter(new FileWriter(pwdFile));\n\t    \t\tout.write(password);\n\t    \t\tout.flush();\n\t    \t\tout.close();\n\t    \t} catch (Exception e) {\n\t    \t\tthrow new Exception(\"用户  \" + username + \" 证书创建失败：\" + e.getMessage());\n\t    \t} finally {\n\t    \t\tif (fileOutputStream != null) {\n\t    \t\t\ttry {\n\t    \t\t\t\tfileOutputStream.close();\n\t    \t\t\t} catch (IOException e) {\n\t    \t\t\t}\n\t    \t\t}\n\t    \t}\n    \t}\t\t\n\n- 证书创建在服务器上，用户调用下载证书的接口服务，返回下载地址，因此，这里需要一个下载服务器，下面介绍将nginx配置为下载服务器，文件存放的目录是/var/tmp + /download/\n>\n\n    \tlocation ^~ /download/{\n\t\t    root   /var/tmp;\n\t\t    if ($request_filename ~* ^.*?\\.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx)$){\n\t\t    \tadd_header Content-Disposition: 'attachment;';\n    \t\t}\n    \t}\n\n# 参考链接 #\n- `https://www.bbsmax.com/A/xl56xw2Yzr/`","slug":"EJBCA使用教程","published":1,"updated":"2018-11-29T06:05:59.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxix0005hcr3gcl0nl8s","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"web管理界面\"><a href=\"#web管理界面\" class=\"headerlink\" title=\"web管理界面\"></a>web管理界面</h1><h2 id=\"web页面\"><a href=\"#web页面\" class=\"headerlink\" title=\"web页面\"></a>web页面</h2><ul>\n<li>拷贝ejbca服务器“/opt/ca/ejbca-ce-6.3.1.1/p12/”下的superadmin.p12到windows，双击安装，密码“ejbca”,ejbca提供了两个界面。</li>\n<li>管理员界面(需要证书，使用刚才安装的supeadmin证书)：<code>https://by.cos7:8443/ejbca/adminweb/</code><img src=\"https://i.imgur.com/o3c0AcR.png\" alt=\"\"></li>\n<li>用户界面：<code>http://by.cos7:8080/ejbca/</code><img src=\"https://i.imgur.com/MPIAwpH.png\" alt=\"\"></li>\n<li>用户指南：<code>http://by.cos7:8080/ejbca/doc/userguide.html</code><h2 id=\"用户注册\"><a href=\"#用户注册\" class=\"headerlink\" title=\"用户注册\"></a>用户注册</h2></li>\n<li>ejbca管理员界面，打开<code>RA Functions-&gt;Add End Entity</code>菜单，填写“Required”列打勾的项。</li>\n<li>用户模板选择“EMPTY”：<img src=\"https://i.imgur.com/wKDtk0Q.png\" alt=\"\"></li>\n<li>输入用户名和密码：<img src=\"https://i.imgur.com/4mEjZId.png\" alt=\"\"></li>\n<li>Common name，如果是服务器用证书，这里填域名：<img src=\"https://i.imgur.com/VIvMfTK.png\" alt=\"\"></li>\n<li>证书信息填写，证书模板选择“ENDUSER”，CA选择“dev”,Token选择“P12 file”:<img src=\"https://i.imgur.com/e5DAZKp.png\" alt=\"\"></li>\n<li>点击“Add”注册<h2 id=\"下载证书\"><a href=\"#下载证书\" class=\"headerlink\" title=\"下载证书\"></a>下载证书</h2></li>\n<li>ejbca用户界面，打开“Enroll”-“Create Browser Certificate”菜单：<img src=\"https://i.imgur.com/0wNUVFl.png\" alt=\"\"></li>\n<li>“Key length”选择“2048 bits”;“Cetificate profile”选择“ENDUSER”,点击“Enroll”按钮下载证书：<img src=\"https://i.imgur.com/pH3qyIG.png\" alt=\"\"><h2 id=\"吊销证书\"><a href=\"#吊销证书\" class=\"headerlink\" title=\"吊销证书\"></a>吊销证书</h2></li>\n<li>ejbca管理员界面，打开“RA Functions”—“Search End Entities”菜单。“Search end entities with status”处下拉框选择“All”，点击右边的“Search”按钮查看用户信息（下图省略其他列）勾选需要吊销的用户，点击表格下方的“Revoke Selected”按钮：<img src=\"https://i.imgur.com/4serhaB.png\" alt=\"\"><h2 id=\"更新证书\"><a href=\"#更新证书\" class=\"headerlink\" title=\"更新证书\"></a>更新证书</h2></li>\n<li>ejbca管理员界面，打开“RA Functions”—“Search End Entities”菜单。“Search end entities with status”处下拉框选择“All”，点击右边的“Search”按钮查看用户信息（下图省略其他列）<img src=\"https://i.imgur.com/zbAzu7x.png\" alt=\"\"></li>\n<li>点击需要更新的证书用户的最右边列中的“Edit End Entity”超链接，编辑用户：<img src=\"https://i.imgur.com/8oyBfPo.png\" alt=\"\"></li>\n<li>设置“Status”为“New”，点击右边的“Save”按钮。然后输入新密码，其他项保持不变，点击页面最下方的“Save”按钮保存设置。<h2 id=\"根证书\"><a href=\"#根证书\" class=\"headerlink\" title=\"根证书\"></a>根证书</h2></li>\n<li>ejbca用户界面，打开“Retrieve”—“Fetch CA Certificates”菜单，可以下载不同格式的根证书<h2 id=\"为SSL服务器创建证书配置文件\"><a href=\"#为SSL服务器创建证书配置文件\" class=\"headerlink\" title=\"为SSL服务器创建证书配置文件\"></a>为SSL服务器创建证书配置文件</h2></li>\n<li>在<code>CA Functions</code>下，按<code>Certificate Profiles</code></li>\n<li>输入最终实体证书配置文件的名称，例如<code>SSLServerCertificateProfile</code>，然后按<code>add</code></li>\n<li>选择<code>SSLServerCertificateProfile</code>并按<code>Edit</code></li>\n<li>在<code>Validity</code>下输入365d（1年有效期)</li>\n<li>在<code>Key usage</code>下，选择<code>Digital Signature</code>数字签名和<code>Key encipherment</code>密钥加密（按住Ctrl键单击以选择多个）</li>\n<li>取消 <code>Allow Key Usage Override</code></li>\n<li>选中 <code>Extended Key Usage</code></li>\n<li>在<code>Extended Key Usage</code>下，选择<code>Server Authentication</code>服务器身份验证</li>\n<li>在<code>Available bit lengths</code>可用位长度，“1024位”，“2048位”和“4096位”</li>\n<li>在可用CA <code>Available CAs</code>下，选择您的CA<code>ManagementCA</code>（用于颁发服务器证书的CA)</li>\n<li>在<code>Type</code>下，选择<code>End Entity</code></li>\n<li>按<code>Save</code></li>\n<li>创建新证书配置文件的另一种方法是使用现有配置文件作为模板：在证书配置文件列表中，单击“克隆”固定配置文件SERVER;输入最终实体证书配置文件的名称，例如<code>SSLServerCertificateProfile</code>，然后按“从模板创建” <code>Create from template</code>;按<code>save</code><h2 id=\"为SSL服务器创建最终实体配置文件\"><a href=\"#为SSL服务器创建最终实体配置文件\" class=\"headerlink\" title=\"为SSL服务器创建最终实体配置文件\"></a>为SSL服务器创建最终实体配置文件</h2></li>\n<li>之前应该已在“为SSL服务器创建证书配置文件”部分中为SSL服务器创建了证书配置文件</li>\n<li>在<code>RA Functions</code>下，按<code>Edit End Entity Profiles</code>编辑最终实体配置文件。</li>\n<li>输入最终实体配置文件的名称，例如<code>SSLServerEndEntityProfile</code>，然后按“添加”。</li>\n<li>选择<code>SSLServerEndEntityProfile</code>并按<code>Edit</code>编辑最终实体配置文件。</li>\n<li>在主题DN字段<code>Subject DN Fields</code>下，选择<code>O, Organization</code>，然后按<code>Add</code>。</li>\n<li>在<code>O，Organization</code>中，在文本框中输入“EJBCA Edu xxx”，选中<code>required</code>复选框并取消<code>modifiable</code>可修改复选框。</li>\n<li>在主题DN字段<code>Subject DN</code>下，选择<code>C, Country</code>，然后按<code>Add</code>。</li>\n<li>在“C，Country”中，在文本框中输入<code>CN</code>china，选中<code>required</code>复选框并取消“modifiable”复选框。</li>\n<li>在主题备用字段<code>Subject Alternative</code>下，选择<code>DNS Name</code>DNS名称，然后按<code>Add</code></li>\n<li>取消选中电子邮件域<code>Email Domain</code></li>\n<li>在默认证书配置文件<code>Default Certificate Profile</code>下，选择<code>SSLServerCertificateProfile</code>（之前创建）。</li>\n<li>在可用证书配置文件<code>Available Certificate Profiles</code>下，选择<code>SSLServerEndEntityCertificateProfile</code></li>\n<li>在默认CA<code>Default CA</code>下，选择<code>ManagementCA</code>（用于颁发服务器证书的CA）。</li>\n<li>在可用CA<code>Available CAs</code>下，选择<code>ManagementCA</code>（与上面相同）。</li>\n<li>在默认令牌<code>Default Token</code>下，选择用户生成<code>User Generated</code>。</li>\n<li>在可用标记<code>Available Tokens</code>下，选择“User Generated”，“P12”，“JKS”和“PEM”（按住Ctrl单击选择多个）。</li>\n<li>按<code>Save</code><h2 id=\"申请tomcate服务器证书\"><a href=\"#申请tomcate服务器证书\" class=\"headerlink\" title=\"申请tomcate服务器证书\"></a>申请tomcate服务器证书</h2></li>\n<li>用户注册时，证书模板选择“SERVER”,Token选择“JKS file”,其他项不变：<img src=\"https://i.imgur.com/vellQeB.png\" alt=\"\"></li>\n<li>下载证书时，在ejbca用户界面中，打开“Enroll”—“Create Keystore”菜单，输入用户名与密码，进入下面的页面<img src=\"https://i.imgur.com/D2pi1Uf.png\" alt=\"\"></li>\n<li>“Key length”选择“2048 bits”；“Certificate profile”选择“SERVER”，点击“Enroll”按钮下载证书：<img src=\"https://i.imgur.com/9XHTrKd.png\" alt=\"\"><h1 id=\"ejbca的web-service-interface\"><a href=\"#ejbca的web-service-interface\" class=\"headerlink\" title=\"ejbca的web service interface\"></a>ejbca的web service interface</h1></li>\n<li>ejbca系统装好了，可以管理数字证书了，但是，所有的操作都在ejbca界面中执行，挺麻烦的，因此，最合理的做法是在ejbca之上构建中间层，用户访问中间层提供的服务，中间层调用ejbca的web service interface<h2 id=\"superadmin-jks证书\"><a href=\"#superadmin-jks证书\" class=\"headerlink\" title=\"superadmin.jks证书\"></a>superadmin.jks证书</h2></li>\n<li>ejbca提供的web service需要证书认证，证书格式：jks。对superadmin用户执行更新操作，修改“Token”值为“JKS file”<img src=\"https://i.imgur.com/2Za654a.png\" alt=\"\"></li>\n<li>保存，然后按照下载普通用户证书的步骤下载superadmin的证书<h2 id=\"初始化web-service连接\"><a href=\"#初始化web-service连接\" class=\"headerlink\" title=\"初始化web service连接\"></a>初始化web service连接</h2></li>\n<li><p>将web service所需的jar包添加到工程中，这些jar包是下面两个目录下的所以的jar.</p>\n<blockquote>\n</blockquote>\n<pre><code>/opt/ca/ejbca-ce-6.3.1.1/dist/ejbca-ws-cli/lib\n/opt/ca/ejbca-ce-6.3.1.1/dist/ejbca-ws-cli\n</code></pre></li>\n<li><p>初始化web service</p>\n<blockquote>\n<pre><code>public void init() {\n    if (!new File(certPath).exists()) return;\n    CryptoProviderTools.installBCProvider();\n    System.setProperty(&quot;javax.net.ssl.trustStore&quot;, &quot;d:/superadmin.jks&quot;);\n    System.setProperty(&quot;javax.net.ssl.trustStorePassword&quot;, &quot;123456&quot;);\n    System.setProperty(&quot;javax.net.ssl.keyStore&quot;, &quot;d:/superadmin.jks&quot;);\n    System.setProperty(&quot;javax.net.ssl.keyStorePassword&quot;, &quot;123456&quot;);\n    QName qname = new QName(&quot;http://ws.protocol.core.ejbca.org/&quot;, &quot;EjbcaWSService&quot;); \n    try {\n        EjbcaWSService service = new EjbcaWSService(new URL(&quot;https://ca.xmyself.com:8443/ejbca/ejbcaws/ejbcaws?wsdl&quot;), qname);\n        EjbcaWS ejbcaWS = service.getEjbcaWSPort();\n    } catch (Exception e) {\n    }\n}\n</code></pre></blockquote>\n</li>\n<li><p>注意：连接地址只能是域名，因此，连接ejbca的web service的机器要配置hosts<code>192.168.171.144 by.cos7</code></p>\n<h2 id=\"数字证书管理\"><a href=\"#数字证书管理\" class=\"headerlink\" title=\"数字证书管理\"></a>数字证书管理</h2></li>\n<li><p>查看用户是否已经注册</p>\n<blockquote>\n</blockquote>\n<pre><code>private boolean isExist(String username) throws Exception {\n    UserMatch usermatch = new UserMatch();\n    usermatch.setMatchwith(UserMatch.MATCH_WITH_USERNAME);\n    usermatch.setMatchtype(UserMatch.MATCH_TYPE_EQUALS);\n    usermatch.setMatchvalue(username);\n    try {\n        List&lt;UserDataVOWS&gt; users = ejbcaWS.findUser(usermatch);\n        if (users != null &amp;&amp; users.size() &gt; 0) {\n            return true;\n        } else {\n            return false;\n        }\n    } catch (Exception e) {\n        throw new Exception(&quot;检查用户 &quot; + username() + &quot; 是否存在时出错：&quot; + e.getMessage());\n    }\n}\n</code></pre></li>\n<li><p>用户注册与更新，用的都是editUser()方法，因此要先判断是否存在.</p>\n<blockquote>\n</blockquote>\n<pre><code>public void editUser() throws Exception {\n    UserDataVOWS userData = new UserDataVOWS();\n    userData.setUsername(&quot;testname&quot;);//用户名\n    userData.setPassword(&quot;123456&quot;);//密码\n    userData.setClearPwd(false);//默认\n    userData.setSubjectDN(&quot;CN=&quot; + &quot;testname&quot;\n            + &quot;,OU=&quot; + &quot;testou&quot;\n            + &quot;,O=&quot; + &quot;testo&quot;\n            + &quot;,C=cn&quot;\n            + &quot;,telephoneNumber=&quot; + &quot;1234567890&quot;\n            );//设置唯一甄别名\n\n    String pattern = &quot;yyyy-MM-dd HH:mm:ssZZ&quot;; // ISO 8601标准时间格式\n    userData.setStartTime(DateFormatUtils.format(new Date(),pattern));//证书有效起始日期\n    userData.setEndTime(DateFormatUtils.format(DateUtils.addDays(new Date(), 100), pattern));//结束日期\n\n    userData.setCaName(&quot;test&quot;);//ca名称，ejbca的名称\n    userData.setSubjectAltName(null);\n    userData.setEmail(&quot;test@test.com&quot;);//邮件地址\n    userData.setStatus(UserDataVOWS.STATUS_NEW);//状态为new\n    userData.setTokenType(UserDataVOWS.TOKEN_TYPE_P12);//设置p12格式证书\n    userData.setEndEntityProfileName(&quot;user&quot;);//终端实体模板\n    userData.setCertificateProfileName(&quot;user&quot;);//证书模板\n    try {\n        ejbcaWS.editUser(userData);\n    } catch (Exception e) {\n        throw new Exception(e.getMessage());\n    }\n}\n</code></pre></li>\n<li><p>代码中有几处值得注意的，终端实体模板“user”和证书模板“user”需要在ejbca管理员界面中配置，并且终端实体模板“user”中要配置开启“SubjectDN”的属性如CN、OU、O、C、telephoneNumber等，还要允许修改startTime和endTime</p>\n</li>\n<li><p>吊销证书</p>\n<blockquote>\n</blockquote>\n<pre><code>public void revoke(String username) throws ServiceException {\n    try {\n        ejbcaWS.revokeUser(username, RevokedCertInfo.REVOCATION_REASON_UNSPECIFIED, false);\n    } catch (Exception e) {\n    }\n}    \n</code></pre></li>\n<li><p>创建证书</p>\n<blockquote>\n</blockquote>\n<pre><code>private void createCert(String username, String password, String path) throws Exception {\n    FileOutputStream fileOutputStream = null;\n    try {\n        // 创建证书文件\n        KeyStore ksenv = ejbcaWS.pkcs12Req(username, password, null, &quot;2048&quot;, AlgorithmConstants.KEYALGORITHM_RSA);\n        java.security.KeyStore ks = KeyStoreHelper.getKeyStore(ksenv.getKeystoreData(), &quot;PKCS12&quot;, password);\n        fileOutputStream = new FileOutputStream(path + File.separator + username + &quot;.p12&quot;);\n        ks.store(fileOutputStream, password.toCharArray());\n        // 创建密码文件\n        File pwdFile = new File(path + File.separator + username + &quot;.pwd&quot;);\n        pwdFile.createNewFile();\n        BufferedWriter out = new BufferedWriter(new FileWriter(pwdFile));\n        out.write(password);\n        out.flush();\n        out.close();\n    } catch (Exception e) {\n        throw new Exception(&quot;用户  &quot; + username + &quot; 证书创建失败：&quot; + e.getMessage());\n    } finally {\n        if (fileOutputStream != null) {\n            try {\n                fileOutputStream.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}        \n</code></pre></li>\n<li><p>证书创建在服务器上，用户调用下载证书的接口服务，返回下载地址，因此，这里需要一个下载服务器，下面介绍将nginx配置为下载服务器，文件存放的目录是/var/tmp + /download/</p>\n<blockquote>\n</blockquote>\n<pre><code>location ^~ /download/{\n    root   /var/tmp;\n    if ($request_filename ~* ^.*?\\.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx)$){\n        add_header Content-Disposition: &apos;attachment;&apos;;\n    }\n}\n</code></pre></li>\n</ul>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><ul>\n<li><code>https://www.bbsmax.com/A/xl56xw2Yzr/</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"web管理界面\"><a href=\"#web管理界面\" class=\"headerlink\" title=\"web管理界面\"></a>web管理界面</h1><h2 id=\"web页面\"><a href=\"#web页面\" class=\"headerlink\" title=\"web页面\"></a>web页面</h2><ul>\n<li>拷贝ejbca服务器“/opt/ca/ejbca-ce-6.3.1.1/p12/”下的superadmin.p12到windows，双击安装，密码“ejbca”,ejbca提供了两个界面。</li>\n<li>管理员界面(需要证书，使用刚才安装的supeadmin证书)：<code>https://by.cos7:8443/ejbca/adminweb/</code><img src=\"https://i.imgur.com/o3c0AcR.png\" alt=\"\"></li>\n<li>用户界面：<code>http://by.cos7:8080/ejbca/</code><img src=\"https://i.imgur.com/MPIAwpH.png\" alt=\"\"></li>\n<li>用户指南：<code>http://by.cos7:8080/ejbca/doc/userguide.html</code><h2 id=\"用户注册\"><a href=\"#用户注册\" class=\"headerlink\" title=\"用户注册\"></a>用户注册</h2></li>\n<li>ejbca管理员界面，打开<code>RA Functions-&gt;Add End Entity</code>菜单，填写“Required”列打勾的项。</li>\n<li>用户模板选择“EMPTY”：<img src=\"https://i.imgur.com/wKDtk0Q.png\" alt=\"\"></li>\n<li>输入用户名和密码：<img src=\"https://i.imgur.com/4mEjZId.png\" alt=\"\"></li>\n<li>Common name，如果是服务器用证书，这里填域名：<img src=\"https://i.imgur.com/VIvMfTK.png\" alt=\"\"></li>\n<li>证书信息填写，证书模板选择“ENDUSER”，CA选择“dev”,Token选择“P12 file”:<img src=\"https://i.imgur.com/e5DAZKp.png\" alt=\"\"></li>\n<li>点击“Add”注册<h2 id=\"下载证书\"><a href=\"#下载证书\" class=\"headerlink\" title=\"下载证书\"></a>下载证书</h2></li>\n<li>ejbca用户界面，打开“Enroll”-“Create Browser Certificate”菜单：<img src=\"https://i.imgur.com/0wNUVFl.png\" alt=\"\"></li>\n<li>“Key length”选择“2048 bits”;“Cetificate profile”选择“ENDUSER”,点击“Enroll”按钮下载证书：<img src=\"https://i.imgur.com/pH3qyIG.png\" alt=\"\"><h2 id=\"吊销证书\"><a href=\"#吊销证书\" class=\"headerlink\" title=\"吊销证书\"></a>吊销证书</h2></li>\n<li>ejbca管理员界面，打开“RA Functions”—“Search End Entities”菜单。“Search end entities with status”处下拉框选择“All”，点击右边的“Search”按钮查看用户信息（下图省略其他列）勾选需要吊销的用户，点击表格下方的“Revoke Selected”按钮：<img src=\"https://i.imgur.com/4serhaB.png\" alt=\"\"><h2 id=\"更新证书\"><a href=\"#更新证书\" class=\"headerlink\" title=\"更新证书\"></a>更新证书</h2></li>\n<li>ejbca管理员界面，打开“RA Functions”—“Search End Entities”菜单。“Search end entities with status”处下拉框选择“All”，点击右边的“Search”按钮查看用户信息（下图省略其他列）<img src=\"https://i.imgur.com/zbAzu7x.png\" alt=\"\"></li>\n<li>点击需要更新的证书用户的最右边列中的“Edit End Entity”超链接，编辑用户：<img src=\"https://i.imgur.com/8oyBfPo.png\" alt=\"\"></li>\n<li>设置“Status”为“New”，点击右边的“Save”按钮。然后输入新密码，其他项保持不变，点击页面最下方的“Save”按钮保存设置。<h2 id=\"根证书\"><a href=\"#根证书\" class=\"headerlink\" title=\"根证书\"></a>根证书</h2></li>\n<li>ejbca用户界面，打开“Retrieve”—“Fetch CA Certificates”菜单，可以下载不同格式的根证书<h2 id=\"为SSL服务器创建证书配置文件\"><a href=\"#为SSL服务器创建证书配置文件\" class=\"headerlink\" title=\"为SSL服务器创建证书配置文件\"></a>为SSL服务器创建证书配置文件</h2></li>\n<li>在<code>CA Functions</code>下，按<code>Certificate Profiles</code></li>\n<li>输入最终实体证书配置文件的名称，例如<code>SSLServerCertificateProfile</code>，然后按<code>add</code></li>\n<li>选择<code>SSLServerCertificateProfile</code>并按<code>Edit</code></li>\n<li>在<code>Validity</code>下输入365d（1年有效期)</li>\n<li>在<code>Key usage</code>下，选择<code>Digital Signature</code>数字签名和<code>Key encipherment</code>密钥加密（按住Ctrl键单击以选择多个）</li>\n<li>取消 <code>Allow Key Usage Override</code></li>\n<li>选中 <code>Extended Key Usage</code></li>\n<li>在<code>Extended Key Usage</code>下，选择<code>Server Authentication</code>服务器身份验证</li>\n<li>在<code>Available bit lengths</code>可用位长度，“1024位”，“2048位”和“4096位”</li>\n<li>在可用CA <code>Available CAs</code>下，选择您的CA<code>ManagementCA</code>（用于颁发服务器证书的CA)</li>\n<li>在<code>Type</code>下，选择<code>End Entity</code></li>\n<li>按<code>Save</code></li>\n<li>创建新证书配置文件的另一种方法是使用现有配置文件作为模板：在证书配置文件列表中，单击“克隆”固定配置文件SERVER;输入最终实体证书配置文件的名称，例如<code>SSLServerCertificateProfile</code>，然后按“从模板创建” <code>Create from template</code>;按<code>save</code><h2 id=\"为SSL服务器创建最终实体配置文件\"><a href=\"#为SSL服务器创建最终实体配置文件\" class=\"headerlink\" title=\"为SSL服务器创建最终实体配置文件\"></a>为SSL服务器创建最终实体配置文件</h2></li>\n<li>之前应该已在“为SSL服务器创建证书配置文件”部分中为SSL服务器创建了证书配置文件</li>\n<li>在<code>RA Functions</code>下，按<code>Edit End Entity Profiles</code>编辑最终实体配置文件。</li>\n<li>输入最终实体配置文件的名称，例如<code>SSLServerEndEntityProfile</code>，然后按“添加”。</li>\n<li>选择<code>SSLServerEndEntityProfile</code>并按<code>Edit</code>编辑最终实体配置文件。</li>\n<li>在主题DN字段<code>Subject DN Fields</code>下，选择<code>O, Organization</code>，然后按<code>Add</code>。</li>\n<li>在<code>O，Organization</code>中，在文本框中输入“EJBCA Edu xxx”，选中<code>required</code>复选框并取消<code>modifiable</code>可修改复选框。</li>\n<li>在主题DN字段<code>Subject DN</code>下，选择<code>C, Country</code>，然后按<code>Add</code>。</li>\n<li>在“C，Country”中，在文本框中输入<code>CN</code>china，选中<code>required</code>复选框并取消“modifiable”复选框。</li>\n<li>在主题备用字段<code>Subject Alternative</code>下，选择<code>DNS Name</code>DNS名称，然后按<code>Add</code></li>\n<li>取消选中电子邮件域<code>Email Domain</code></li>\n<li>在默认证书配置文件<code>Default Certificate Profile</code>下，选择<code>SSLServerCertificateProfile</code>（之前创建）。</li>\n<li>在可用证书配置文件<code>Available Certificate Profiles</code>下，选择<code>SSLServerEndEntityCertificateProfile</code></li>\n<li>在默认CA<code>Default CA</code>下，选择<code>ManagementCA</code>（用于颁发服务器证书的CA）。</li>\n<li>在可用CA<code>Available CAs</code>下，选择<code>ManagementCA</code>（与上面相同）。</li>\n<li>在默认令牌<code>Default Token</code>下，选择用户生成<code>User Generated</code>。</li>\n<li>在可用标记<code>Available Tokens</code>下，选择“User Generated”，“P12”，“JKS”和“PEM”（按住Ctrl单击选择多个）。</li>\n<li>按<code>Save</code><h2 id=\"申请tomcate服务器证书\"><a href=\"#申请tomcate服务器证书\" class=\"headerlink\" title=\"申请tomcate服务器证书\"></a>申请tomcate服务器证书</h2></li>\n<li>用户注册时，证书模板选择“SERVER”,Token选择“JKS file”,其他项不变：<img src=\"https://i.imgur.com/vellQeB.png\" alt=\"\"></li>\n<li>下载证书时，在ejbca用户界面中，打开“Enroll”—“Create Keystore”菜单，输入用户名与密码，进入下面的页面<img src=\"https://i.imgur.com/D2pi1Uf.png\" alt=\"\"></li>\n<li>“Key length”选择“2048 bits”；“Certificate profile”选择“SERVER”，点击“Enroll”按钮下载证书：<img src=\"https://i.imgur.com/9XHTrKd.png\" alt=\"\"><h1 id=\"ejbca的web-service-interface\"><a href=\"#ejbca的web-service-interface\" class=\"headerlink\" title=\"ejbca的web service interface\"></a>ejbca的web service interface</h1></li>\n<li>ejbca系统装好了，可以管理数字证书了，但是，所有的操作都在ejbca界面中执行，挺麻烦的，因此，最合理的做法是在ejbca之上构建中间层，用户访问中间层提供的服务，中间层调用ejbca的web service interface<h2 id=\"superadmin-jks证书\"><a href=\"#superadmin-jks证书\" class=\"headerlink\" title=\"superadmin.jks证书\"></a>superadmin.jks证书</h2></li>\n<li>ejbca提供的web service需要证书认证，证书格式：jks。对superadmin用户执行更新操作，修改“Token”值为“JKS file”<img src=\"https://i.imgur.com/2Za654a.png\" alt=\"\"></li>\n<li>保存，然后按照下载普通用户证书的步骤下载superadmin的证书<h2 id=\"初始化web-service连接\"><a href=\"#初始化web-service连接\" class=\"headerlink\" title=\"初始化web service连接\"></a>初始化web service连接</h2></li>\n<li><p>将web service所需的jar包添加到工程中，这些jar包是下面两个目录下的所以的jar.</p>\n<blockquote>\n</blockquote>\n<pre><code>/opt/ca/ejbca-ce-6.3.1.1/dist/ejbca-ws-cli/lib\n/opt/ca/ejbca-ce-6.3.1.1/dist/ejbca-ws-cli\n</code></pre></li>\n<li><p>初始化web service</p>\n<blockquote>\n<pre><code>public void init() {\n    if (!new File(certPath).exists()) return;\n    CryptoProviderTools.installBCProvider();\n    System.setProperty(&quot;javax.net.ssl.trustStore&quot;, &quot;d:/superadmin.jks&quot;);\n    System.setProperty(&quot;javax.net.ssl.trustStorePassword&quot;, &quot;123456&quot;);\n    System.setProperty(&quot;javax.net.ssl.keyStore&quot;, &quot;d:/superadmin.jks&quot;);\n    System.setProperty(&quot;javax.net.ssl.keyStorePassword&quot;, &quot;123456&quot;);\n    QName qname = new QName(&quot;http://ws.protocol.core.ejbca.org/&quot;, &quot;EjbcaWSService&quot;); \n    try {\n        EjbcaWSService service = new EjbcaWSService(new URL(&quot;https://ca.xmyself.com:8443/ejbca/ejbcaws/ejbcaws?wsdl&quot;), qname);\n        EjbcaWS ejbcaWS = service.getEjbcaWSPort();\n    } catch (Exception e) {\n    }\n}\n</code></pre></blockquote>\n</li>\n<li><p>注意：连接地址只能是域名，因此，连接ejbca的web service的机器要配置hosts<code>192.168.171.144 by.cos7</code></p>\n<h2 id=\"数字证书管理\"><a href=\"#数字证书管理\" class=\"headerlink\" title=\"数字证书管理\"></a>数字证书管理</h2></li>\n<li><p>查看用户是否已经注册</p>\n<blockquote>\n</blockquote>\n<pre><code>private boolean isExist(String username) throws Exception {\n    UserMatch usermatch = new UserMatch();\n    usermatch.setMatchwith(UserMatch.MATCH_WITH_USERNAME);\n    usermatch.setMatchtype(UserMatch.MATCH_TYPE_EQUALS);\n    usermatch.setMatchvalue(username);\n    try {\n        List&lt;UserDataVOWS&gt; users = ejbcaWS.findUser(usermatch);\n        if (users != null &amp;&amp; users.size() &gt; 0) {\n            return true;\n        } else {\n            return false;\n        }\n    } catch (Exception e) {\n        throw new Exception(&quot;检查用户 &quot; + username() + &quot; 是否存在时出错：&quot; + e.getMessage());\n    }\n}\n</code></pre></li>\n<li><p>用户注册与更新，用的都是editUser()方法，因此要先判断是否存在.</p>\n<blockquote>\n</blockquote>\n<pre><code>public void editUser() throws Exception {\n    UserDataVOWS userData = new UserDataVOWS();\n    userData.setUsername(&quot;testname&quot;);//用户名\n    userData.setPassword(&quot;123456&quot;);//密码\n    userData.setClearPwd(false);//默认\n    userData.setSubjectDN(&quot;CN=&quot; + &quot;testname&quot;\n            + &quot;,OU=&quot; + &quot;testou&quot;\n            + &quot;,O=&quot; + &quot;testo&quot;\n            + &quot;,C=cn&quot;\n            + &quot;,telephoneNumber=&quot; + &quot;1234567890&quot;\n            );//设置唯一甄别名\n\n    String pattern = &quot;yyyy-MM-dd HH:mm:ssZZ&quot;; // ISO 8601标准时间格式\n    userData.setStartTime(DateFormatUtils.format(new Date(),pattern));//证书有效起始日期\n    userData.setEndTime(DateFormatUtils.format(DateUtils.addDays(new Date(), 100), pattern));//结束日期\n\n    userData.setCaName(&quot;test&quot;);//ca名称，ejbca的名称\n    userData.setSubjectAltName(null);\n    userData.setEmail(&quot;test@test.com&quot;);//邮件地址\n    userData.setStatus(UserDataVOWS.STATUS_NEW);//状态为new\n    userData.setTokenType(UserDataVOWS.TOKEN_TYPE_P12);//设置p12格式证书\n    userData.setEndEntityProfileName(&quot;user&quot;);//终端实体模板\n    userData.setCertificateProfileName(&quot;user&quot;);//证书模板\n    try {\n        ejbcaWS.editUser(userData);\n    } catch (Exception e) {\n        throw new Exception(e.getMessage());\n    }\n}\n</code></pre></li>\n<li><p>代码中有几处值得注意的，终端实体模板“user”和证书模板“user”需要在ejbca管理员界面中配置，并且终端实体模板“user”中要配置开启“SubjectDN”的属性如CN、OU、O、C、telephoneNumber等，还要允许修改startTime和endTime</p>\n</li>\n<li><p>吊销证书</p>\n<blockquote>\n</blockquote>\n<pre><code>public void revoke(String username) throws ServiceException {\n    try {\n        ejbcaWS.revokeUser(username, RevokedCertInfo.REVOCATION_REASON_UNSPECIFIED, false);\n    } catch (Exception e) {\n    }\n}    \n</code></pre></li>\n<li><p>创建证书</p>\n<blockquote>\n</blockquote>\n<pre><code>private void createCert(String username, String password, String path) throws Exception {\n    FileOutputStream fileOutputStream = null;\n    try {\n        // 创建证书文件\n        KeyStore ksenv = ejbcaWS.pkcs12Req(username, password, null, &quot;2048&quot;, AlgorithmConstants.KEYALGORITHM_RSA);\n        java.security.KeyStore ks = KeyStoreHelper.getKeyStore(ksenv.getKeystoreData(), &quot;PKCS12&quot;, password);\n        fileOutputStream = new FileOutputStream(path + File.separator + username + &quot;.p12&quot;);\n        ks.store(fileOutputStream, password.toCharArray());\n        // 创建密码文件\n        File pwdFile = new File(path + File.separator + username + &quot;.pwd&quot;);\n        pwdFile.createNewFile();\n        BufferedWriter out = new BufferedWriter(new FileWriter(pwdFile));\n        out.write(password);\n        out.flush();\n        out.close();\n    } catch (Exception e) {\n        throw new Exception(&quot;用户  &quot; + username + &quot; 证书创建失败：&quot; + e.getMessage());\n    } finally {\n        if (fileOutputStream != null) {\n            try {\n                fileOutputStream.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}        \n</code></pre></li>\n<li><p>证书创建在服务器上，用户调用下载证书的接口服务，返回下载地址，因此，这里需要一个下载服务器，下面介绍将nginx配置为下载服务器，文件存放的目录是/var/tmp + /download/</p>\n<blockquote>\n</blockquote>\n<pre><code>location ^~ /download/{\n    root   /var/tmp;\n    if ($request_filename ~* ^.*?\\.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx)$){\n        add_header Content-Disposition: &apos;attachment;&apos;;\n    }\n}\n</code></pre></li>\n</ul>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><ul>\n<li><code>https://www.bbsmax.com/A/xl56xw2Yzr/</code></li>\n</ul>\n"},{"title":"PKI与SSL网站","date":"2018-11-07T05:40:46.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# PKI概述(public key infrastruncture) #\n## PKI组成 ##\n- PKI作为一组在分布式计算系统中利用公钥技术和X.509证书所提供的安全服务，企业或组织可利用相关产品建立安全域，并在其中发布密钥和证书。在安全域内，PKI管理加密密钥和证书的发布，并提供诸如密钥管理（包括密钥更新，密钥恢复和密钥委托等）、证书管理（包括证书产生和撤销等）和策略管理等。PKI产品也允许一个组织通过证书级别或直接交叉认证等方式来同其他安全域建立信任关系。这些服务和信任关系不能局限于独立的网络之内，而应建立在网络之间和Internet之上，为电子商务和网络通信提供安全保障，所以具有互操作性的结构化和标准化技术成为PKI的核心\n- PKI在实际应用上是一套软硬件系统和安全策略的集合，它提供了一整套安全机制，使用户在不知道对方身份或分布地很广的情况下，以证书为基础，通过一系列的信任关系进行通讯和电子商务交易\n- 一个典型的PKI系统如图1所示，其中包括PKI策略、软硬件系统、证书机构CA、注册机构RA、证书发布系统和PKI应用等。![](https://i.imgur.com/bdIxZcI.png)\n### PKI策略 ###\n- PKI安全策略建立和定义了一个组织信息安全方面的指导方针，同时也定义了密码系统使用的处理方法和原则。它包括一个组织怎样处理密钥和有价值的信息，根据风险的级别定义安全控制的级别。一般情况下，在PKI中有两种类型的策略：一是证书策略，用于管理证书的使用，比如，可以确认某一CA是在Internet上的公有CA，还是某一企业内部的私有CA；另外一个就是CPS（Certificate Practice Statement）。一些由商业证书发放机构（CCA）或者可信的第三方操作的PKI系统需要CPS。这是一个包含如何在实践中增强和支持安全策略的一些操作过程的详细文档。它包括CA是如何建立和运作的，证书是如何发行、接收和废除的，密钥是如何产生、注册的，以及密钥是如何存储的，用户是如何得到它的等等。\n### 证书机构CA ###\n- 证书机构CA是PKI的信任基础，它管理公钥的整个生命周期，其作用包括：发放证书、规定证书的有效期和通过发布证书废除列表（CRL）确保必要时可以废除证书。\n### 注册机构RA ###\n- 注册机构RA提供用户和CA之间的一个接口，它获取并认证用户的身份，向CA提出证书请求。它主要完成收集用户信息和确认用户身份的功能。这里指的用户，是指将要向认证中心（即CA）申请数字证书的客户，可以是个人，也可以是集团或团体、某政府机构等。注册管理一般由一个独立的注册机构（即RA）来承担。它接受用户的注册申请，审查用户的申请资格，并决定是否同意CA给其签发数字证书。注册机构并不给用户签发证书，而只是对用户进行资格审查。因此，RA可以设置在直接面对客户的业务部门，如银行的营业部、机构认识部门等。当然，对于一个规模较小的PKI应用系统来说，可把注册管理的职能由认证中心CA来完成，而不设立独立运行的RA。但这并不是取消了PKI的注册功能，而只是将其作为CA的一项功能而已。PKI国际标准推荐由一个独立的RA来完成注册管理的任务，可以增强应用系统的安全。 其功能包括个人身份审核、CRL管理、密钥产生和密钥对备份等。\n### 证书发布系统 ###\n- 证书发布系统负责证书的发放，如可以通过用户自己，或是通过目录服务。目录服务器可以是一个组织中现存的，也可以是PKI方案中提供的。\n### PKI的应用 ###\n- PKI的应用非常广泛，包括在web服务器和浏览器之间的通讯、电子邮件、电子数据交换（EDI）、在Internet上的信用卡交易和虚拟私有网（VPN）等。\n### 软硬件系统 ###\n- PKI存储库包括LDAP目录服务器和普通数据库，用于对用户申请、证书、密钥、CRL和日志等信息进行存储和管理，并提供一定的查询功能。\n## PKI的主要功能 ##\n- 安全性(encryption)：将传输的数据加密。\n- 不可否认性(authentication)：接收者PC会验证所收到的数据是否是由发件人本人所发送来的。\n- 完整性(integrity)：检查数据在传输过程中是否被篡改。\n- 补充：PKI是根据公钥加密系统(public key cryptography)来提供上述的三个功能\n- 公钥(public key)：用户的公钥可以公开给其他用户，以用于数据的加密\n- 私钥(private key)：用户的私钥是该用户私有的，一般存储在用户本地的计算机内，只有用户本身可以使用。\n## 公钥加密法 ##\n- 公钥加密：![](https://i.imgur.com/G0OUaLv.png)\n## 公钥验证(私钥签名) ##\n- 私钥签名：A用私钥签名，B用A的公钥来验证确实是A发的。![](https://i.imgur.com/wqiozox.png)\n- 整个通信流程：![](https://i.imgur.com/ryg3vab.png)\n- 对称加密：![](https://i.imgur.com/OcEs8uP.png)\n\n\t优点：\n\t\t- 比非对称加密的加密速度快\n\t\t- 密钥的位数如果比较大，一般很难破解\n\t缺点：\n\t\t- 每位使用者都需要有唯一的密钥，密钥比较多的话，增加管理难度[n(n-1)/2个密钥]\n\t\t- 提供机密性，但不提供认证和防抵赖功能\n\t\t\n- 非对称加密：![](https://i.imgur.com/gC5ayWh.png)\n## SSL网站安全连接过程 ##\n- 简单图解：![](https://i.imgur.com/2DeRQ7I.png)\n- 具体过程：\n\t- (1) 客户端浏览器利用`https://www.birtop.com`来连接网站，客户端会先发出client hello信息给WEB服务器\n\t- (2) WEB服务器会响应server hello信息给客户端，此信息内包含网站的证书信息(含公钥)\n\t- (3) 客户端浏览器与网站双发开始协商SSL连接安全等级，如选择128/256...位加密密钥，位数越多，越难破解，数据越安全，但网站的性能越差。\n\t- (4) 浏览器根据双发同意的安全等级来建立会话密钥，利用网站的公钥将会话密钥加密，将加密后的会话密钥送给我网站。\n\t- (5) 网站利用自己的私钥来将会话密钥解密。\n\t- (6) 浏览器与WEB网站双方相互之间传送的所有数据，都会利用这个会话密钥进行加密和解密。\n## 服务器的名称指示(SNI) ##\n- SNI （server name indication）\n- (https)SSL服务对应的端口443，SNI能使客户端和服务器端进行访问的时候，在client hello消息和server hello消息里边标记域名等信息，更好的识别。方便服务器端选择正确的证书返回给客户端，以便客户端访问指定的网站。\n## 证书颁发机构（CA）概述与根CA的安装 ##\n- CA:certification authority,可以搭建一台服务器，来作为证书颁发机构。![](https://i.imgur.com/rh7KZog.png)\n### CA的信任 ###\n- 1）两类重要的证书：\n\t\t- 第一类：用于建立信任关系得证书\n\t\t- 第二类：用户数据加密、签名，保证数据安全的证书\n- 2）对于用户或网站他们的公钥与私钥是如何产生的？\n\t\t- a. 在申请证书时，需要输入姓名、地址与电子邮件等数据，这些数据会被发送到一个称为CSP的程序，CSP是微软公司用户在windows平台上提供第三方加密模块的接口标准。此程序已被安装在申请者的计算机内\n\t\t- b. CSP会自动建立一对密钥：一个公钥与一个私钥。CSP会将私钥存储到申请者的计算机的注册表中，然后将证书申请的数据与公钥一并发送给CA,CA检查这些数据无误后，会利用CA自己的私钥将要发放的证书进行签名，然后发放此证书。申请者收到证书后，将证书安装到他的计算机内。\n\t\t- c. 证书内容包含了证书的颁发对象、证书的有效期、颁发此证书的CA与CA的数字签名。还有申请者的姓名、地址、电子邮件、公钥等信息。\n\t\t- 注释：CSP:cryptographic service provider \n### AD证书服务的CA种类 ###\n- AD、CS的CA种类\n\t\tAD（active directory）、CS(certification service)的CA种类\n- 1）企业根CA（enterprise root CA）\n\t\t- a. 需要AD环境（域环境），可以安装到域控制器或域成员服务器上\n\t\t- b. 发放证书的对象仅限域用户\n\t\t- c. 主要工作应该是用来发放证书给从属CA,发放证书的具体工作交给从属CA来负责。\n- 2) 企业的从属CA（enterprise suborinate CA）\n\t\t- a. 也需要AD环境（域环境）\n\t\t- b. 适用于证书的具体管理和发放工作\n\t\t- c. 从属CA必须向其父CA取得证书后，才会正常工作\n\t\t- d. 从属CA也可以发放证书给下一层的从属CA\n- 3) 独立根CA（standalone root CA）\n\t\t- a. 类似于企业根CA,但是不需要AD域，扮演独立根CA角色的计算机可以是独立服务器、成员服务器或域控制器\n\t\t- b. 无论是否为域用户，都可以向独立根CA申请证书\n- 4) 独立从属CA（standalone suborinate CA）\n\t\t- a. 类似于企业从属CA,但是不需要AD域，扮演独立从属CA角色的计算机可以是独立服务器、成员服务器或域控制器\n\t\t- b. 无论是否为域用户，都可以向独立从属CA申请证书\n### 安装AD CS（证书服务） ###\n","source":"_posts/PKI与SSL网站.md","raw":"---\ntitle: PKI与SSL网站\ndate: 2018-11-07 13:40:46\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# PKI概述(public key infrastruncture) #\n## PKI组成 ##\n- PKI作为一组在分布式计算系统中利用公钥技术和X.509证书所提供的安全服务，企业或组织可利用相关产品建立安全域，并在其中发布密钥和证书。在安全域内，PKI管理加密密钥和证书的发布，并提供诸如密钥管理（包括密钥更新，密钥恢复和密钥委托等）、证书管理（包括证书产生和撤销等）和策略管理等。PKI产品也允许一个组织通过证书级别或直接交叉认证等方式来同其他安全域建立信任关系。这些服务和信任关系不能局限于独立的网络之内，而应建立在网络之间和Internet之上，为电子商务和网络通信提供安全保障，所以具有互操作性的结构化和标准化技术成为PKI的核心\n- PKI在实际应用上是一套软硬件系统和安全策略的集合，它提供了一整套安全机制，使用户在不知道对方身份或分布地很广的情况下，以证书为基础，通过一系列的信任关系进行通讯和电子商务交易\n- 一个典型的PKI系统如图1所示，其中包括PKI策略、软硬件系统、证书机构CA、注册机构RA、证书发布系统和PKI应用等。![](https://i.imgur.com/bdIxZcI.png)\n### PKI策略 ###\n- PKI安全策略建立和定义了一个组织信息安全方面的指导方针，同时也定义了密码系统使用的处理方法和原则。它包括一个组织怎样处理密钥和有价值的信息，根据风险的级别定义安全控制的级别。一般情况下，在PKI中有两种类型的策略：一是证书策略，用于管理证书的使用，比如，可以确认某一CA是在Internet上的公有CA，还是某一企业内部的私有CA；另外一个就是CPS（Certificate Practice Statement）。一些由商业证书发放机构（CCA）或者可信的第三方操作的PKI系统需要CPS。这是一个包含如何在实践中增强和支持安全策略的一些操作过程的详细文档。它包括CA是如何建立和运作的，证书是如何发行、接收和废除的，密钥是如何产生、注册的，以及密钥是如何存储的，用户是如何得到它的等等。\n### 证书机构CA ###\n- 证书机构CA是PKI的信任基础，它管理公钥的整个生命周期，其作用包括：发放证书、规定证书的有效期和通过发布证书废除列表（CRL）确保必要时可以废除证书。\n### 注册机构RA ###\n- 注册机构RA提供用户和CA之间的一个接口，它获取并认证用户的身份，向CA提出证书请求。它主要完成收集用户信息和确认用户身份的功能。这里指的用户，是指将要向认证中心（即CA）申请数字证书的客户，可以是个人，也可以是集团或团体、某政府机构等。注册管理一般由一个独立的注册机构（即RA）来承担。它接受用户的注册申请，审查用户的申请资格，并决定是否同意CA给其签发数字证书。注册机构并不给用户签发证书，而只是对用户进行资格审查。因此，RA可以设置在直接面对客户的业务部门，如银行的营业部、机构认识部门等。当然，对于一个规模较小的PKI应用系统来说，可把注册管理的职能由认证中心CA来完成，而不设立独立运行的RA。但这并不是取消了PKI的注册功能，而只是将其作为CA的一项功能而已。PKI国际标准推荐由一个独立的RA来完成注册管理的任务，可以增强应用系统的安全。 其功能包括个人身份审核、CRL管理、密钥产生和密钥对备份等。\n### 证书发布系统 ###\n- 证书发布系统负责证书的发放，如可以通过用户自己，或是通过目录服务。目录服务器可以是一个组织中现存的，也可以是PKI方案中提供的。\n### PKI的应用 ###\n- PKI的应用非常广泛，包括在web服务器和浏览器之间的通讯、电子邮件、电子数据交换（EDI）、在Internet上的信用卡交易和虚拟私有网（VPN）等。\n### 软硬件系统 ###\n- PKI存储库包括LDAP目录服务器和普通数据库，用于对用户申请、证书、密钥、CRL和日志等信息进行存储和管理，并提供一定的查询功能。\n## PKI的主要功能 ##\n- 安全性(encryption)：将传输的数据加密。\n- 不可否认性(authentication)：接收者PC会验证所收到的数据是否是由发件人本人所发送来的。\n- 完整性(integrity)：检查数据在传输过程中是否被篡改。\n- 补充：PKI是根据公钥加密系统(public key cryptography)来提供上述的三个功能\n- 公钥(public key)：用户的公钥可以公开给其他用户，以用于数据的加密\n- 私钥(private key)：用户的私钥是该用户私有的，一般存储在用户本地的计算机内，只有用户本身可以使用。\n## 公钥加密法 ##\n- 公钥加密：![](https://i.imgur.com/G0OUaLv.png)\n## 公钥验证(私钥签名) ##\n- 私钥签名：A用私钥签名，B用A的公钥来验证确实是A发的。![](https://i.imgur.com/wqiozox.png)\n- 整个通信流程：![](https://i.imgur.com/ryg3vab.png)\n- 对称加密：![](https://i.imgur.com/OcEs8uP.png)\n\n\t优点：\n\t\t- 比非对称加密的加密速度快\n\t\t- 密钥的位数如果比较大，一般很难破解\n\t缺点：\n\t\t- 每位使用者都需要有唯一的密钥，密钥比较多的话，增加管理难度[n(n-1)/2个密钥]\n\t\t- 提供机密性，但不提供认证和防抵赖功能\n\t\t\n- 非对称加密：![](https://i.imgur.com/gC5ayWh.png)\n## SSL网站安全连接过程 ##\n- 简单图解：![](https://i.imgur.com/2DeRQ7I.png)\n- 具体过程：\n\t- (1) 客户端浏览器利用`https://www.birtop.com`来连接网站，客户端会先发出client hello信息给WEB服务器\n\t- (2) WEB服务器会响应server hello信息给客户端，此信息内包含网站的证书信息(含公钥)\n\t- (3) 客户端浏览器与网站双发开始协商SSL连接安全等级，如选择128/256...位加密密钥，位数越多，越难破解，数据越安全，但网站的性能越差。\n\t- (4) 浏览器根据双发同意的安全等级来建立会话密钥，利用网站的公钥将会话密钥加密，将加密后的会话密钥送给我网站。\n\t- (5) 网站利用自己的私钥来将会话密钥解密。\n\t- (6) 浏览器与WEB网站双方相互之间传送的所有数据，都会利用这个会话密钥进行加密和解密。\n## 服务器的名称指示(SNI) ##\n- SNI （server name indication）\n- (https)SSL服务对应的端口443，SNI能使客户端和服务器端进行访问的时候，在client hello消息和server hello消息里边标记域名等信息，更好的识别。方便服务器端选择正确的证书返回给客户端，以便客户端访问指定的网站。\n## 证书颁发机构（CA）概述与根CA的安装 ##\n- CA:certification authority,可以搭建一台服务器，来作为证书颁发机构。![](https://i.imgur.com/rh7KZog.png)\n### CA的信任 ###\n- 1）两类重要的证书：\n\t\t- 第一类：用于建立信任关系得证书\n\t\t- 第二类：用户数据加密、签名，保证数据安全的证书\n- 2）对于用户或网站他们的公钥与私钥是如何产生的？\n\t\t- a. 在申请证书时，需要输入姓名、地址与电子邮件等数据，这些数据会被发送到一个称为CSP的程序，CSP是微软公司用户在windows平台上提供第三方加密模块的接口标准。此程序已被安装在申请者的计算机内\n\t\t- b. CSP会自动建立一对密钥：一个公钥与一个私钥。CSP会将私钥存储到申请者的计算机的注册表中，然后将证书申请的数据与公钥一并发送给CA,CA检查这些数据无误后，会利用CA自己的私钥将要发放的证书进行签名，然后发放此证书。申请者收到证书后，将证书安装到他的计算机内。\n\t\t- c. 证书内容包含了证书的颁发对象、证书的有效期、颁发此证书的CA与CA的数字签名。还有申请者的姓名、地址、电子邮件、公钥等信息。\n\t\t- 注释：CSP:cryptographic service provider \n### AD证书服务的CA种类 ###\n- AD、CS的CA种类\n\t\tAD（active directory）、CS(certification service)的CA种类\n- 1）企业根CA（enterprise root CA）\n\t\t- a. 需要AD环境（域环境），可以安装到域控制器或域成员服务器上\n\t\t- b. 发放证书的对象仅限域用户\n\t\t- c. 主要工作应该是用来发放证书给从属CA,发放证书的具体工作交给从属CA来负责。\n- 2) 企业的从属CA（enterprise suborinate CA）\n\t\t- a. 也需要AD环境（域环境）\n\t\t- b. 适用于证书的具体管理和发放工作\n\t\t- c. 从属CA必须向其父CA取得证书后，才会正常工作\n\t\t- d. 从属CA也可以发放证书给下一层的从属CA\n- 3) 独立根CA（standalone root CA）\n\t\t- a. 类似于企业根CA,但是不需要AD域，扮演独立根CA角色的计算机可以是独立服务器、成员服务器或域控制器\n\t\t- b. 无论是否为域用户，都可以向独立根CA申请证书\n- 4) 独立从属CA（standalone suborinate CA）\n\t\t- a. 类似于企业从属CA,但是不需要AD域，扮演独立从属CA角色的计算机可以是独立服务器、成员服务器或域控制器\n\t\t- b. 无论是否为域用户，都可以向独立从属CA申请证书\n### 安装AD CS（证书服务） ###\n","slug":"PKI与SSL网站","published":1,"updated":"2018-11-16T07:18:58.197Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxj10006hcr34ex800xc","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"PKI概述-public-key-infrastruncture\"><a href=\"#PKI概述-public-key-infrastruncture\" class=\"headerlink\" title=\"PKI概述(public key infrastruncture)\"></a>PKI概述(public key infrastruncture)</h1><h2 id=\"PKI组成\"><a href=\"#PKI组成\" class=\"headerlink\" title=\"PKI组成\"></a>PKI组成</h2><ul>\n<li>PKI作为一组在分布式计算系统中利用公钥技术和X.509证书所提供的安全服务，企业或组织可利用相关产品建立安全域，并在其中发布密钥和证书。在安全域内，PKI管理加密密钥和证书的发布，并提供诸如密钥管理（包括密钥更新，密钥恢复和密钥委托等）、证书管理（包括证书产生和撤销等）和策略管理等。PKI产品也允许一个组织通过证书级别或直接交叉认证等方式来同其他安全域建立信任关系。这些服务和信任关系不能局限于独立的网络之内，而应建立在网络之间和Internet之上，为电子商务和网络通信提供安全保障，所以具有互操作性的结构化和标准化技术成为PKI的核心</li>\n<li>PKI在实际应用上是一套软硬件系统和安全策略的集合，它提供了一整套安全机制，使用户在不知道对方身份或分布地很广的情况下，以证书为基础，通过一系列的信任关系进行通讯和电子商务交易</li>\n<li>一个典型的PKI系统如图1所示，其中包括PKI策略、软硬件系统、证书机构CA、注册机构RA、证书发布系统和PKI应用等。<img src=\"https://i.imgur.com/bdIxZcI.png\" alt=\"\"><h3 id=\"PKI策略\"><a href=\"#PKI策略\" class=\"headerlink\" title=\"PKI策略\"></a>PKI策略</h3></li>\n<li>PKI安全策略建立和定义了一个组织信息安全方面的指导方针，同时也定义了密码系统使用的处理方法和原则。它包括一个组织怎样处理密钥和有价值的信息，根据风险的级别定义安全控制的级别。一般情况下，在PKI中有两种类型的策略：一是证书策略，用于管理证书的使用，比如，可以确认某一CA是在Internet上的公有CA，还是某一企业内部的私有CA；另外一个就是CPS（Certificate Practice Statement）。一些由商业证书发放机构（CCA）或者可信的第三方操作的PKI系统需要CPS。这是一个包含如何在实践中增强和支持安全策略的一些操作过程的详细文档。它包括CA是如何建立和运作的，证书是如何发行、接收和废除的，密钥是如何产生、注册的，以及密钥是如何存储的，用户是如何得到它的等等。<h3 id=\"证书机构CA\"><a href=\"#证书机构CA\" class=\"headerlink\" title=\"证书机构CA\"></a>证书机构CA</h3></li>\n<li>证书机构CA是PKI的信任基础，它管理公钥的整个生命周期，其作用包括：发放证书、规定证书的有效期和通过发布证书废除列表（CRL）确保必要时可以废除证书。<h3 id=\"注册机构RA\"><a href=\"#注册机构RA\" class=\"headerlink\" title=\"注册机构RA\"></a>注册机构RA</h3></li>\n<li>注册机构RA提供用户和CA之间的一个接口，它获取并认证用户的身份，向CA提出证书请求。它主要完成收集用户信息和确认用户身份的功能。这里指的用户，是指将要向认证中心（即CA）申请数字证书的客户，可以是个人，也可以是集团或团体、某政府机构等。注册管理一般由一个独立的注册机构（即RA）来承担。它接受用户的注册申请，审查用户的申请资格，并决定是否同意CA给其签发数字证书。注册机构并不给用户签发证书，而只是对用户进行资格审查。因此，RA可以设置在直接面对客户的业务部门，如银行的营业部、机构认识部门等。当然，对于一个规模较小的PKI应用系统来说，可把注册管理的职能由认证中心CA来完成，而不设立独立运行的RA。但这并不是取消了PKI的注册功能，而只是将其作为CA的一项功能而已。PKI国际标准推荐由一个独立的RA来完成注册管理的任务，可以增强应用系统的安全。 其功能包括个人身份审核、CRL管理、密钥产生和密钥对备份等。<h3 id=\"证书发布系统\"><a href=\"#证书发布系统\" class=\"headerlink\" title=\"证书发布系统\"></a>证书发布系统</h3></li>\n<li>证书发布系统负责证书的发放，如可以通过用户自己，或是通过目录服务。目录服务器可以是一个组织中现存的，也可以是PKI方案中提供的。<h3 id=\"PKI的应用\"><a href=\"#PKI的应用\" class=\"headerlink\" title=\"PKI的应用\"></a>PKI的应用</h3></li>\n<li>PKI的应用非常广泛，包括在web服务器和浏览器之间的通讯、电子邮件、电子数据交换（EDI）、在Internet上的信用卡交易和虚拟私有网（VPN）等。<h3 id=\"软硬件系统\"><a href=\"#软硬件系统\" class=\"headerlink\" title=\"软硬件系统\"></a>软硬件系统</h3></li>\n<li>PKI存储库包括LDAP目录服务器和普通数据库，用于对用户申请、证书、密钥、CRL和日志等信息进行存储和管理，并提供一定的查询功能。<h2 id=\"PKI的主要功能\"><a href=\"#PKI的主要功能\" class=\"headerlink\" title=\"PKI的主要功能\"></a>PKI的主要功能</h2></li>\n<li>安全性(encryption)：将传输的数据加密。</li>\n<li>不可否认性(authentication)：接收者PC会验证所收到的数据是否是由发件人本人所发送来的。</li>\n<li>完整性(integrity)：检查数据在传输过程中是否被篡改。</li>\n<li>补充：PKI是根据公钥加密系统(public key cryptography)来提供上述的三个功能</li>\n<li>公钥(public key)：用户的公钥可以公开给其他用户，以用于数据的加密</li>\n<li>私钥(private key)：用户的私钥是该用户私有的，一般存储在用户本地的计算机内，只有用户本身可以使用。<h2 id=\"公钥加密法\"><a href=\"#公钥加密法\" class=\"headerlink\" title=\"公钥加密法\"></a>公钥加密法</h2></li>\n<li>公钥加密：<img src=\"https://i.imgur.com/G0OUaLv.png\" alt=\"\"><h2 id=\"公钥验证-私钥签名\"><a href=\"#公钥验证-私钥签名\" class=\"headerlink\" title=\"公钥验证(私钥签名)\"></a>公钥验证(私钥签名)</h2></li>\n<li>私钥签名：A用私钥签名，B用A的公钥来验证确实是A发的。<img src=\"https://i.imgur.com/wqiozox.png\" alt=\"\"></li>\n<li>整个通信流程：<img src=\"https://i.imgur.com/ryg3vab.png\" alt=\"\"></li>\n<li><p>对称加密：<img src=\"https://i.imgur.com/OcEs8uP.png\" alt=\"\"></p>\n<p>  优点：</p>\n<pre><code>- 比非对称加密的加密速度快\n- 密钥的位数如果比较大，一般很难破解\n</code></pre><p>  缺点：</p>\n<pre><code>- 每位使用者都需要有唯一的密钥，密钥比较多的话，增加管理难度[n(n-1)/2个密钥]\n- 提供机密性，但不提供认证和防抵赖功能\n</code></pre></li>\n<li><p>非对称加密：<img src=\"https://i.imgur.com/gC5ayWh.png\" alt=\"\"></p>\n<h2 id=\"SSL网站安全连接过程\"><a href=\"#SSL网站安全连接过程\" class=\"headerlink\" title=\"SSL网站安全连接过程\"></a>SSL网站安全连接过程</h2></li>\n<li>简单图解：<img src=\"https://i.imgur.com/2DeRQ7I.png\" alt=\"\"></li>\n<li>具体过程：<ul>\n<li>(1) 客户端浏览器利用<code>https://www.birtop.com</code>来连接网站，客户端会先发出client hello信息给WEB服务器</li>\n<li>(2) WEB服务器会响应server hello信息给客户端，此信息内包含网站的证书信息(含公钥)</li>\n<li>(3) 客户端浏览器与网站双发开始协商SSL连接安全等级，如选择128/256…位加密密钥，位数越多，越难破解，数据越安全，但网站的性能越差。</li>\n<li>(4) 浏览器根据双发同意的安全等级来建立会话密钥，利用网站的公钥将会话密钥加密，将加密后的会话密钥送给我网站。</li>\n<li>(5) 网站利用自己的私钥来将会话密钥解密。</li>\n<li>(6) 浏览器与WEB网站双方相互之间传送的所有数据，都会利用这个会话密钥进行加密和解密。<h2 id=\"服务器的名称指示-SNI\"><a href=\"#服务器的名称指示-SNI\" class=\"headerlink\" title=\"服务器的名称指示(SNI)\"></a>服务器的名称指示(SNI)</h2></li>\n</ul>\n</li>\n<li>SNI （server name indication）</li>\n<li>(https)SSL服务对应的端口443，SNI能使客户端和服务器端进行访问的时候，在client hello消息和server hello消息里边标记域名等信息，更好的识别。方便服务器端选择正确的证书返回给客户端，以便客户端访问指定的网站。<h2 id=\"证书颁发机构（CA）概述与根CA的安装\"><a href=\"#证书颁发机构（CA）概述与根CA的安装\" class=\"headerlink\" title=\"证书颁发机构（CA）概述与根CA的安装\"></a>证书颁发机构（CA）概述与根CA的安装</h2></li>\n<li>CA:certification authority,可以搭建一台服务器，来作为证书颁发机构。<img src=\"https://i.imgur.com/rh7KZog.png\" alt=\"\"><h3 id=\"CA的信任\"><a href=\"#CA的信任\" class=\"headerlink\" title=\"CA的信任\"></a>CA的信任</h3></li>\n<li>1）两类重要的证书：<pre><code>- 第一类：用于建立信任关系得证书\n- 第二类：用户数据加密、签名，保证数据安全的证书\n</code></pre></li>\n<li>2）对于用户或网站他们的公钥与私钥是如何产生的？<pre><code>- a. 在申请证书时，需要输入姓名、地址与电子邮件等数据，这些数据会被发送到一个称为CSP的程序，CSP是微软公司用户在windows平台上提供第三方加密模块的接口标准。此程序已被安装在申请者的计算机内\n- b. CSP会自动建立一对密钥：一个公钥与一个私钥。CSP会将私钥存储到申请者的计算机的注册表中，然后将证书申请的数据与公钥一并发送给CA,CA检查这些数据无误后，会利用CA自己的私钥将要发放的证书进行签名，然后发放此证书。申请者收到证书后，将证书安装到他的计算机内。\n- c. 证书内容包含了证书的颁发对象、证书的有效期、颁发此证书的CA与CA的数字签名。还有申请者的姓名、地址、电子邮件、公钥等信息。\n- 注释：CSP:cryptographic service provider \n</code></pre><h3 id=\"AD证书服务的CA种类\"><a href=\"#AD证书服务的CA种类\" class=\"headerlink\" title=\"AD证书服务的CA种类\"></a>AD证书服务的CA种类</h3></li>\n<li>AD、CS的CA种类<pre><code>AD（active directory）、CS(certification service)的CA种类\n</code></pre></li>\n<li>1）企业根CA（enterprise root CA）<pre><code>- a. 需要AD环境（域环境），可以安装到域控制器或域成员服务器上\n- b. 发放证书的对象仅限域用户\n- c. 主要工作应该是用来发放证书给从属CA,发放证书的具体工作交给从属CA来负责。\n</code></pre></li>\n<li>2) 企业的从属CA（enterprise suborinate CA）<pre><code>- a. 也需要AD环境（域环境）\n- b. 适用于证书的具体管理和发放工作\n- c. 从属CA必须向其父CA取得证书后，才会正常工作\n- d. 从属CA也可以发放证书给下一层的从属CA\n</code></pre></li>\n<li>3) 独立根CA（standalone root CA）<pre><code>- a. 类似于企业根CA,但是不需要AD域，扮演独立根CA角色的计算机可以是独立服务器、成员服务器或域控制器\n- b. 无论是否为域用户，都可以向独立根CA申请证书\n</code></pre></li>\n<li>4) 独立从属CA（standalone suborinate CA）<pre><code>- a. 类似于企业从属CA,但是不需要AD域，扮演独立从属CA角色的计算机可以是独立服务器、成员服务器或域控制器\n- b. 无论是否为域用户，都可以向独立从属CA申请证书\n</code></pre><h3 id=\"安装AD-CS（证书服务）\"><a href=\"#安装AD-CS（证书服务）\" class=\"headerlink\" title=\"安装AD CS（证书服务）\"></a>安装AD CS（证书服务）</h3></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"PKI概述-public-key-infrastruncture\"><a href=\"#PKI概述-public-key-infrastruncture\" class=\"headerlink\" title=\"PKI概述(public key infrastruncture)\"></a>PKI概述(public key infrastruncture)</h1><h2 id=\"PKI组成\"><a href=\"#PKI组成\" class=\"headerlink\" title=\"PKI组成\"></a>PKI组成</h2><ul>\n<li>PKI作为一组在分布式计算系统中利用公钥技术和X.509证书所提供的安全服务，企业或组织可利用相关产品建立安全域，并在其中发布密钥和证书。在安全域内，PKI管理加密密钥和证书的发布，并提供诸如密钥管理（包括密钥更新，密钥恢复和密钥委托等）、证书管理（包括证书产生和撤销等）和策略管理等。PKI产品也允许一个组织通过证书级别或直接交叉认证等方式来同其他安全域建立信任关系。这些服务和信任关系不能局限于独立的网络之内，而应建立在网络之间和Internet之上，为电子商务和网络通信提供安全保障，所以具有互操作性的结构化和标准化技术成为PKI的核心</li>\n<li>PKI在实际应用上是一套软硬件系统和安全策略的集合，它提供了一整套安全机制，使用户在不知道对方身份或分布地很广的情况下，以证书为基础，通过一系列的信任关系进行通讯和电子商务交易</li>\n<li>一个典型的PKI系统如图1所示，其中包括PKI策略、软硬件系统、证书机构CA、注册机构RA、证书发布系统和PKI应用等。<img src=\"https://i.imgur.com/bdIxZcI.png\" alt=\"\"><h3 id=\"PKI策略\"><a href=\"#PKI策略\" class=\"headerlink\" title=\"PKI策略\"></a>PKI策略</h3></li>\n<li>PKI安全策略建立和定义了一个组织信息安全方面的指导方针，同时也定义了密码系统使用的处理方法和原则。它包括一个组织怎样处理密钥和有价值的信息，根据风险的级别定义安全控制的级别。一般情况下，在PKI中有两种类型的策略：一是证书策略，用于管理证书的使用，比如，可以确认某一CA是在Internet上的公有CA，还是某一企业内部的私有CA；另外一个就是CPS（Certificate Practice Statement）。一些由商业证书发放机构（CCA）或者可信的第三方操作的PKI系统需要CPS。这是一个包含如何在实践中增强和支持安全策略的一些操作过程的详细文档。它包括CA是如何建立和运作的，证书是如何发行、接收和废除的，密钥是如何产生、注册的，以及密钥是如何存储的，用户是如何得到它的等等。<h3 id=\"证书机构CA\"><a href=\"#证书机构CA\" class=\"headerlink\" title=\"证书机构CA\"></a>证书机构CA</h3></li>\n<li>证书机构CA是PKI的信任基础，它管理公钥的整个生命周期，其作用包括：发放证书、规定证书的有效期和通过发布证书废除列表（CRL）确保必要时可以废除证书。<h3 id=\"注册机构RA\"><a href=\"#注册机构RA\" class=\"headerlink\" title=\"注册机构RA\"></a>注册机构RA</h3></li>\n<li>注册机构RA提供用户和CA之间的一个接口，它获取并认证用户的身份，向CA提出证书请求。它主要完成收集用户信息和确认用户身份的功能。这里指的用户，是指将要向认证中心（即CA）申请数字证书的客户，可以是个人，也可以是集团或团体、某政府机构等。注册管理一般由一个独立的注册机构（即RA）来承担。它接受用户的注册申请，审查用户的申请资格，并决定是否同意CA给其签发数字证书。注册机构并不给用户签发证书，而只是对用户进行资格审查。因此，RA可以设置在直接面对客户的业务部门，如银行的营业部、机构认识部门等。当然，对于一个规模较小的PKI应用系统来说，可把注册管理的职能由认证中心CA来完成，而不设立独立运行的RA。但这并不是取消了PKI的注册功能，而只是将其作为CA的一项功能而已。PKI国际标准推荐由一个独立的RA来完成注册管理的任务，可以增强应用系统的安全。 其功能包括个人身份审核、CRL管理、密钥产生和密钥对备份等。<h3 id=\"证书发布系统\"><a href=\"#证书发布系统\" class=\"headerlink\" title=\"证书发布系统\"></a>证书发布系统</h3></li>\n<li>证书发布系统负责证书的发放，如可以通过用户自己，或是通过目录服务。目录服务器可以是一个组织中现存的，也可以是PKI方案中提供的。<h3 id=\"PKI的应用\"><a href=\"#PKI的应用\" class=\"headerlink\" title=\"PKI的应用\"></a>PKI的应用</h3></li>\n<li>PKI的应用非常广泛，包括在web服务器和浏览器之间的通讯、电子邮件、电子数据交换（EDI）、在Internet上的信用卡交易和虚拟私有网（VPN）等。<h3 id=\"软硬件系统\"><a href=\"#软硬件系统\" class=\"headerlink\" title=\"软硬件系统\"></a>软硬件系统</h3></li>\n<li>PKI存储库包括LDAP目录服务器和普通数据库，用于对用户申请、证书、密钥、CRL和日志等信息进行存储和管理，并提供一定的查询功能。<h2 id=\"PKI的主要功能\"><a href=\"#PKI的主要功能\" class=\"headerlink\" title=\"PKI的主要功能\"></a>PKI的主要功能</h2></li>\n<li>安全性(encryption)：将传输的数据加密。</li>\n<li>不可否认性(authentication)：接收者PC会验证所收到的数据是否是由发件人本人所发送来的。</li>\n<li>完整性(integrity)：检查数据在传输过程中是否被篡改。</li>\n<li>补充：PKI是根据公钥加密系统(public key cryptography)来提供上述的三个功能</li>\n<li>公钥(public key)：用户的公钥可以公开给其他用户，以用于数据的加密</li>\n<li>私钥(private key)：用户的私钥是该用户私有的，一般存储在用户本地的计算机内，只有用户本身可以使用。<h2 id=\"公钥加密法\"><a href=\"#公钥加密法\" class=\"headerlink\" title=\"公钥加密法\"></a>公钥加密法</h2></li>\n<li>公钥加密：<img src=\"https://i.imgur.com/G0OUaLv.png\" alt=\"\"><h2 id=\"公钥验证-私钥签名\"><a href=\"#公钥验证-私钥签名\" class=\"headerlink\" title=\"公钥验证(私钥签名)\"></a>公钥验证(私钥签名)</h2></li>\n<li>私钥签名：A用私钥签名，B用A的公钥来验证确实是A发的。<img src=\"https://i.imgur.com/wqiozox.png\" alt=\"\"></li>\n<li>整个通信流程：<img src=\"https://i.imgur.com/ryg3vab.png\" alt=\"\"></li>\n<li><p>对称加密：<img src=\"https://i.imgur.com/OcEs8uP.png\" alt=\"\"></p>\n<p>  优点：</p>\n<pre><code>- 比非对称加密的加密速度快\n- 密钥的位数如果比较大，一般很难破解\n</code></pre><p>  缺点：</p>\n<pre><code>- 每位使用者都需要有唯一的密钥，密钥比较多的话，增加管理难度[n(n-1)/2个密钥]\n- 提供机密性，但不提供认证和防抵赖功能\n</code></pre></li>\n<li><p>非对称加密：<img src=\"https://i.imgur.com/gC5ayWh.png\" alt=\"\"></p>\n<h2 id=\"SSL网站安全连接过程\"><a href=\"#SSL网站安全连接过程\" class=\"headerlink\" title=\"SSL网站安全连接过程\"></a>SSL网站安全连接过程</h2></li>\n<li>简单图解：<img src=\"https://i.imgur.com/2DeRQ7I.png\" alt=\"\"></li>\n<li>具体过程：<ul>\n<li>(1) 客户端浏览器利用<code>https://www.birtop.com</code>来连接网站，客户端会先发出client hello信息给WEB服务器</li>\n<li>(2) WEB服务器会响应server hello信息给客户端，此信息内包含网站的证书信息(含公钥)</li>\n<li>(3) 客户端浏览器与网站双发开始协商SSL连接安全等级，如选择128/256…位加密密钥，位数越多，越难破解，数据越安全，但网站的性能越差。</li>\n<li>(4) 浏览器根据双发同意的安全等级来建立会话密钥，利用网站的公钥将会话密钥加密，将加密后的会话密钥送给我网站。</li>\n<li>(5) 网站利用自己的私钥来将会话密钥解密。</li>\n<li>(6) 浏览器与WEB网站双方相互之间传送的所有数据，都会利用这个会话密钥进行加密和解密。<h2 id=\"服务器的名称指示-SNI\"><a href=\"#服务器的名称指示-SNI\" class=\"headerlink\" title=\"服务器的名称指示(SNI)\"></a>服务器的名称指示(SNI)</h2></li>\n</ul>\n</li>\n<li>SNI （server name indication）</li>\n<li>(https)SSL服务对应的端口443，SNI能使客户端和服务器端进行访问的时候，在client hello消息和server hello消息里边标记域名等信息，更好的识别。方便服务器端选择正确的证书返回给客户端，以便客户端访问指定的网站。<h2 id=\"证书颁发机构（CA）概述与根CA的安装\"><a href=\"#证书颁发机构（CA）概述与根CA的安装\" class=\"headerlink\" title=\"证书颁发机构（CA）概述与根CA的安装\"></a>证书颁发机构（CA）概述与根CA的安装</h2></li>\n<li>CA:certification authority,可以搭建一台服务器，来作为证书颁发机构。<img src=\"https://i.imgur.com/rh7KZog.png\" alt=\"\"><h3 id=\"CA的信任\"><a href=\"#CA的信任\" class=\"headerlink\" title=\"CA的信任\"></a>CA的信任</h3></li>\n<li>1）两类重要的证书：<pre><code>- 第一类：用于建立信任关系得证书\n- 第二类：用户数据加密、签名，保证数据安全的证书\n</code></pre></li>\n<li>2）对于用户或网站他们的公钥与私钥是如何产生的？<pre><code>- a. 在申请证书时，需要输入姓名、地址与电子邮件等数据，这些数据会被发送到一个称为CSP的程序，CSP是微软公司用户在windows平台上提供第三方加密模块的接口标准。此程序已被安装在申请者的计算机内\n- b. CSP会自动建立一对密钥：一个公钥与一个私钥。CSP会将私钥存储到申请者的计算机的注册表中，然后将证书申请的数据与公钥一并发送给CA,CA检查这些数据无误后，会利用CA自己的私钥将要发放的证书进行签名，然后发放此证书。申请者收到证书后，将证书安装到他的计算机内。\n- c. 证书内容包含了证书的颁发对象、证书的有效期、颁发此证书的CA与CA的数字签名。还有申请者的姓名、地址、电子邮件、公钥等信息。\n- 注释：CSP:cryptographic service provider \n</code></pre><h3 id=\"AD证书服务的CA种类\"><a href=\"#AD证书服务的CA种类\" class=\"headerlink\" title=\"AD证书服务的CA种类\"></a>AD证书服务的CA种类</h3></li>\n<li>AD、CS的CA种类<pre><code>AD（active directory）、CS(certification service)的CA种类\n</code></pre></li>\n<li>1）企业根CA（enterprise root CA）<pre><code>- a. 需要AD环境（域环境），可以安装到域控制器或域成员服务器上\n- b. 发放证书的对象仅限域用户\n- c. 主要工作应该是用来发放证书给从属CA,发放证书的具体工作交给从属CA来负责。\n</code></pre></li>\n<li>2) 企业的从属CA（enterprise suborinate CA）<pre><code>- a. 也需要AD环境（域环境）\n- b. 适用于证书的具体管理和发放工作\n- c. 从属CA必须向其父CA取得证书后，才会正常工作\n- d. 从属CA也可以发放证书给下一层的从属CA\n</code></pre></li>\n<li>3) 独立根CA（standalone root CA）<pre><code>- a. 类似于企业根CA,但是不需要AD域，扮演独立根CA角色的计算机可以是独立服务器、成员服务器或域控制器\n- b. 无论是否为域用户，都可以向独立根CA申请证书\n</code></pre></li>\n<li>4) 独立从属CA（standalone suborinate CA）<pre><code>- a. 类似于企业从属CA,但是不需要AD域，扮演独立从属CA角色的计算机可以是独立服务器、成员服务器或域控制器\n- b. 无论是否为域用户，都可以向独立从属CA申请证书\n</code></pre><h3 id=\"安装AD-CS（证书服务）\"><a href=\"#安装AD-CS（证书服务）\" class=\"headerlink\" title=\"安装AD CS（证书服务）\"></a>安装AD CS（证书服务）</h3></li>\n</ul>\n"},{"title":"centos7搭建EJBCA环境","date":"2018-11-05T02:30:27.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 一、介绍 #\n## EJBCA说明 ##\nEJBCA是一个全功能的CA系统软件，它基于J2EE技术，并提供了一个强大的、高性能并基于组件的CA。EJBCA兼具灵活性和平台独立性，能够独立使用，也能和任何J2EE应用程序集成。\n## EJBCA特性 ##\n- LGPL开源许可\n- 建立在J2EE 1.3(EJB2.0)规范上\n- 灵活的、基于组件的体系结构\n- 多久CA\n- 多个CA和多级CA,在一个EJBCA实例中创建一个或多个完整的基础设施单独运行，或者在任何J2EE应用中集成它\n- 简单的安装和配置\n- 强大的基于Web的管理界面，并采用了高强度的鉴别算法\n- 支持基于命令的管理，并支持脚本等功能\n- 支持个人证书申请或证书的批量生产\n- 服务器和客户端证书能够采用PKCS12，JKS或者PEM格式导出\n- 支持采用Netscape,Mozilla,IE等浏览器直接进行证书申请\n- 支持使用开放的API和工具通过其他应用程序申请证书\n- 由RA添加的新用户可以通过Email进行提醒\n- 对于新用户验证可以采用随机或手工的方式生成密码\n- 支持硬件模块，来集成硬件签发系统（如智能卡）\n- 支持SCEP\n- 支持用特定用户权限和用户组的方式来进行多极化管理\n- 对不同类型和内容的证书可以进行证书配置\n- 对不同类型的用户可以进行实体配置\n- 遵循X509和PKIX（RFC3280）标准\n- 支持CRL\n- 完全支持OCSP,包括AIA扩展\n- CRL生成和基于URL的CRL分发遵循RFC3280,可以在任何SQL数据库中存储证书和CRL（通过应用服务器来处理）\n- 可选的多个分发器，以用来在LDAP中发布证书和CRL\n- 支持用来为指定用户和证书来恢复私钥的密钥恢复模块\n- 基于组件的体系结构，用来在发布证书时采用多种实体授权方式\n- 容易集成到大型应用程序中，并集成到业务流程进行了优化\n- EJBCA完全采用java编写，能够在任何采用J2EE服务器的平台上运行。开发和测试是在linux和Windows上进行的\n# 二、安装 #\n## 安装前的准备 ##\n- jdk-8u191-linux-x64.rpm[JDK1.8]\n- apache-ant-1.9.7-bin.tar.gz\n- jboss-eap-6.4.0-installer.jar\n- ejbca_ce_6_3_1_1.zip\n- mysql\n- mysql-connector-java-5.1.27.jar\n- centos7\n## 系统准备 ##\n### 安装JDK1.8 ###\n- 检查已安装的jdk,如果有，先删除\n>\n\t\trpm -qa|grep java\n\t\trpm -e --nodeps filename\n\n- 从[oracle官网](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html, \"jdk-8u191-linux-x64.rpm\")下载jdk安装包：`jdk-8u191-linux-x64.rpm`,放在/usr/file/目录下\n- 用下面的命令安装，默认安装在/usr/java目录\n> \n\t\trpm -ivh jdk-8u191-linux-x64.rpm\n\n- 配置环境变量\n> \n\t\tvi /etc/profile\n\n- 追加如下内容：\n> \n\t\t#java conf\n\t\texport JAVA_HOME=/usr/java/jdk1.8.0_191\n\t\texport PATH=$PATH:$JAVA_HOME/bin\n\t\texport CLASSPATH=:$JAVA_HOME/lib\n\n- 使配置立即生效，然后检查安装结果\n> \n\t\tsource /etc/profile\n\t\tjava -version\n\n### 安装ant ###\n- 从[ant官网](https://archive.apache.org/dist/ant/binaries/, \"jdk-8u191-linux-x64.rpm\")下载jdk安装包：`apache-ant-1.10.0-bin.tar.gz`,解压\n> \n\t\ttar xvf apache-ant-1.10.0-bin.tar.gz -C /usr/java/\n\n- 配置环境变量\n> \n\t\tvi /etc/profile\n\n- 追加如下内容：\n> \n\t\t#ant conf\n\t\texport ANT_HOME=/usr/java/apache-ant-1.10.0\n\t\texport PATH=$PATH:$ANT_HOME/bin\n\n- 使配置立即生效，然后检查安装结果\n> \n\t\tsource /etc/profile\n\t\tant -version\n\n### 修改centos主机名 ###\n- 参考:`https://www.jianshu.com/p/39d7000dfa47`\n- 要查看主机名相关的设置：\n> \n\t\t[root@localhost ~]# hostnamectl\n\t\t[root@localhost ~]# hostnamectl status\n\n- 只查看静态、瞬态或灵活主机名，分别使用--static，--transient或--pretty选项\n> \n\t\t[root@localhost ~]# hostnamectl --static\n\t\tlocalhost.localdomain\n\t\t[root@localhost ~]# hostnamectl --transient\n\t\tlocalhost.localdomain\n\t\t[root@localhost ~]# hostnamectl --pretty\n\n- 要同时修改所有三个主机名：静态、瞬态和灵活主机名：\n> \n\t\t[root@localhost ~]# hostnamectl set-hostname by.cos7\n\t\t[root@localhost ~]# hostnamectl --pretty\n\t\t[root@localhost ~]# hostnamectl --static\n\t\tby.cos7\n\t\t[root@localhost ~]# hostnamectl --transient\n\t\tby.cos7\n\n- 就像上面展示的那样，在修改静态/瞬态主机名时，任何特殊字符或空白字符会被移除，而提供的参数中的任何大写字母会自动转化为小写。\n一旦修改了静态主机名，/etc/hostname 将被自动更新。然而，/etc/hosts 不会更新以保存所做的修改，所以你每次在修改主机名后一定要手动更新/etc/hosts，之后再重启CentOS 7。否则系统再启动时会很慢\n- 手动更新/etc/hosts\n> \n\t\tvim /etc/hosts\n\t\t#127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n\t\t127.0.0.1  by.cos7\n\t\t#::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\t\t::1        by.cos7\n\n- 重启CentOS 7 之后（reboot -f ）\n> \n\t\t[root@by ~]# hostname\n\t\tby.cos7\n\t\t[root@by ~]# hostnamectl\n- 如果你只想修改特定的主机名（静态，瞬态或灵活），你可以使用--static，--transient或--pretty选项。例如，要永久修改主机名，你可以修改静态主机名:\n> \n\t\t[root@localhost ~]# hostnamectl --static set-hostname by.cos7\n\n- 重启CentOS 7 之后（reboot -f ）\n> \n\t\t[root@by ~]# hostnamectl --static\n\t\tby.cos7\n\t\t[root@by ~]# hostnamectl --transient\n\t\tby.cos7\n\t\t[root@by ~]# hostnamectl --pretty\n\t\tby.cos7\n\t\t[root@by ~]# hostname\n\t\tby.cos7\n\n- 其实，你不必重启机器以激活永久主机名修改。上面的命令会立即修改内核主机名。\n注销并重新登入后在命令行提示来观察新的静态主机名\n### 安装mysql ###\n- 安装前查看已安装的mysql或mysql库，并删除它们\n> \n\t\trpm -qa|grep -i mysql\n\t\trpm -e --nodeps filename\n\n- 如果重装mysql，查找安装mysql产生的文件，并删除它们\n> \n\t\tfind / -name mysql\n\t\trm -fr filename\n\n- CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源\n> \n\t\t$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n\n- 安装mysql-community-release-el7-5.noarch.rpm包\n> \n\t\t$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm\n\n- 安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo\n- 安装mysql\n> \n\t\t$ sudo yum install mysql-server\n\n- 如果yum正在使用：强制关闭yum命令`rm -f /var/run/yum.pid`\n- 重置密码,重置密码前，首先要登录\n> \n\t\t$ mysql -u root\n\n- 登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘ (2)，原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：\n> \n\t\t$ sudo chown -R mysql:mysql /var/lib/mysql\n\n- 然后，重启服务：\n> \n\t\t$ service mysqld restart\n\n- 接下来登录重置密码：\n> \n\t\t$ mysql -u root\n\t\tmysql > use mysql;\n\t\tmysql > update user set password=password('123456') where user='root';\n\t\tmysql > exit;\n\n- 需要更改权限才能实现远程连接MYSQL数据库\n> \n\t\t# mysql -uroot -p\n\t\tEnter password: ******\n\t\tmysql> use mysql; (此DB存放MySQL的各种配置信息)\n\t\tDatabase changed\n\t\tmysql> select host,user from user; (查看用户的权限情况)\n\t\tmysql> select host, user, password from user;\n\t\t+-----------+------+-------------------------------------------+\n\t\t| host       | user | password                                   |\n\t\t+-----------+------+-------------------------------------------+\n\t\t| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t| localhost |       |                                            |\n\t\t+-----------+------+-------------------------------------------+\n\t\t4 rows in set (0.01 sec)\n\t\t由此可以看出，只能以localhost的主机方式访问。\n\t\t解决方法：\n\t\tmysql> Grant all privileges on *.* to 'root'@'%' identified by '123456' with grant option;\n\t\t(%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，)\n\t\tmysql> flush privileges;    (运行此句才生效，或者重启MySQL)\n\t\tQuery OK, 0 rows affected (0.03 sec)\n\t\t再次查看。。\n\t\tmysql> select host, user, password from user;\n\t\t+-----------+------+-------------------------------------------+\n\t\t| host       | user | password                                   |\n\t\t+-----------+------+-------------------------------------------+\n\t\t| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t| localhost |       |                                            |\n\t\t| %          | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t+-----------+------+-------------------------------------------+\n\t\t4 rows in set (0.01 sec)\n\n### 创建ejbca数据库 ###\n- 建数据库：\n>\n\t\tCREATE DATABASE ejbca CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n- 本机连接centos7中的数据库\n> \n\t\tvmware->编辑->虚拟网络编辑器->vmnet8->NAT设置->将虚拟ip地址加上（如80 192.168.171.143：80 TCP）\n\t\t关闭防火墙：\n\t\t[root@by ~]# systemctl stop firewalld.service\n\t\t本机hosts文件（windows/system32/drivers/etc/hosts）配置：\n\t\t192.168.171.144  by.cos7\n\n### 为EJBCA新建用户 ###\n- 进入root用户(su命令)：(设置pwd:ejbca)\n> \n\t\tadduser ca\n\t\tpasswd ca\n\n- 将安装包的所有者改成ca\n> \n\t\tmkdir /opt/ca/\n\t\tchown ca:ca /opt/ca\n\t\tchown ca:ca /opt/ca/jboss-eap-6.4.0-installer.jar\n\t\tchown ca:ca /opt/ca/ejbca_ce_6_3_1_1.zip\n\t\tchown ca:ca /opt/ca/mysql-connector-java-5.1.27.jar\n\n## 安装JBoss EAP ##\n- 切换用户: `su ca`\n- 用java命令安装JBoss EAP：\n> \n\t\tjava -jar /opt/ca/jboss-eap-6.4.0-installer.jar\n\n- 安装过程会有交互：\n> \n\t\t#选择安装语言，默认为英语\n\t\tSelect language  :\n\t\t0:  eng\n\t\t1:  chn\n\t\t2:  deu\n\t\t3:  fra\n\t\t4:  jpn\n\t\t5:  por\n\t\t6:  spa\n\t\tPlease choose  [0]  :\n\t\t\n\t\t#确认协议之后是安装路径，默认即可\n\t\tSelect the installation path:  [/root/EAP-6.4.0]\n\t\t\n\t\t#随后是部件选项，默认即可\n\t\tSelect the packs you want to  install:\n\t\t\n\t\t1    [x]  [Required]      [Red Hat JBoss Enterprise Application Platform]  (542.89  KB)\n\t\t2    [x] [AppClient]  (34.24  KB)\n\t\t3    [x]  [Required]      [Bin]  (10.99  MB)\n\t\t4    [x]  [Required]      [Bundles]  (1.01  MB)\n\t\t5    [x] [Docs]  (4.75  MB)\n\t\t6    [x]  [Required]      [Domain]  (125.56  KB)\n\t\t7    [x]  [Required]      [Domain Shell Scripts]  (17.35  KB)\n\t\t8    [x]  [Required]      [Modules]  (147.01  MB)\n\t\t9    [x]  [Required]      [Standalone]  (152.77  KB)\n\t\t10 [x]  [Required]      [Standalone Shell Scripts]  (14.16  KB)\n\t\t11 [x]  [Required]      [Welcome Content]  (2.11  MB)\n\t\t12 [x] [Red Hat JBoss Enterprise Application Platform Natives]  (8  KB)\n\t\t13 [x] [Native RHEL7 x86_64]  (76  KB)\n\t\t14 [x] [Native Utils RHEL7 x86_64]  (53.04  KB)\n\t\t15 [x] [Native Webserver RHEL7 x86_64]  (254.97  KB)\n\t\tTotal Size Required:  167.11  MB\n\t\tPress  0  to  confirm your selections\n\t\tPlease select which packs you want to  install\n\t\t\n\t\t#随后是jboss用户名和密码（admin:jbossadmin5*）\n\t\tAdmin username:  [admin]\n\t\tAdmin password:  []\n\t\t*************\n\t\tConfirm admin password:  [*************]\n\t\t*************\n\t\tpress  1  to  continue,  2  to  quit,  3  to  redisplay.\n\t\t\n\t\t#然后是演示文件的安装，我选择no\n\t\tQuickstarts\n\t\tRed Hat JBoss Enterprise Application Platform comes with  a  series of quickstart examples designed to  help users begin writing applications using the Java EE  6  technologies.  Would you like to  install quickstarts?\n\t\t0  [x]  No\n\t\t1  [  ]  Yes\n\t\t\n\t\t#最后是监听端口，默认是8080,\n\t\tSocket Bindings\n\t\tConfigure the socket bindings for  Red Hat JBoss Enterprise Application Platform.\n\t\tSelect Port Configuration:\n\t\t0  [x]  Use  the default  port bindings for  standalone and  domain modes.\n\t\t1  [  ]  Configure an offset for  all default  port bindings.\n\t\t2  [  ]  Configure custom port bindings.\n\t\t\n\t\t#紧接着是是否启用IPv6\n\t\tIf  this  computer is  using  a  pure IPv6 configuration,  please check the box below.\n\t\t  [  ]  Enable pure IPv6 configuration\n\t\t\n\t\t#然后会询问是否启动服务器，先不启动\n\t\tServer Launch\n\t\tChoose server startup mode:\n\t\t0  [x]  Don't  start the server\n\t\t1  [  ]  Standalone Mode\n\t\t2  [  ]  Domain Mode\n\t\t\n\t\t#选择日志等级\n\t\tConfigure the logging levels for  Red Hat JBoss Enterprise Application Platform?\n\t\t0  [x]  No\n\t\t1  [  ]  Yes\n\t\t#选择配置文件\n\t\tConfigure runtime environment\n\t\tThere are several additional options for  configuring Red Hat JBoss Enterprise Application Platform now that the server has been installed.  Each  option can be individually chosen,  and  will be configured in  the order displayed upon pressing next.  Would you like to  do  this  now?\n\t\t0  [x]  Perform default  configuration\n\t\t1  [  ]  Perform advanced configuration\n\n- 经过一系列交互之后就会解包安装：![](https://i.imgur.com/eqaXqq5.jpg)\n- 到这里已经完成JBoss EAP的安装，其实他有个基于web的控制面饭，但是服务器只监听127.0.0.1这个IP，如果需要监听其他IP或0.0.0.0，请修改以下文件：\n>\n\t\t#打开文件进行修改\n\t\t[root@ejbca  ~]# vim /opt/ca/EAP-6.4.0/standalone/configuration/standalone.xml\n\t\t搜索：/127.0.0.1\n\t\t#定位到interface的节点和该节点上面的127.0.0.1，修改监听地址为0.0.0.0\n\t    <interfaces>\n\t        <interface  name=\"management\">\n\t            <inet-address value=\"${jboss.bind.address.management:0.0.0.0}\"/>\n\t        </interface>\n\t        <interface  name=\"public\">\n\t            <inet-address value=\"${jboss.bind.address:0.0.0.0}\"/>\n\t        </interface>\n\t        <!--  TODO  -  only show this  if  the jacorb subsystem is  added  -->\n\t        <interface  name=\"unsecure\">\n\t            <!--\n\t              ~  Used for  IIOP sockets in  the standard configuration.\n\t              ~                  To  secure JacORB you need to  setup SSL\n\t              -->\n\t            <inet-address value=\"${jboss.bind.address.unsecure:0.0.0.0}\"/>\n\t        </interface>\n\t    </interfaces>\t\n\n- 随后使用以下命令启动服务，在这里先不用脚本，因为后面需要重启服务。启动服务后再打开一个SSH窗口进行下面的步骤：\n>\n\t\t[root@ejbca  ~]# /opt/ca/EAP-6.4.0/bin/standalone.sh\n\t\t（ps:此处不会用）顺便记一下关闭服务的命令：ctrl+c或者如下：\n\t\tps -ef|grep jboss\n\t\tkill -9 进程号\n\n- 确认JBoss EAP服务启动后即可通过浏览器打开管理界面：访问http:by.cos7:8080/\n## 配置jboss的mysql数据源 ##\n- 创建目录，然后在该目录下创建module.xml\n>\n\t\tmkdir -p /opt/ca/EAP-6.4.0/modules/com/mysql/main/\n\t\tcd /opt/ca/EAP-6.4.0/modules/com/mysql/main\n\t\tvi module.xml\n\n- module.xml内容如下：\n>\n\t\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t\t\t<module xmlns=\"urn:jboss:module:1.0\" name=\"com.mysql\">\n\t\t\t<resources>\n\t\t\t\t<resource-root path=\"mysql-connector-java-5.1.27.jar\"/>\n\t\t\t</resources>\n\t\t\t<dependencies>\n\t\t\t\t<module name=\"javax.api\"/>\n\t\t\t\t<module name=\"javax.transaction.api\"/>\n\t\t\t\t<module name=\"org.slf4j\"/>\n\t\t\t</dependencies>\n\t\t</module>\n\n- 将mysql的驱动包`mysql-connector-java-5.1.27.jar`，拷贝到当前目录xxx/mian\n>\n\t\tcp /home/ca/Downloads/mysql-connector-java-5.1.27.jar ./\n\n- 打开新的shell窗口，运行\n>\n\t\t[root@by EAP-6.4.0]# /opt/ca/EAP-6.4.0/bin/jboss-cli.sh\n\t\tYou are disconnected at  the moment.  Type  'connect'  to  connect to  the server or  'help'  for  the list of supported commands.\n\t\t[disconnected  /]\n\n- 如果提示disconnected，则需要输入connect并回车，如果一切正常则显示：\n>\n\t\t[standalone@localhost:9999  /]\n\n- 然后输入以下命令在JBoss中注册mysql驱动：\n>\n\t\t#注册驱动\n\t\t/subsystem=datasources/jdbc-driver=com.mysql.jdbc.Driver:add(driver-name=com.mysql.jdbc.Driver,driver-class-name=com.mysql.jdbc.Driver,driver-module-name=com.mysql,driver-xa-datasource-class-name=com.mysql.jdbc.jdbc.jdbc2.optional.MysqlXADataSource)\n\t\t#重新加载\n\t\t:reload\n\n- 完成后输入exit回车即可退出。\n## 安装ejbca ##\n- 　从ejbca官方网站下载ejbca安装包：ejbca_ce_6_3_1_1.zip，放在/usr/file目录，解压，准备修改配置\n>\n\t\tunzip /usr/file/ejbca_ce_6_3_1_1.zip -d /usr/java\n\t\tcd /usr/java\n\t\tmv ejbca_ce_6_3_1_1 ejbca-ce-6.3.1.1\n\t\tcd /usr/java/ejbca-ce-6.3.1.1/conf/\n\t\t# 配置文件目录包含以下文件：\n\t\tll -h\n\n- EJBCA只加载后缀名为properties的文件，否则则加载默认配置。在这里我们需要修改以下文件：\n>\n\t\tdatabase.properties：数据库配置文件\n\t\tejbca.properties：EJBCA配置文件\n\t\tinstall.properties：安装配置文件\n\t\tweb.properties：web服务配置文件\n\n- 首先是数据库配置文件，先将文件复制一份然后进行修改:\n>\n\t\t# 复制\n\t\tcp database.properties.sample database.properties\n\t\t# 修改\n\t\tvim database.properties\n\t\t# 修改以下内容\n\t\tdatasource.jndi-name=jboss/datasources/MySqlDS\n\t\tdatabase.name=mysql\n\t\tdatabase.url=jdbc:mysql://by.cos7:3306/ejbca?characterEncoding=UTF-8\n\t\tdatabase.driver=org.mysql.jdbc.Driver\n\t\tdatabase.username=root\n\t\tdatabase.password=123456\n\n- 然后复制并修改EJBCA配置文件:\n>\n\t\t# 复制\n\t\tcp ejbca.properties.sample ejbca.properties\n\t\t# 修改\n\t\tvim ejbca.properties\n\t\t# 修改以下内容\n\t\tappserver.home=/opt/ca/EAP-6.4.0\n\t\tappserver.type=jboss\n\t\tapproval.defaultrequestvalidity=28800 #保持默认状态\n\t\tapproval.defaultapprovalvalidity=28800 #保持默认状态\n\t\tejbca.passwordlogrounds=8 #设置密码为8位\n\n- 然后修改安装配置文件：\n>\n\t\t# 复制\n\t\tcp install.properties.sample install.properties\n\t\t# 修改\n\t\tvim install.properties\n\t\t# 修改以下内容\n\t\tca.name=EnginxManagementCA\n\t\tca.dn=CN=TestManagementCA,O=Test,C=CN\n\t\tca.tokentype=soft\n\t\tca.tokenpassword=null\n\t\tca.keyspec=4096\n\t\tca.keytype=RSA\n\t\tca.signaturealgorithm=SHA256WithRSA\n\t\tca.validity=3650\n\t\tca.policy=null\n\t\tca.certificateprofile=ROOTCA #要修改\n\n- 最后是web服务配置文件：\n>\n\t\t# 复制\n\t\tcp web.properties.sample web.properties\n\t\t# 修改\n\t\tvim web.properties\n\t\t# 修改以下内容\n\t\tjava.trustpassword=changeit  #默认即可\n\t\tsuperadmin.cn=SuperAdmin  #默认即可\n\t\tsuperadmin.dn=CN=${superadmin.cn},O=Test,C=CN\n\t\tsuperadmin.password=ejbca  #默认即可\n\t\tsuperadmin.batch=true\n\t\thttpsserver.password=serverpwd  #默认即可\n\t\thttpsserver.hostname=by.cos7\n\t\thttpsserver.dn=CN=${httpsserver.hostname},O=Test,C=CN\n\t\thttpserver.pubhttp=8080 #不修改\n\t\thttpserver.pubhttps=8442 #不修改\n\t\thttpserver.privhttps=8443 #不修改\n## 部署ejbca到jboss ##\n- deploy用ant部署，install生成证书，deploy-keystore将证书部署到jboss，前两步所需时间较长，过程中如需输入，请直接回车:\n>\n\t\tcd /opt/ca/ejbca-ce-6.3.1.1\n\t\tant clean deploy\n\t\tant install #成功后会生成数据库表\n\t\tant deploy-keystore\n## 配置jboss的https ##\n- 打开新的shell窗口，运行\n>\n\t\t/opt/ca/EAP-6.4.0/bin/jboss-cli.sh\n\t\t如果是“disconnect”状态，运行“connect”，多回车几次，准备运行下面4部分配置\n\n- 第一部分（配置任意主机可访问）\n>\n\t\t/interface=http:add(inet-address=\"0.0.0.0\")\n\t\t/interface=httpspub:add(inet-address=\"0.0.0.0\")\n\t\t/interface=httpspriv:add(inet-address=\"0.0.0.0\")\n\t\t/socket-binding-group=standard-sockets/socket-binding=http:add(port=\"8080\",interface=\"http\")\n\t\t/subsystem=undertow/server=default-server/http-listener=http:add(socket-binding=http)\n\t\t/subsystem=undertow/server=default-server/http-listener=http:write-attribute(name=redirect-socket, value=\"httpspriv\")\n\t\t:reload\n\n- 第二部分（配置证书））\n>\n\t\t/core-service=management/security-realm=SSLRealm:add()\n\t\t/core-service=management/security-realm=SSLRealm/server-identity=ssl:add(keystore-path=\"${jboss.server.config.dir}/keystore/keystore.jks\", keystore-password=\"serverpwd\", alias=\"prod-ica1\")\n\t\t/core-service=management/security-realm=SSLRealm/authentication=truststore:add(keystore-path=\"${jboss.server.config.dir}/keystore/truststore.jks\", keystore-password=\"changeit\")\n\t\t/socket-binding-group=standard-sockets/socket-binding=httpspriv:add(port=\"8443\",interface=\"httpspriv\")\n\t\t/socket-binding-group=standard-sockets/socket-binding=httpspub:add(port=\"8442\", interface=\"httpspub\")\n\t\t:reload\n\n\n- 第三部分（配置ssl））\n>\n\t\t/subsystem=undertow/server=default-server/https-listener=httpspriv:add(socket-binding=httpspriv, security-realm=\"SSLRealm\", verify-client=REQUIRED)\n\t\t/subsystem=undertow/server=default-server/https-listener=httpspub:add(socket-binding=httpspub, security-realm=\"SSLRealm\")\n\t\t:reload\n\n- 第四部分（配置web service）\n>\n\t\t/system-property=org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH:add(value=true)\n\t\t/system-property=org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH:add(value=true)\n\t\t/system-property=org.apache.catalina.connector.URI_ENCODING:add(value=\"UTF-8\")\n\t\t/system-property=org.apache.catalina.connector.USE_BODY_ENCODING_FOR_QUERY_STRING:add(value=true)\n\t\t/subsystem=webservices:write-attribute(name=wsdl-host, value=jbossws.undefined.host)\n\t\t/subsystem=webservices:write-attribute(name=modify-wsdl-address, value=true)\n\t\t:reload\n\n## 使用ejbca community 6.3.1.1 ##\n- 假设ejbca服务器地址：172.17.210.124，编辑windows的“C:\\Windows\\System32\\drivers\\etc”下的hosts文件，加入一行`172.17.210.124 by.cos7`\n- 拷贝ejbca服务器“/usr/java/ejbca-ce-6.3.1.1/p12/”下的superadmin.p12到windows，双击安装，密码“ejbca”,ejbca提供了两个界面\n- 用户界面:`http://by.cos7:8080/ejbca/`\n- 管理员界面（需要证书，使用刚才安装的superadmin证书）:`https://by.cos7:8443/ejbca/adminweb/`\n- 图片参考：![](https://i.imgur.com/10L0sEU.jpg)![](https://i.imgur.com/1hKKnKm.jpg)![](https://i.imgur.com/TvEsmb5.jpg)![](https://i.imgur.com/jizg2OD.png)![](https://i.imgur.com/4SjRPld.png)\n# 三、参考链接 #\n- `https://www.jianshu.com/p/56051594fee9`\n- `https://www.bbsmax.com/A/xl56xw2Yzr/`\n- `https://piggsoft.com/2018/07/11/PKI%E4%BD%93%E7%B3%BB%EF%BC%88%E4%B8%89%EF%BC%89-EJBCA%E5%AE%89%E8%A3%85/`\n- (centos7安装mysql)`https://www.cnblogs.com/julyme/p/5969626.html`\n- (centos改主机名)`https://www.jianshu.com/p/39d7000dfa47`\n- (EJBCA下载)`https://www.ejbca.org/download.html`\n- (JBoss EAP) `https://developers.redhat.com/products/eap/download/)`6.4.0\n- (JDK下载)`https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html`","source":"_posts/centos7搭建EJBCA环境.md","raw":"---\ntitle: centos7搭建EJBCA环境\ndate: 2018-11-05 10:30:27\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 一、介绍 #\n## EJBCA说明 ##\nEJBCA是一个全功能的CA系统软件，它基于J2EE技术，并提供了一个强大的、高性能并基于组件的CA。EJBCA兼具灵活性和平台独立性，能够独立使用，也能和任何J2EE应用程序集成。\n## EJBCA特性 ##\n- LGPL开源许可\n- 建立在J2EE 1.3(EJB2.0)规范上\n- 灵活的、基于组件的体系结构\n- 多久CA\n- 多个CA和多级CA,在一个EJBCA实例中创建一个或多个完整的基础设施单独运行，或者在任何J2EE应用中集成它\n- 简单的安装和配置\n- 强大的基于Web的管理界面，并采用了高强度的鉴别算法\n- 支持基于命令的管理，并支持脚本等功能\n- 支持个人证书申请或证书的批量生产\n- 服务器和客户端证书能够采用PKCS12，JKS或者PEM格式导出\n- 支持采用Netscape,Mozilla,IE等浏览器直接进行证书申请\n- 支持使用开放的API和工具通过其他应用程序申请证书\n- 由RA添加的新用户可以通过Email进行提醒\n- 对于新用户验证可以采用随机或手工的方式生成密码\n- 支持硬件模块，来集成硬件签发系统（如智能卡）\n- 支持SCEP\n- 支持用特定用户权限和用户组的方式来进行多极化管理\n- 对不同类型和内容的证书可以进行证书配置\n- 对不同类型的用户可以进行实体配置\n- 遵循X509和PKIX（RFC3280）标准\n- 支持CRL\n- 完全支持OCSP,包括AIA扩展\n- CRL生成和基于URL的CRL分发遵循RFC3280,可以在任何SQL数据库中存储证书和CRL（通过应用服务器来处理）\n- 可选的多个分发器，以用来在LDAP中发布证书和CRL\n- 支持用来为指定用户和证书来恢复私钥的密钥恢复模块\n- 基于组件的体系结构，用来在发布证书时采用多种实体授权方式\n- 容易集成到大型应用程序中，并集成到业务流程进行了优化\n- EJBCA完全采用java编写，能够在任何采用J2EE服务器的平台上运行。开发和测试是在linux和Windows上进行的\n# 二、安装 #\n## 安装前的准备 ##\n- jdk-8u191-linux-x64.rpm[JDK1.8]\n- apache-ant-1.9.7-bin.tar.gz\n- jboss-eap-6.4.0-installer.jar\n- ejbca_ce_6_3_1_1.zip\n- mysql\n- mysql-connector-java-5.1.27.jar\n- centos7\n## 系统准备 ##\n### 安装JDK1.8 ###\n- 检查已安装的jdk,如果有，先删除\n>\n\t\trpm -qa|grep java\n\t\trpm -e --nodeps filename\n\n- 从[oracle官网](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html, \"jdk-8u191-linux-x64.rpm\")下载jdk安装包：`jdk-8u191-linux-x64.rpm`,放在/usr/file/目录下\n- 用下面的命令安装，默认安装在/usr/java目录\n> \n\t\trpm -ivh jdk-8u191-linux-x64.rpm\n\n- 配置环境变量\n> \n\t\tvi /etc/profile\n\n- 追加如下内容：\n> \n\t\t#java conf\n\t\texport JAVA_HOME=/usr/java/jdk1.8.0_191\n\t\texport PATH=$PATH:$JAVA_HOME/bin\n\t\texport CLASSPATH=:$JAVA_HOME/lib\n\n- 使配置立即生效，然后检查安装结果\n> \n\t\tsource /etc/profile\n\t\tjava -version\n\n### 安装ant ###\n- 从[ant官网](https://archive.apache.org/dist/ant/binaries/, \"jdk-8u191-linux-x64.rpm\")下载jdk安装包：`apache-ant-1.10.0-bin.tar.gz`,解压\n> \n\t\ttar xvf apache-ant-1.10.0-bin.tar.gz -C /usr/java/\n\n- 配置环境变量\n> \n\t\tvi /etc/profile\n\n- 追加如下内容：\n> \n\t\t#ant conf\n\t\texport ANT_HOME=/usr/java/apache-ant-1.10.0\n\t\texport PATH=$PATH:$ANT_HOME/bin\n\n- 使配置立即生效，然后检查安装结果\n> \n\t\tsource /etc/profile\n\t\tant -version\n\n### 修改centos主机名 ###\n- 参考:`https://www.jianshu.com/p/39d7000dfa47`\n- 要查看主机名相关的设置：\n> \n\t\t[root@localhost ~]# hostnamectl\n\t\t[root@localhost ~]# hostnamectl status\n\n- 只查看静态、瞬态或灵活主机名，分别使用--static，--transient或--pretty选项\n> \n\t\t[root@localhost ~]# hostnamectl --static\n\t\tlocalhost.localdomain\n\t\t[root@localhost ~]# hostnamectl --transient\n\t\tlocalhost.localdomain\n\t\t[root@localhost ~]# hostnamectl --pretty\n\n- 要同时修改所有三个主机名：静态、瞬态和灵活主机名：\n> \n\t\t[root@localhost ~]# hostnamectl set-hostname by.cos7\n\t\t[root@localhost ~]# hostnamectl --pretty\n\t\t[root@localhost ~]# hostnamectl --static\n\t\tby.cos7\n\t\t[root@localhost ~]# hostnamectl --transient\n\t\tby.cos7\n\n- 就像上面展示的那样，在修改静态/瞬态主机名时，任何特殊字符或空白字符会被移除，而提供的参数中的任何大写字母会自动转化为小写。\n一旦修改了静态主机名，/etc/hostname 将被自动更新。然而，/etc/hosts 不会更新以保存所做的修改，所以你每次在修改主机名后一定要手动更新/etc/hosts，之后再重启CentOS 7。否则系统再启动时会很慢\n- 手动更新/etc/hosts\n> \n\t\tvim /etc/hosts\n\t\t#127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n\t\t127.0.0.1  by.cos7\n\t\t#::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\t\t::1        by.cos7\n\n- 重启CentOS 7 之后（reboot -f ）\n> \n\t\t[root@by ~]# hostname\n\t\tby.cos7\n\t\t[root@by ~]# hostnamectl\n- 如果你只想修改特定的主机名（静态，瞬态或灵活），你可以使用--static，--transient或--pretty选项。例如，要永久修改主机名，你可以修改静态主机名:\n> \n\t\t[root@localhost ~]# hostnamectl --static set-hostname by.cos7\n\n- 重启CentOS 7 之后（reboot -f ）\n> \n\t\t[root@by ~]# hostnamectl --static\n\t\tby.cos7\n\t\t[root@by ~]# hostnamectl --transient\n\t\tby.cos7\n\t\t[root@by ~]# hostnamectl --pretty\n\t\tby.cos7\n\t\t[root@by ~]# hostname\n\t\tby.cos7\n\n- 其实，你不必重启机器以激活永久主机名修改。上面的命令会立即修改内核主机名。\n注销并重新登入后在命令行提示来观察新的静态主机名\n### 安装mysql ###\n- 安装前查看已安装的mysql或mysql库，并删除它们\n> \n\t\trpm -qa|grep -i mysql\n\t\trpm -e --nodeps filename\n\n- 如果重装mysql，查找安装mysql产生的文件，并删除它们\n> \n\t\tfind / -name mysql\n\t\trm -fr filename\n\n- CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源\n> \n\t\t$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n\n- 安装mysql-community-release-el7-5.noarch.rpm包\n> \n\t\t$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm\n\n- 安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo\n- 安装mysql\n> \n\t\t$ sudo yum install mysql-server\n\n- 如果yum正在使用：强制关闭yum命令`rm -f /var/run/yum.pid`\n- 重置密码,重置密码前，首先要登录\n> \n\t\t$ mysql -u root\n\n- 登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘ (2)，原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：\n> \n\t\t$ sudo chown -R mysql:mysql /var/lib/mysql\n\n- 然后，重启服务：\n> \n\t\t$ service mysqld restart\n\n- 接下来登录重置密码：\n> \n\t\t$ mysql -u root\n\t\tmysql > use mysql;\n\t\tmysql > update user set password=password('123456') where user='root';\n\t\tmysql > exit;\n\n- 需要更改权限才能实现远程连接MYSQL数据库\n> \n\t\t# mysql -uroot -p\n\t\tEnter password: ******\n\t\tmysql> use mysql; (此DB存放MySQL的各种配置信息)\n\t\tDatabase changed\n\t\tmysql> select host,user from user; (查看用户的权限情况)\n\t\tmysql> select host, user, password from user;\n\t\t+-----------+------+-------------------------------------------+\n\t\t| host       | user | password                                   |\n\t\t+-----------+------+-------------------------------------------+\n\t\t| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t| localhost |       |                                            |\n\t\t+-----------+------+-------------------------------------------+\n\t\t4 rows in set (0.01 sec)\n\t\t由此可以看出，只能以localhost的主机方式访问。\n\t\t解决方法：\n\t\tmysql> Grant all privileges on *.* to 'root'@'%' identified by '123456' with grant option;\n\t\t(%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，)\n\t\tmysql> flush privileges;    (运行此句才生效，或者重启MySQL)\n\t\tQuery OK, 0 rows affected (0.03 sec)\n\t\t再次查看。。\n\t\tmysql> select host, user, password from user;\n\t\t+-----------+------+-------------------------------------------+\n\t\t| host       | user | password                                   |\n\t\t+-----------+------+-------------------------------------------+\n\t\t| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t| localhost |       |                                            |\n\t\t| %          | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n\t\t+-----------+------+-------------------------------------------+\n\t\t4 rows in set (0.01 sec)\n\n### 创建ejbca数据库 ###\n- 建数据库：\n>\n\t\tCREATE DATABASE ejbca CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n- 本机连接centos7中的数据库\n> \n\t\tvmware->编辑->虚拟网络编辑器->vmnet8->NAT设置->将虚拟ip地址加上（如80 192.168.171.143：80 TCP）\n\t\t关闭防火墙：\n\t\t[root@by ~]# systemctl stop firewalld.service\n\t\t本机hosts文件（windows/system32/drivers/etc/hosts）配置：\n\t\t192.168.171.144  by.cos7\n\n### 为EJBCA新建用户 ###\n- 进入root用户(su命令)：(设置pwd:ejbca)\n> \n\t\tadduser ca\n\t\tpasswd ca\n\n- 将安装包的所有者改成ca\n> \n\t\tmkdir /opt/ca/\n\t\tchown ca:ca /opt/ca\n\t\tchown ca:ca /opt/ca/jboss-eap-6.4.0-installer.jar\n\t\tchown ca:ca /opt/ca/ejbca_ce_6_3_1_1.zip\n\t\tchown ca:ca /opt/ca/mysql-connector-java-5.1.27.jar\n\n## 安装JBoss EAP ##\n- 切换用户: `su ca`\n- 用java命令安装JBoss EAP：\n> \n\t\tjava -jar /opt/ca/jboss-eap-6.4.0-installer.jar\n\n- 安装过程会有交互：\n> \n\t\t#选择安装语言，默认为英语\n\t\tSelect language  :\n\t\t0:  eng\n\t\t1:  chn\n\t\t2:  deu\n\t\t3:  fra\n\t\t4:  jpn\n\t\t5:  por\n\t\t6:  spa\n\t\tPlease choose  [0]  :\n\t\t\n\t\t#确认协议之后是安装路径，默认即可\n\t\tSelect the installation path:  [/root/EAP-6.4.0]\n\t\t\n\t\t#随后是部件选项，默认即可\n\t\tSelect the packs you want to  install:\n\t\t\n\t\t1    [x]  [Required]      [Red Hat JBoss Enterprise Application Platform]  (542.89  KB)\n\t\t2    [x] [AppClient]  (34.24  KB)\n\t\t3    [x]  [Required]      [Bin]  (10.99  MB)\n\t\t4    [x]  [Required]      [Bundles]  (1.01  MB)\n\t\t5    [x] [Docs]  (4.75  MB)\n\t\t6    [x]  [Required]      [Domain]  (125.56  KB)\n\t\t7    [x]  [Required]      [Domain Shell Scripts]  (17.35  KB)\n\t\t8    [x]  [Required]      [Modules]  (147.01  MB)\n\t\t9    [x]  [Required]      [Standalone]  (152.77  KB)\n\t\t10 [x]  [Required]      [Standalone Shell Scripts]  (14.16  KB)\n\t\t11 [x]  [Required]      [Welcome Content]  (2.11  MB)\n\t\t12 [x] [Red Hat JBoss Enterprise Application Platform Natives]  (8  KB)\n\t\t13 [x] [Native RHEL7 x86_64]  (76  KB)\n\t\t14 [x] [Native Utils RHEL7 x86_64]  (53.04  KB)\n\t\t15 [x] [Native Webserver RHEL7 x86_64]  (254.97  KB)\n\t\tTotal Size Required:  167.11  MB\n\t\tPress  0  to  confirm your selections\n\t\tPlease select which packs you want to  install\n\t\t\n\t\t#随后是jboss用户名和密码（admin:jbossadmin5*）\n\t\tAdmin username:  [admin]\n\t\tAdmin password:  []\n\t\t*************\n\t\tConfirm admin password:  [*************]\n\t\t*************\n\t\tpress  1  to  continue,  2  to  quit,  3  to  redisplay.\n\t\t\n\t\t#然后是演示文件的安装，我选择no\n\t\tQuickstarts\n\t\tRed Hat JBoss Enterprise Application Platform comes with  a  series of quickstart examples designed to  help users begin writing applications using the Java EE  6  technologies.  Would you like to  install quickstarts?\n\t\t0  [x]  No\n\t\t1  [  ]  Yes\n\t\t\n\t\t#最后是监听端口，默认是8080,\n\t\tSocket Bindings\n\t\tConfigure the socket bindings for  Red Hat JBoss Enterprise Application Platform.\n\t\tSelect Port Configuration:\n\t\t0  [x]  Use  the default  port bindings for  standalone and  domain modes.\n\t\t1  [  ]  Configure an offset for  all default  port bindings.\n\t\t2  [  ]  Configure custom port bindings.\n\t\t\n\t\t#紧接着是是否启用IPv6\n\t\tIf  this  computer is  using  a  pure IPv6 configuration,  please check the box below.\n\t\t  [  ]  Enable pure IPv6 configuration\n\t\t\n\t\t#然后会询问是否启动服务器，先不启动\n\t\tServer Launch\n\t\tChoose server startup mode:\n\t\t0  [x]  Don't  start the server\n\t\t1  [  ]  Standalone Mode\n\t\t2  [  ]  Domain Mode\n\t\t\n\t\t#选择日志等级\n\t\tConfigure the logging levels for  Red Hat JBoss Enterprise Application Platform?\n\t\t0  [x]  No\n\t\t1  [  ]  Yes\n\t\t#选择配置文件\n\t\tConfigure runtime environment\n\t\tThere are several additional options for  configuring Red Hat JBoss Enterprise Application Platform now that the server has been installed.  Each  option can be individually chosen,  and  will be configured in  the order displayed upon pressing next.  Would you like to  do  this  now?\n\t\t0  [x]  Perform default  configuration\n\t\t1  [  ]  Perform advanced configuration\n\n- 经过一系列交互之后就会解包安装：![](https://i.imgur.com/eqaXqq5.jpg)\n- 到这里已经完成JBoss EAP的安装，其实他有个基于web的控制面饭，但是服务器只监听127.0.0.1这个IP，如果需要监听其他IP或0.0.0.0，请修改以下文件：\n>\n\t\t#打开文件进行修改\n\t\t[root@ejbca  ~]# vim /opt/ca/EAP-6.4.0/standalone/configuration/standalone.xml\n\t\t搜索：/127.0.0.1\n\t\t#定位到interface的节点和该节点上面的127.0.0.1，修改监听地址为0.0.0.0\n\t    <interfaces>\n\t        <interface  name=\"management\">\n\t            <inet-address value=\"${jboss.bind.address.management:0.0.0.0}\"/>\n\t        </interface>\n\t        <interface  name=\"public\">\n\t            <inet-address value=\"${jboss.bind.address:0.0.0.0}\"/>\n\t        </interface>\n\t        <!--  TODO  -  only show this  if  the jacorb subsystem is  added  -->\n\t        <interface  name=\"unsecure\">\n\t            <!--\n\t              ~  Used for  IIOP sockets in  the standard configuration.\n\t              ~                  To  secure JacORB you need to  setup SSL\n\t              -->\n\t            <inet-address value=\"${jboss.bind.address.unsecure:0.0.0.0}\"/>\n\t        </interface>\n\t    </interfaces>\t\n\n- 随后使用以下命令启动服务，在这里先不用脚本，因为后面需要重启服务。启动服务后再打开一个SSH窗口进行下面的步骤：\n>\n\t\t[root@ejbca  ~]# /opt/ca/EAP-6.4.0/bin/standalone.sh\n\t\t（ps:此处不会用）顺便记一下关闭服务的命令：ctrl+c或者如下：\n\t\tps -ef|grep jboss\n\t\tkill -9 进程号\n\n- 确认JBoss EAP服务启动后即可通过浏览器打开管理界面：访问http:by.cos7:8080/\n## 配置jboss的mysql数据源 ##\n- 创建目录，然后在该目录下创建module.xml\n>\n\t\tmkdir -p /opt/ca/EAP-6.4.0/modules/com/mysql/main/\n\t\tcd /opt/ca/EAP-6.4.0/modules/com/mysql/main\n\t\tvi module.xml\n\n- module.xml内容如下：\n>\n\t\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t\t\t<module xmlns=\"urn:jboss:module:1.0\" name=\"com.mysql\">\n\t\t\t<resources>\n\t\t\t\t<resource-root path=\"mysql-connector-java-5.1.27.jar\"/>\n\t\t\t</resources>\n\t\t\t<dependencies>\n\t\t\t\t<module name=\"javax.api\"/>\n\t\t\t\t<module name=\"javax.transaction.api\"/>\n\t\t\t\t<module name=\"org.slf4j\"/>\n\t\t\t</dependencies>\n\t\t</module>\n\n- 将mysql的驱动包`mysql-connector-java-5.1.27.jar`，拷贝到当前目录xxx/mian\n>\n\t\tcp /home/ca/Downloads/mysql-connector-java-5.1.27.jar ./\n\n- 打开新的shell窗口，运行\n>\n\t\t[root@by EAP-6.4.0]# /opt/ca/EAP-6.4.0/bin/jboss-cli.sh\n\t\tYou are disconnected at  the moment.  Type  'connect'  to  connect to  the server or  'help'  for  the list of supported commands.\n\t\t[disconnected  /]\n\n- 如果提示disconnected，则需要输入connect并回车，如果一切正常则显示：\n>\n\t\t[standalone@localhost:9999  /]\n\n- 然后输入以下命令在JBoss中注册mysql驱动：\n>\n\t\t#注册驱动\n\t\t/subsystem=datasources/jdbc-driver=com.mysql.jdbc.Driver:add(driver-name=com.mysql.jdbc.Driver,driver-class-name=com.mysql.jdbc.Driver,driver-module-name=com.mysql,driver-xa-datasource-class-name=com.mysql.jdbc.jdbc.jdbc2.optional.MysqlXADataSource)\n\t\t#重新加载\n\t\t:reload\n\n- 完成后输入exit回车即可退出。\n## 安装ejbca ##\n- 　从ejbca官方网站下载ejbca安装包：ejbca_ce_6_3_1_1.zip，放在/usr/file目录，解压，准备修改配置\n>\n\t\tunzip /usr/file/ejbca_ce_6_3_1_1.zip -d /usr/java\n\t\tcd /usr/java\n\t\tmv ejbca_ce_6_3_1_1 ejbca-ce-6.3.1.1\n\t\tcd /usr/java/ejbca-ce-6.3.1.1/conf/\n\t\t# 配置文件目录包含以下文件：\n\t\tll -h\n\n- EJBCA只加载后缀名为properties的文件，否则则加载默认配置。在这里我们需要修改以下文件：\n>\n\t\tdatabase.properties：数据库配置文件\n\t\tejbca.properties：EJBCA配置文件\n\t\tinstall.properties：安装配置文件\n\t\tweb.properties：web服务配置文件\n\n- 首先是数据库配置文件，先将文件复制一份然后进行修改:\n>\n\t\t# 复制\n\t\tcp database.properties.sample database.properties\n\t\t# 修改\n\t\tvim database.properties\n\t\t# 修改以下内容\n\t\tdatasource.jndi-name=jboss/datasources/MySqlDS\n\t\tdatabase.name=mysql\n\t\tdatabase.url=jdbc:mysql://by.cos7:3306/ejbca?characterEncoding=UTF-8\n\t\tdatabase.driver=org.mysql.jdbc.Driver\n\t\tdatabase.username=root\n\t\tdatabase.password=123456\n\n- 然后复制并修改EJBCA配置文件:\n>\n\t\t# 复制\n\t\tcp ejbca.properties.sample ejbca.properties\n\t\t# 修改\n\t\tvim ejbca.properties\n\t\t# 修改以下内容\n\t\tappserver.home=/opt/ca/EAP-6.4.0\n\t\tappserver.type=jboss\n\t\tapproval.defaultrequestvalidity=28800 #保持默认状态\n\t\tapproval.defaultapprovalvalidity=28800 #保持默认状态\n\t\tejbca.passwordlogrounds=8 #设置密码为8位\n\n- 然后修改安装配置文件：\n>\n\t\t# 复制\n\t\tcp install.properties.sample install.properties\n\t\t# 修改\n\t\tvim install.properties\n\t\t# 修改以下内容\n\t\tca.name=EnginxManagementCA\n\t\tca.dn=CN=TestManagementCA,O=Test,C=CN\n\t\tca.tokentype=soft\n\t\tca.tokenpassword=null\n\t\tca.keyspec=4096\n\t\tca.keytype=RSA\n\t\tca.signaturealgorithm=SHA256WithRSA\n\t\tca.validity=3650\n\t\tca.policy=null\n\t\tca.certificateprofile=ROOTCA #要修改\n\n- 最后是web服务配置文件：\n>\n\t\t# 复制\n\t\tcp web.properties.sample web.properties\n\t\t# 修改\n\t\tvim web.properties\n\t\t# 修改以下内容\n\t\tjava.trustpassword=changeit  #默认即可\n\t\tsuperadmin.cn=SuperAdmin  #默认即可\n\t\tsuperadmin.dn=CN=${superadmin.cn},O=Test,C=CN\n\t\tsuperadmin.password=ejbca  #默认即可\n\t\tsuperadmin.batch=true\n\t\thttpsserver.password=serverpwd  #默认即可\n\t\thttpsserver.hostname=by.cos7\n\t\thttpsserver.dn=CN=${httpsserver.hostname},O=Test,C=CN\n\t\thttpserver.pubhttp=8080 #不修改\n\t\thttpserver.pubhttps=8442 #不修改\n\t\thttpserver.privhttps=8443 #不修改\n## 部署ejbca到jboss ##\n- deploy用ant部署，install生成证书，deploy-keystore将证书部署到jboss，前两步所需时间较长，过程中如需输入，请直接回车:\n>\n\t\tcd /opt/ca/ejbca-ce-6.3.1.1\n\t\tant clean deploy\n\t\tant install #成功后会生成数据库表\n\t\tant deploy-keystore\n## 配置jboss的https ##\n- 打开新的shell窗口，运行\n>\n\t\t/opt/ca/EAP-6.4.0/bin/jboss-cli.sh\n\t\t如果是“disconnect”状态，运行“connect”，多回车几次，准备运行下面4部分配置\n\n- 第一部分（配置任意主机可访问）\n>\n\t\t/interface=http:add(inet-address=\"0.0.0.0\")\n\t\t/interface=httpspub:add(inet-address=\"0.0.0.0\")\n\t\t/interface=httpspriv:add(inet-address=\"0.0.0.0\")\n\t\t/socket-binding-group=standard-sockets/socket-binding=http:add(port=\"8080\",interface=\"http\")\n\t\t/subsystem=undertow/server=default-server/http-listener=http:add(socket-binding=http)\n\t\t/subsystem=undertow/server=default-server/http-listener=http:write-attribute(name=redirect-socket, value=\"httpspriv\")\n\t\t:reload\n\n- 第二部分（配置证书））\n>\n\t\t/core-service=management/security-realm=SSLRealm:add()\n\t\t/core-service=management/security-realm=SSLRealm/server-identity=ssl:add(keystore-path=\"${jboss.server.config.dir}/keystore/keystore.jks\", keystore-password=\"serverpwd\", alias=\"prod-ica1\")\n\t\t/core-service=management/security-realm=SSLRealm/authentication=truststore:add(keystore-path=\"${jboss.server.config.dir}/keystore/truststore.jks\", keystore-password=\"changeit\")\n\t\t/socket-binding-group=standard-sockets/socket-binding=httpspriv:add(port=\"8443\",interface=\"httpspriv\")\n\t\t/socket-binding-group=standard-sockets/socket-binding=httpspub:add(port=\"8442\", interface=\"httpspub\")\n\t\t:reload\n\n\n- 第三部分（配置ssl））\n>\n\t\t/subsystem=undertow/server=default-server/https-listener=httpspriv:add(socket-binding=httpspriv, security-realm=\"SSLRealm\", verify-client=REQUIRED)\n\t\t/subsystem=undertow/server=default-server/https-listener=httpspub:add(socket-binding=httpspub, security-realm=\"SSLRealm\")\n\t\t:reload\n\n- 第四部分（配置web service）\n>\n\t\t/system-property=org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH:add(value=true)\n\t\t/system-property=org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH:add(value=true)\n\t\t/system-property=org.apache.catalina.connector.URI_ENCODING:add(value=\"UTF-8\")\n\t\t/system-property=org.apache.catalina.connector.USE_BODY_ENCODING_FOR_QUERY_STRING:add(value=true)\n\t\t/subsystem=webservices:write-attribute(name=wsdl-host, value=jbossws.undefined.host)\n\t\t/subsystem=webservices:write-attribute(name=modify-wsdl-address, value=true)\n\t\t:reload\n\n## 使用ejbca community 6.3.1.1 ##\n- 假设ejbca服务器地址：172.17.210.124，编辑windows的“C:\\Windows\\System32\\drivers\\etc”下的hosts文件，加入一行`172.17.210.124 by.cos7`\n- 拷贝ejbca服务器“/usr/java/ejbca-ce-6.3.1.1/p12/”下的superadmin.p12到windows，双击安装，密码“ejbca”,ejbca提供了两个界面\n- 用户界面:`http://by.cos7:8080/ejbca/`\n- 管理员界面（需要证书，使用刚才安装的superadmin证书）:`https://by.cos7:8443/ejbca/adminweb/`\n- 图片参考：![](https://i.imgur.com/10L0sEU.jpg)![](https://i.imgur.com/1hKKnKm.jpg)![](https://i.imgur.com/TvEsmb5.jpg)![](https://i.imgur.com/jizg2OD.png)![](https://i.imgur.com/4SjRPld.png)\n# 三、参考链接 #\n- `https://www.jianshu.com/p/56051594fee9`\n- `https://www.bbsmax.com/A/xl56xw2Yzr/`\n- `https://piggsoft.com/2018/07/11/PKI%E4%BD%93%E7%B3%BB%EF%BC%88%E4%B8%89%EF%BC%89-EJBCA%E5%AE%89%E8%A3%85/`\n- (centos7安装mysql)`https://www.cnblogs.com/julyme/p/5969626.html`\n- (centos改主机名)`https://www.jianshu.com/p/39d7000dfa47`\n- (EJBCA下载)`https://www.ejbca.org/download.html`\n- (JBoss EAP) `https://developers.redhat.com/products/eap/download/)`6.4.0\n- (JDK下载)`https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html`","slug":"centos7搭建EJBCA环境","published":1,"updated":"2018-11-05T06:45:17.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxj50007hcr3xom6r3aj","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"一、介绍\"><a href=\"#一、介绍\" class=\"headerlink\" title=\"一、介绍\"></a>一、介绍</h1><h2 id=\"EJBCA说明\"><a href=\"#EJBCA说明\" class=\"headerlink\" title=\"EJBCA说明\"></a>EJBCA说明</h2><p>EJBCA是一个全功能的CA系统软件，它基于J2EE技术，并提供了一个强大的、高性能并基于组件的CA。EJBCA兼具灵活性和平台独立性，能够独立使用，也能和任何J2EE应用程序集成。</p>\n<h2 id=\"EJBCA特性\"><a href=\"#EJBCA特性\" class=\"headerlink\" title=\"EJBCA特性\"></a>EJBCA特性</h2><ul>\n<li>LGPL开源许可</li>\n<li>建立在J2EE 1.3(EJB2.0)规范上</li>\n<li>灵活的、基于组件的体系结构</li>\n<li>多久CA</li>\n<li>多个CA和多级CA,在一个EJBCA实例中创建一个或多个完整的基础设施单独运行，或者在任何J2EE应用中集成它</li>\n<li>简单的安装和配置</li>\n<li>强大的基于Web的管理界面，并采用了高强度的鉴别算法</li>\n<li>支持基于命令的管理，并支持脚本等功能</li>\n<li>支持个人证书申请或证书的批量生产</li>\n<li>服务器和客户端证书能够采用PKCS12，JKS或者PEM格式导出</li>\n<li>支持采用Netscape,Mozilla,IE等浏览器直接进行证书申请</li>\n<li>支持使用开放的API和工具通过其他应用程序申请证书</li>\n<li>由RA添加的新用户可以通过Email进行提醒</li>\n<li>对于新用户验证可以采用随机或手工的方式生成密码</li>\n<li>支持硬件模块，来集成硬件签发系统（如智能卡）</li>\n<li>支持SCEP</li>\n<li>支持用特定用户权限和用户组的方式来进行多极化管理</li>\n<li>对不同类型和内容的证书可以进行证书配置</li>\n<li>对不同类型的用户可以进行实体配置</li>\n<li>遵循X509和PKIX（RFC3280）标准</li>\n<li>支持CRL</li>\n<li>完全支持OCSP,包括AIA扩展</li>\n<li>CRL生成和基于URL的CRL分发遵循RFC3280,可以在任何SQL数据库中存储证书和CRL（通过应用服务器来处理）</li>\n<li>可选的多个分发器，以用来在LDAP中发布证书和CRL</li>\n<li>支持用来为指定用户和证书来恢复私钥的密钥恢复模块</li>\n<li>基于组件的体系结构，用来在发布证书时采用多种实体授权方式</li>\n<li>容易集成到大型应用程序中，并集成到业务流程进行了优化</li>\n<li>EJBCA完全采用java编写，能够在任何采用J2EE服务器的平台上运行。开发和测试是在linux和Windows上进行的<h1 id=\"二、安装\"><a href=\"#二、安装\" class=\"headerlink\" title=\"二、安装\"></a>二、安装</h1><h2 id=\"安装前的准备\"><a href=\"#安装前的准备\" class=\"headerlink\" title=\"安装前的准备\"></a>安装前的准备</h2></li>\n<li>jdk-8u191-linux-x64.rpm[JDK1.8]</li>\n<li>apache-ant-1.9.7-bin.tar.gz</li>\n<li>jboss-eap-6.4.0-installer.jar</li>\n<li>ejbca_ce_6_3_1_1.zip</li>\n<li>mysql</li>\n<li>mysql-connector-java-5.1.27.jar</li>\n<li>centos7<h2 id=\"系统准备\"><a href=\"#系统准备\" class=\"headerlink\" title=\"系统准备\"></a>系统准备</h2><h3 id=\"安装JDK1-8\"><a href=\"#安装JDK1-8\" class=\"headerlink\" title=\"安装JDK1.8\"></a>安装JDK1.8</h3></li>\n<li><p>检查已安装的jdk,如果有，先删除</p>\n<blockquote>\n</blockquote>\n<pre><code>rpm -qa|grep java\nrpm -e --nodeps filename\n</code></pre></li>\n<li><p>从<a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html,\" title=\"jdk-8u191-linux-x64.rpm\" target=\"_blank\" rel=\"noopener\">oracle官网](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a>下载jdk安装包：<code>jdk-8u191-linux-x64.rpm</code>,放在/usr/file/目录下</p>\n</li>\n<li><p>用下面的命令安装，默认安装在/usr/java目录</p>\n<blockquote>\n</blockquote>\n<pre><code>rpm -ivh jdk-8u191-linux-x64.rpm\n</code></pre></li>\n<li><p>配置环境变量</p>\n<blockquote>\n</blockquote>\n<pre><code>vi /etc/profile\n</code></pre></li>\n<li><p>追加如下内容：</p>\n<blockquote>\n</blockquote>\n<pre><code>#java conf\nexport JAVA_HOME=/usr/java/jdk1.8.0_191\nexport PATH=$PATH:$JAVA_HOME/bin\nexport CLASSPATH=:$JAVA_HOME/lib\n</code></pre></li>\n<li><p>使配置立即生效，然后检查安装结果</p>\n<blockquote>\n</blockquote>\n<pre><code>source /etc/profile\njava -version\n</code></pre></li>\n</ul>\n<h3 id=\"安装ant\"><a href=\"#安装ant\" class=\"headerlink\" title=\"安装ant\"></a>安装ant</h3><ul>\n<li><p>从<a href=\"https://archive.apache.org/dist/ant/binaries/,\" title=\"jdk-8u191-linux-x64.rpm\" target=\"_blank\" rel=\"noopener\">ant官网</a>下载jdk安装包：<code>apache-ant-1.10.0-bin.tar.gz</code>,解压</p>\n<blockquote>\n</blockquote>\n<pre><code>tar xvf apache-ant-1.10.0-bin.tar.gz -C /usr/java/\n</code></pre></li>\n<li><p>配置环境变量</p>\n<blockquote>\n</blockquote>\n<pre><code>vi /etc/profile\n</code></pre></li>\n<li><p>追加如下内容：</p>\n<blockquote>\n</blockquote>\n<pre><code>#ant conf\nexport ANT_HOME=/usr/java/apache-ant-1.10.0\nexport PATH=$PATH:$ANT_HOME/bin\n</code></pre></li>\n<li><p>使配置立即生效，然后检查安装结果</p>\n<blockquote>\n</blockquote>\n<pre><code>source /etc/profile\nant -version\n</code></pre></li>\n</ul>\n<h3 id=\"修改centos主机名\"><a href=\"#修改centos主机名\" class=\"headerlink\" title=\"修改centos主机名\"></a>修改centos主机名</h3><ul>\n<li>参考:<code>https://www.jianshu.com/p/39d7000dfa47</code></li>\n<li><p>要查看主机名相关的设置：</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@localhost ~]# hostnamectl\n[root@localhost ~]# hostnamectl status\n</code></pre></li>\n<li><p>只查看静态、瞬态或灵活主机名，分别使用–static，–transient或–pretty选项</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@localhost ~]# hostnamectl --static\nlocalhost.localdomain\n[root@localhost ~]# hostnamectl --transient\nlocalhost.localdomain\n[root@localhost ~]# hostnamectl --pretty\n</code></pre></li>\n<li><p>要同时修改所有三个主机名：静态、瞬态和灵活主机名：</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@localhost ~]# hostnamectl set-hostname by.cos7\n[root@localhost ~]# hostnamectl --pretty\n[root@localhost ~]# hostnamectl --static\nby.cos7\n[root@localhost ~]# hostnamectl --transient\nby.cos7\n</code></pre></li>\n<li><p>就像上面展示的那样，在修改静态/瞬态主机名时，任何特殊字符或空白字符会被移除，而提供的参数中的任何大写字母会自动转化为小写。<br>一旦修改了静态主机名，/etc/hostname 将被自动更新。然而，/etc/hosts 不会更新以保存所做的修改，所以你每次在修改主机名后一定要手动更新/etc/hosts，之后再重启CentOS 7。否则系统再启动时会很慢</p>\n</li>\n<li><p>手动更新/etc/hosts</p>\n<blockquote>\n</blockquote>\n<pre><code>vim /etc/hosts\n#127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n127.0.0.1  by.cos7\n#::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n::1        by.cos7\n</code></pre></li>\n<li><p>重启CentOS 7 之后（reboot -f ）</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@by ~]# hostname\nby.cos7\n[root@by ~]# hostnamectl\n</code></pre></li>\n<li><p>如果你只想修改特定的主机名（静态，瞬态或灵活），你可以使用–static，–transient或–pretty选项。例如，要永久修改主机名，你可以修改静态主机名:</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@localhost ~]# hostnamectl --static set-hostname by.cos7\n</code></pre></li>\n<li><p>重启CentOS 7 之后（reboot -f ）</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@by ~]# hostnamectl --static\nby.cos7\n[root@by ~]# hostnamectl --transient\nby.cos7\n[root@by ~]# hostnamectl --pretty\nby.cos7\n[root@by ~]# hostname\nby.cos7\n</code></pre></li>\n<li><p>其实，你不必重启机器以激活永久主机名修改。上面的命令会立即修改内核主机名。<br>注销并重新登入后在命令行提示来观察新的静态主机名</p>\n<h3 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h3></li>\n<li><p>安装前查看已安装的mysql或mysql库，并删除它们</p>\n<blockquote>\n</blockquote>\n<pre><code>rpm -qa|grep -i mysql\nrpm -e --nodeps filename\n</code></pre></li>\n<li><p>如果重装mysql，查找安装mysql产生的文件，并删除它们</p>\n<blockquote>\n</blockquote>\n<pre><code>find / -name mysql\nrm -fr filename\n</code></pre></li>\n<li><p>CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源</p>\n<blockquote>\n</blockquote>\n<pre><code>$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n</code></pre></li>\n<li><p>安装mysql-community-release-el7-5.noarch.rpm包</p>\n<blockquote>\n</blockquote>\n<pre><code>$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm\n</code></pre></li>\n<li><p>安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo</p>\n</li>\n<li><p>安装mysql</p>\n<blockquote>\n</blockquote>\n<pre><code>$ sudo yum install mysql-server\n</code></pre></li>\n<li><p>如果yum正在使用：强制关闭yum命令<code>rm -f /var/run/yum.pid</code></p>\n</li>\n<li><p>重置密码,重置密码前，首先要登录</p>\n<blockquote>\n</blockquote>\n<pre><code>$ mysql -u root\n</code></pre></li>\n<li><p>登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘ (2)，原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：</p>\n<blockquote>\n</blockquote>\n<pre><code>$ sudo chown -R mysql:mysql /var/lib/mysql\n</code></pre></li>\n<li><p>然后，重启服务：</p>\n<blockquote>\n</blockquote>\n<pre><code>$ service mysqld restart\n</code></pre></li>\n<li><p>接下来登录重置密码：</p>\n<blockquote>\n</blockquote>\n<pre><code>$ mysql -u root\nmysql &gt; use mysql;\nmysql &gt; update user set password=password(&apos;123456&apos;) where user=&apos;root&apos;;\nmysql &gt; exit;\n</code></pre></li>\n<li><p>需要更改权限才能实现远程连接MYSQL数据库</p>\n<blockquote>\n</blockquote>\n<pre><code># mysql -uroot -p\nEnter password: ******\nmysql&gt; use mysql; (此DB存放MySQL的各种配置信息)\nDatabase changed\nmysql&gt; select host,user from user; (查看用户的权限情况)\nmysql&gt; select host, user, password from user;\n+-----------+------+-------------------------------------------+\n| host       | user | password                                   |\n+-----------+------+-------------------------------------------+\n| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| localhost |       |                                            |\n+-----------+------+-------------------------------------------+\n4 rows in set (0.01 sec)\n由此可以看出，只能以localhost的主机方式访问。\n解决方法：\nmysql&gt; Grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;123456&apos; with grant option;\n(%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，)\nmysql&gt; flush privileges;    (运行此句才生效，或者重启MySQL)\nQuery OK, 0 rows affected (0.03 sec)\n再次查看。。\nmysql&gt; select host, user, password from user;\n+-----------+------+-------------------------------------------+\n| host       | user | password                                   |\n+-----------+------+-------------------------------------------+\n| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| localhost |       |                                            |\n| %          | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n+-----------+------+-------------------------------------------+\n4 rows in set (0.01 sec)\n</code></pre></li>\n</ul>\n<h3 id=\"创建ejbca数据库\"><a href=\"#创建ejbca数据库\" class=\"headerlink\" title=\"创建ejbca数据库\"></a>创建ejbca数据库</h3><ul>\n<li><p>建数据库：</p>\n<blockquote>\n</blockquote>\n<pre><code>CREATE DATABASE ejbca CHARACTER SET utf8 COLLATE utf8_general_ci;\n</code></pre></li>\n<li><p>本机连接centos7中的数据库</p>\n<blockquote>\n</blockquote>\n<pre><code>vmware-&gt;编辑-&gt;虚拟网络编辑器-&gt;vmnet8-&gt;NAT设置-&gt;将虚拟ip地址加上（如80 192.168.171.143：80 TCP）\n关闭防火墙：\n[root@by ~]# systemctl stop firewalld.service\n本机hosts文件（windows/system32/drivers/etc/hosts）配置：\n192.168.171.144  by.cos7\n</code></pre></li>\n</ul>\n<h3 id=\"为EJBCA新建用户\"><a href=\"#为EJBCA新建用户\" class=\"headerlink\" title=\"为EJBCA新建用户\"></a>为EJBCA新建用户</h3><ul>\n<li><p>进入root用户(su命令)：(设置pwd:ejbca)</p>\n<blockquote>\n</blockquote>\n<pre><code>adduser ca\npasswd ca\n</code></pre></li>\n<li><p>将安装包的所有者改成ca</p>\n<blockquote>\n</blockquote>\n<pre><code>mkdir /opt/ca/\nchown ca:ca /opt/ca\nchown ca:ca /opt/ca/jboss-eap-6.4.0-installer.jar\nchown ca:ca /opt/ca/ejbca_ce_6_3_1_1.zip\nchown ca:ca /opt/ca/mysql-connector-java-5.1.27.jar\n</code></pre></li>\n</ul>\n<h2 id=\"安装JBoss-EAP\"><a href=\"#安装JBoss-EAP\" class=\"headerlink\" title=\"安装JBoss EAP\"></a>安装JBoss EAP</h2><ul>\n<li>切换用户: <code>su ca</code></li>\n<li><p>用java命令安装JBoss EAP：</p>\n<blockquote>\n</blockquote>\n<pre><code>java -jar /opt/ca/jboss-eap-6.4.0-installer.jar\n</code></pre></li>\n<li><p>安装过程会有交互：</p>\n<blockquote>\n</blockquote>\n<pre><code>#选择安装语言，默认为英语\nSelect language  :\n0:  eng\n1:  chn\n2:  deu\n3:  fra\n4:  jpn\n5:  por\n6:  spa\nPlease choose  [0]  :\n\n#确认协议之后是安装路径，默认即可\nSelect the installation path:  [/root/EAP-6.4.0]\n\n#随后是部件选项，默认即可\nSelect the packs you want to  install:\n\n1    [x]  [Required]      [Red Hat JBoss Enterprise Application Platform]  (542.89  KB)\n2    [x] [AppClient]  (34.24  KB)\n3    [x]  [Required]      [Bin]  (10.99  MB)\n4    [x]  [Required]      [Bundles]  (1.01  MB)\n5    [x] [Docs]  (4.75  MB)\n6    [x]  [Required]      [Domain]  (125.56  KB)\n7    [x]  [Required]      [Domain Shell Scripts]  (17.35  KB)\n8    [x]  [Required]      [Modules]  (147.01  MB)\n9    [x]  [Required]      [Standalone]  (152.77  KB)\n10 [x]  [Required]      [Standalone Shell Scripts]  (14.16  KB)\n11 [x]  [Required]      [Welcome Content]  (2.11  MB)\n12 [x] [Red Hat JBoss Enterprise Application Platform Natives]  (8  KB)\n13 [x] [Native RHEL7 x86_64]  (76  KB)\n14 [x] [Native Utils RHEL7 x86_64]  (53.04  KB)\n15 [x] [Native Webserver RHEL7 x86_64]  (254.97  KB)\nTotal Size Required:  167.11  MB\nPress  0  to  confirm your selections\nPlease select which packs you want to  install\n\n#随后是jboss用户名和密码（admin:jbossadmin5*）\nAdmin username:  [admin]\nAdmin password:  []\n*************\nConfirm admin password:  [*************]\n*************\npress  1  to  continue,  2  to  quit,  3  to  redisplay.\n\n#然后是演示文件的安装，我选择no\nQuickstarts\nRed Hat JBoss Enterprise Application Platform comes with  a  series of quickstart examples designed to  help users begin writing applications using the Java EE  6  technologies.  Would you like to  install quickstarts?\n0  [x]  No\n1  [  ]  Yes\n\n#最后是监听端口，默认是8080,\nSocket Bindings\nConfigure the socket bindings for  Red Hat JBoss Enterprise Application Platform.\nSelect Port Configuration:\n0  [x]  Use  the default  port bindings for  standalone and  domain modes.\n1  [  ]  Configure an offset for  all default  port bindings.\n2  [  ]  Configure custom port bindings.\n\n#紧接着是是否启用IPv6\nIf  this  computer is  using  a  pure IPv6 configuration,  please check the box below.\n  [  ]  Enable pure IPv6 configuration\n\n#然后会询问是否启动服务器，先不启动\nServer Launch\nChoose server startup mode:\n0  [x]  Don&apos;t  start the server\n1  [  ]  Standalone Mode\n2  [  ]  Domain Mode\n\n#选择日志等级\nConfigure the logging levels for  Red Hat JBoss Enterprise Application Platform?\n0  [x]  No\n1  [  ]  Yes\n#选择配置文件\nConfigure runtime environment\nThere are several additional options for  configuring Red Hat JBoss Enterprise Application Platform now that the server has been installed.  Each  option can be individually chosen,  and  will be configured in  the order displayed upon pressing next.  Would you like to  do  this  now?\n0  [x]  Perform default  configuration\n1  [  ]  Perform advanced configuration\n</code></pre></li>\n<li><p>经过一系列交互之后就会解包安装：<img src=\"https://i.imgur.com/eqaXqq5.jpg\" alt=\"\"></p>\n</li>\n<li><p>到这里已经完成JBoss EAP的安装，其实他有个基于web的控制面饭，但是服务器只监听127.0.0.1这个IP，如果需要监听其他IP或0.0.0.0，请修改以下文件：</p>\n<blockquote>\n</blockquote>\n<pre><code>#打开文件进行修改\n[root@ejbca  ~]# vim /opt/ca/EAP-6.4.0/standalone/configuration/standalone.xml\n搜索：/127.0.0.1\n#定位到interface的节点和该节点上面的127.0.0.1，修改监听地址为0.0.0.0\n&lt;interfaces&gt;\n    &lt;interface  name=&quot;management&quot;&gt;\n        &lt;inet-address value=&quot;${jboss.bind.address.management:0.0.0.0}&quot;/&gt;\n    &lt;/interface&gt;\n    &lt;interface  name=&quot;public&quot;&gt;\n        &lt;inet-address value=&quot;${jboss.bind.address:0.0.0.0}&quot;/&gt;\n    &lt;/interface&gt;\n    &lt;!--  TODO  -  only show this  if  the jacorb subsystem is  added  --&gt;\n    &lt;interface  name=&quot;unsecure&quot;&gt;\n        &lt;!--\n          ~  Used for  IIOP sockets in  the standard configuration.\n          ~                  To  secure JacORB you need to  setup SSL\n          --&gt;\n        &lt;inet-address value=&quot;${jboss.bind.address.unsecure:0.0.0.0}&quot;/&gt;\n    &lt;/interface&gt;\n&lt;/interfaces&gt;    \n</code></pre></li>\n<li><p>随后使用以下命令启动服务，在这里先不用脚本，因为后面需要重启服务。启动服务后再打开一个SSH窗口进行下面的步骤：</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@ejbca  ~]# /opt/ca/EAP-6.4.0/bin/standalone.sh\n（ps:此处不会用）顺便记一下关闭服务的命令：ctrl+c或者如下：\nps -ef|grep jboss\nkill -9 进程号\n</code></pre></li>\n<li><p>确认JBoss EAP服务启动后即可通过浏览器打开管理界面：访问http:by.cos7:8080/</p>\n<h2 id=\"配置jboss的mysql数据源\"><a href=\"#配置jboss的mysql数据源\" class=\"headerlink\" title=\"配置jboss的mysql数据源\"></a>配置jboss的mysql数据源</h2></li>\n<li><p>创建目录，然后在该目录下创建module.xml</p>\n<blockquote>\n</blockquote>\n<pre><code>mkdir -p /opt/ca/EAP-6.4.0/modules/com/mysql/main/\ncd /opt/ca/EAP-6.4.0/modules/com/mysql/main\nvi module.xml\n</code></pre></li>\n<li><p>module.xml内容如下：</p>\n<blockquote>\n</blockquote>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n    &lt;module xmlns=&quot;urn:jboss:module:1.0&quot; name=&quot;com.mysql&quot;&gt;\n    &lt;resources&gt;\n        &lt;resource-root path=&quot;mysql-connector-java-5.1.27.jar&quot;/&gt;\n    &lt;/resources&gt;\n    &lt;dependencies&gt;\n        &lt;module name=&quot;javax.api&quot;/&gt;\n        &lt;module name=&quot;javax.transaction.api&quot;/&gt;\n        &lt;module name=&quot;org.slf4j&quot;/&gt;\n    &lt;/dependencies&gt;\n&lt;/module&gt;\n</code></pre></li>\n<li><p>将mysql的驱动包<code>mysql-connector-java-5.1.27.jar</code>，拷贝到当前目录xxx/mian</p>\n<blockquote>\n</blockquote>\n<pre><code>cp /home/ca/Downloads/mysql-connector-java-5.1.27.jar ./\n</code></pre></li>\n<li><p>打开新的shell窗口，运行</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@by EAP-6.4.0]# /opt/ca/EAP-6.4.0/bin/jboss-cli.sh\nYou are disconnected at  the moment.  Type  &apos;connect&apos;  to  connect to  the server or  &apos;help&apos;  for  the list of supported commands.\n[disconnected  /]\n</code></pre></li>\n<li><p>如果提示disconnected，则需要输入connect并回车，如果一切正常则显示：</p>\n<blockquote>\n</blockquote>\n<pre><code>[standalone@localhost:9999  /]\n</code></pre></li>\n<li><p>然后输入以下命令在JBoss中注册mysql驱动：</p>\n<blockquote>\n</blockquote>\n<pre><code>#注册驱动\n/subsystem=datasources/jdbc-driver=com.mysql.jdbc.Driver:add(driver-name=com.mysql.jdbc.Driver,driver-class-name=com.mysql.jdbc.Driver,driver-module-name=com.mysql,driver-xa-datasource-class-name=com.mysql.jdbc.jdbc.jdbc2.optional.MysqlXADataSource)\n#重新加载\n:reload\n</code></pre></li>\n<li><p>完成后输入exit回车即可退出。</p>\n<h2 id=\"安装ejbca\"><a href=\"#安装ejbca\" class=\"headerlink\" title=\"安装ejbca\"></a>安装ejbca</h2></li>\n<li><p>　从ejbca官方网站下载ejbca安装包：ejbca_ce_6_3_1_1.zip，放在/usr/file目录，解压，准备修改配置</p>\n<blockquote>\n</blockquote>\n<pre><code>unzip /usr/file/ejbca_ce_6_3_1_1.zip -d /usr/java\ncd /usr/java\nmv ejbca_ce_6_3_1_1 ejbca-ce-6.3.1.1\ncd /usr/java/ejbca-ce-6.3.1.1/conf/\n# 配置文件目录包含以下文件：\nll -h\n</code></pre></li>\n<li><p>EJBCA只加载后缀名为properties的文件，否则则加载默认配置。在这里我们需要修改以下文件：</p>\n<blockquote>\n</blockquote>\n<pre><code>database.properties：数据库配置文件\nejbca.properties：EJBCA配置文件\ninstall.properties：安装配置文件\nweb.properties：web服务配置文件\n</code></pre></li>\n<li><p>首先是数据库配置文件，先将文件复制一份然后进行修改:</p>\n<blockquote>\n</blockquote>\n<pre><code># 复制\ncp database.properties.sample database.properties\n# 修改\nvim database.properties\n# 修改以下内容\ndatasource.jndi-name=jboss/datasources/MySqlDS\ndatabase.name=mysql\ndatabase.url=jdbc:mysql://by.cos7:3306/ejbca?characterEncoding=UTF-8\ndatabase.driver=org.mysql.jdbc.Driver\ndatabase.username=root\ndatabase.password=123456\n</code></pre></li>\n<li><p>然后复制并修改EJBCA配置文件:</p>\n<blockquote>\n</blockquote>\n<pre><code># 复制\ncp ejbca.properties.sample ejbca.properties\n# 修改\nvim ejbca.properties\n# 修改以下内容\nappserver.home=/opt/ca/EAP-6.4.0\nappserver.type=jboss\napproval.defaultrequestvalidity=28800 #保持默认状态\napproval.defaultapprovalvalidity=28800 #保持默认状态\nejbca.passwordlogrounds=8 #设置密码为8位\n</code></pre></li>\n<li><p>然后修改安装配置文件：</p>\n<blockquote>\n</blockquote>\n<pre><code># 复制\ncp install.properties.sample install.properties\n# 修改\nvim install.properties\n# 修改以下内容\nca.name=EnginxManagementCA\nca.dn=CN=TestManagementCA,O=Test,C=CN\nca.tokentype=soft\nca.tokenpassword=null\nca.keyspec=4096\nca.keytype=RSA\nca.signaturealgorithm=SHA256WithRSA\nca.validity=3650\nca.policy=null\nca.certificateprofile=ROOTCA #要修改\n</code></pre></li>\n<li><p>最后是web服务配置文件：</p>\n<blockquote>\n</blockquote>\n<pre><code># 复制\ncp web.properties.sample web.properties\n# 修改\nvim web.properties\n# 修改以下内容\njava.trustpassword=changeit  #默认即可\nsuperadmin.cn=SuperAdmin  #默认即可\nsuperadmin.dn=CN=${superadmin.cn},O=Test,C=CN\nsuperadmin.password=ejbca  #默认即可\nsuperadmin.batch=true\nhttpsserver.password=serverpwd  #默认即可\nhttpsserver.hostname=by.cos7\nhttpsserver.dn=CN=${httpsserver.hostname},O=Test,C=CN\nhttpserver.pubhttp=8080 #不修改\nhttpserver.pubhttps=8442 #不修改\nhttpserver.privhttps=8443 #不修改\n</code></pre><h2 id=\"部署ejbca到jboss\"><a href=\"#部署ejbca到jboss\" class=\"headerlink\" title=\"部署ejbca到jboss\"></a>部署ejbca到jboss</h2></li>\n<li>deploy用ant部署，install生成证书，deploy-keystore将证书部署到jboss，前两步所需时间较长，过程中如需输入，请直接回车:<blockquote>\n</blockquote>\n<pre><code>cd /opt/ca/ejbca-ce-6.3.1.1\nant clean deploy\nant install #成功后会生成数据库表\nant deploy-keystore\n</code></pre><h2 id=\"配置jboss的https\"><a href=\"#配置jboss的https\" class=\"headerlink\" title=\"配置jboss的https\"></a>配置jboss的https</h2></li>\n<li><p>打开新的shell窗口，运行</p>\n<blockquote>\n</blockquote>\n<pre><code>/opt/ca/EAP-6.4.0/bin/jboss-cli.sh\n如果是“disconnect”状态，运行“connect”，多回车几次，准备运行下面4部分配置\n</code></pre></li>\n<li><p>第一部分（配置任意主机可访问）</p>\n<blockquote>\n</blockquote>\n<pre><code>/interface=http:add(inet-address=&quot;0.0.0.0&quot;)\n/interface=httpspub:add(inet-address=&quot;0.0.0.0&quot;)\n/interface=httpspriv:add(inet-address=&quot;0.0.0.0&quot;)\n/socket-binding-group=standard-sockets/socket-binding=http:add(port=&quot;8080&quot;,interface=&quot;http&quot;)\n/subsystem=undertow/server=default-server/http-listener=http:add(socket-binding=http)\n/subsystem=undertow/server=default-server/http-listener=http:write-attribute(name=redirect-socket, value=&quot;httpspriv&quot;)\n:reload\n</code></pre></li>\n<li><p>第二部分（配置证书））</p>\n<blockquote>\n</blockquote>\n<pre><code>/core-service=management/security-realm=SSLRealm:add()\n/core-service=management/security-realm=SSLRealm/server-identity=ssl:add(keystore-path=&quot;${jboss.server.config.dir}/keystore/keystore.jks&quot;, keystore-password=&quot;serverpwd&quot;, alias=&quot;prod-ica1&quot;)\n/core-service=management/security-realm=SSLRealm/authentication=truststore:add(keystore-path=&quot;${jboss.server.config.dir}/keystore/truststore.jks&quot;, keystore-password=&quot;changeit&quot;)\n/socket-binding-group=standard-sockets/socket-binding=httpspriv:add(port=&quot;8443&quot;,interface=&quot;httpspriv&quot;)\n/socket-binding-group=standard-sockets/socket-binding=httpspub:add(port=&quot;8442&quot;, interface=&quot;httpspub&quot;)\n:reload\n</code></pre></li>\n</ul>\n<ul>\n<li><p>第三部分（配置ssl））</p>\n<blockquote>\n</blockquote>\n<pre><code>/subsystem=undertow/server=default-server/https-listener=httpspriv:add(socket-binding=httpspriv, security-realm=&quot;SSLRealm&quot;, verify-client=REQUIRED)\n/subsystem=undertow/server=default-server/https-listener=httpspub:add(socket-binding=httpspub, security-realm=&quot;SSLRealm&quot;)\n:reload\n</code></pre></li>\n<li><p>第四部分（配置web service）</p>\n<blockquote>\n</blockquote>\n<pre><code>/system-property=org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH:add(value=true)\n/system-property=org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH:add(value=true)\n/system-property=org.apache.catalina.connector.URI_ENCODING:add(value=&quot;UTF-8&quot;)\n/system-property=org.apache.catalina.connector.USE_BODY_ENCODING_FOR_QUERY_STRING:add(value=true)\n/subsystem=webservices:write-attribute(name=wsdl-host, value=jbossws.undefined.host)\n/subsystem=webservices:write-attribute(name=modify-wsdl-address, value=true)\n:reload\n</code></pre></li>\n</ul>\n<h2 id=\"使用ejbca-community-6-3-1-1\"><a href=\"#使用ejbca-community-6-3-1-1\" class=\"headerlink\" title=\"使用ejbca community 6.3.1.1\"></a>使用ejbca community 6.3.1.1</h2><ul>\n<li>假设ejbca服务器地址：172.17.210.124，编辑windows的“C:\\Windows\\System32\\drivers\\etc”下的hosts文件，加入一行<code>172.17.210.124 by.cos7</code></li>\n<li>拷贝ejbca服务器“/usr/java/ejbca-ce-6.3.1.1/p12/”下的superadmin.p12到windows，双击安装，密码“ejbca”,ejbca提供了两个界面</li>\n<li>用户界面:<code>http://by.cos7:8080/ejbca/</code></li>\n<li>管理员界面（需要证书，使用刚才安装的superadmin证书）:<code>https://by.cos7:8443/ejbca/adminweb/</code></li>\n<li>图片参考：<img src=\"https://i.imgur.com/10L0sEU.jpg\" alt=\"\"><img src=\"https://i.imgur.com/1hKKnKm.jpg\" alt=\"\"><img src=\"https://i.imgur.com/TvEsmb5.jpg\" alt=\"\"><img src=\"https://i.imgur.com/jizg2OD.png\" alt=\"\"><img src=\"https://i.imgur.com/4SjRPld.png\" alt=\"\"><h1 id=\"三、参考链接\"><a href=\"#三、参考链接\" class=\"headerlink\" title=\"三、参考链接\"></a>三、参考链接</h1></li>\n<li><code>https://www.jianshu.com/p/56051594fee9</code></li>\n<li><code>https://www.bbsmax.com/A/xl56xw2Yzr/</code></li>\n<li><code>https://piggsoft.com/2018/07/11/PKI%E4%BD%93%E7%B3%BB%EF%BC%88%E4%B8%89%EF%BC%89-EJBCA%E5%AE%89%E8%A3%85/</code></li>\n<li>(centos7安装mysql)<code>https://www.cnblogs.com/julyme/p/5969626.html</code></li>\n<li>(centos改主机名)<code>https://www.jianshu.com/p/39d7000dfa47</code></li>\n<li>(EJBCA下载)<code>https://www.ejbca.org/download.html</code></li>\n<li>(JBoss EAP) <code>https://developers.redhat.com/products/eap/download/)</code>6.4.0</li>\n<li>(JDK下载)<code>https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"一、介绍\"><a href=\"#一、介绍\" class=\"headerlink\" title=\"一、介绍\"></a>一、介绍</h1><h2 id=\"EJBCA说明\"><a href=\"#EJBCA说明\" class=\"headerlink\" title=\"EJBCA说明\"></a>EJBCA说明</h2><p>EJBCA是一个全功能的CA系统软件，它基于J2EE技术，并提供了一个强大的、高性能并基于组件的CA。EJBCA兼具灵活性和平台独立性，能够独立使用，也能和任何J2EE应用程序集成。</p>\n<h2 id=\"EJBCA特性\"><a href=\"#EJBCA特性\" class=\"headerlink\" title=\"EJBCA特性\"></a>EJBCA特性</h2><ul>\n<li>LGPL开源许可</li>\n<li>建立在J2EE 1.3(EJB2.0)规范上</li>\n<li>灵活的、基于组件的体系结构</li>\n<li>多久CA</li>\n<li>多个CA和多级CA,在一个EJBCA实例中创建一个或多个完整的基础设施单独运行，或者在任何J2EE应用中集成它</li>\n<li>简单的安装和配置</li>\n<li>强大的基于Web的管理界面，并采用了高强度的鉴别算法</li>\n<li>支持基于命令的管理，并支持脚本等功能</li>\n<li>支持个人证书申请或证书的批量生产</li>\n<li>服务器和客户端证书能够采用PKCS12，JKS或者PEM格式导出</li>\n<li>支持采用Netscape,Mozilla,IE等浏览器直接进行证书申请</li>\n<li>支持使用开放的API和工具通过其他应用程序申请证书</li>\n<li>由RA添加的新用户可以通过Email进行提醒</li>\n<li>对于新用户验证可以采用随机或手工的方式生成密码</li>\n<li>支持硬件模块，来集成硬件签发系统（如智能卡）</li>\n<li>支持SCEP</li>\n<li>支持用特定用户权限和用户组的方式来进行多极化管理</li>\n<li>对不同类型和内容的证书可以进行证书配置</li>\n<li>对不同类型的用户可以进行实体配置</li>\n<li>遵循X509和PKIX（RFC3280）标准</li>\n<li>支持CRL</li>\n<li>完全支持OCSP,包括AIA扩展</li>\n<li>CRL生成和基于URL的CRL分发遵循RFC3280,可以在任何SQL数据库中存储证书和CRL（通过应用服务器来处理）</li>\n<li>可选的多个分发器，以用来在LDAP中发布证书和CRL</li>\n<li>支持用来为指定用户和证书来恢复私钥的密钥恢复模块</li>\n<li>基于组件的体系结构，用来在发布证书时采用多种实体授权方式</li>\n<li>容易集成到大型应用程序中，并集成到业务流程进行了优化</li>\n<li>EJBCA完全采用java编写，能够在任何采用J2EE服务器的平台上运行。开发和测试是在linux和Windows上进行的<h1 id=\"二、安装\"><a href=\"#二、安装\" class=\"headerlink\" title=\"二、安装\"></a>二、安装</h1><h2 id=\"安装前的准备\"><a href=\"#安装前的准备\" class=\"headerlink\" title=\"安装前的准备\"></a>安装前的准备</h2></li>\n<li>jdk-8u191-linux-x64.rpm[JDK1.8]</li>\n<li>apache-ant-1.9.7-bin.tar.gz</li>\n<li>jboss-eap-6.4.0-installer.jar</li>\n<li>ejbca_ce_6_3_1_1.zip</li>\n<li>mysql</li>\n<li>mysql-connector-java-5.1.27.jar</li>\n<li>centos7<h2 id=\"系统准备\"><a href=\"#系统准备\" class=\"headerlink\" title=\"系统准备\"></a>系统准备</h2><h3 id=\"安装JDK1-8\"><a href=\"#安装JDK1-8\" class=\"headerlink\" title=\"安装JDK1.8\"></a>安装JDK1.8</h3></li>\n<li><p>检查已安装的jdk,如果有，先删除</p>\n<blockquote>\n</blockquote>\n<pre><code>rpm -qa|grep java\nrpm -e --nodeps filename\n</code></pre></li>\n<li><p>从<a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html,\" title=\"jdk-8u191-linux-x64.rpm\" target=\"_blank\" rel=\"noopener\">oracle官网](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a>下载jdk安装包：<code>jdk-8u191-linux-x64.rpm</code>,放在/usr/file/目录下</p>\n</li>\n<li><p>用下面的命令安装，默认安装在/usr/java目录</p>\n<blockquote>\n</blockquote>\n<pre><code>rpm -ivh jdk-8u191-linux-x64.rpm\n</code></pre></li>\n<li><p>配置环境变量</p>\n<blockquote>\n</blockquote>\n<pre><code>vi /etc/profile\n</code></pre></li>\n<li><p>追加如下内容：</p>\n<blockquote>\n</blockquote>\n<pre><code>#java conf\nexport JAVA_HOME=/usr/java/jdk1.8.0_191\nexport PATH=$PATH:$JAVA_HOME/bin\nexport CLASSPATH=:$JAVA_HOME/lib\n</code></pre></li>\n<li><p>使配置立即生效，然后检查安装结果</p>\n<blockquote>\n</blockquote>\n<pre><code>source /etc/profile\njava -version\n</code></pre></li>\n</ul>\n<h3 id=\"安装ant\"><a href=\"#安装ant\" class=\"headerlink\" title=\"安装ant\"></a>安装ant</h3><ul>\n<li><p>从<a href=\"https://archive.apache.org/dist/ant/binaries/,\" title=\"jdk-8u191-linux-x64.rpm\" target=\"_blank\" rel=\"noopener\">ant官网</a>下载jdk安装包：<code>apache-ant-1.10.0-bin.tar.gz</code>,解压</p>\n<blockquote>\n</blockquote>\n<pre><code>tar xvf apache-ant-1.10.0-bin.tar.gz -C /usr/java/\n</code></pre></li>\n<li><p>配置环境变量</p>\n<blockquote>\n</blockquote>\n<pre><code>vi /etc/profile\n</code></pre></li>\n<li><p>追加如下内容：</p>\n<blockquote>\n</blockquote>\n<pre><code>#ant conf\nexport ANT_HOME=/usr/java/apache-ant-1.10.0\nexport PATH=$PATH:$ANT_HOME/bin\n</code></pre></li>\n<li><p>使配置立即生效，然后检查安装结果</p>\n<blockquote>\n</blockquote>\n<pre><code>source /etc/profile\nant -version\n</code></pre></li>\n</ul>\n<h3 id=\"修改centos主机名\"><a href=\"#修改centos主机名\" class=\"headerlink\" title=\"修改centos主机名\"></a>修改centos主机名</h3><ul>\n<li>参考:<code>https://www.jianshu.com/p/39d7000dfa47</code></li>\n<li><p>要查看主机名相关的设置：</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@localhost ~]# hostnamectl\n[root@localhost ~]# hostnamectl status\n</code></pre></li>\n<li><p>只查看静态、瞬态或灵活主机名，分别使用–static，–transient或–pretty选项</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@localhost ~]# hostnamectl --static\nlocalhost.localdomain\n[root@localhost ~]# hostnamectl --transient\nlocalhost.localdomain\n[root@localhost ~]# hostnamectl --pretty\n</code></pre></li>\n<li><p>要同时修改所有三个主机名：静态、瞬态和灵活主机名：</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@localhost ~]# hostnamectl set-hostname by.cos7\n[root@localhost ~]# hostnamectl --pretty\n[root@localhost ~]# hostnamectl --static\nby.cos7\n[root@localhost ~]# hostnamectl --transient\nby.cos7\n</code></pre></li>\n<li><p>就像上面展示的那样，在修改静态/瞬态主机名时，任何特殊字符或空白字符会被移除，而提供的参数中的任何大写字母会自动转化为小写。<br>一旦修改了静态主机名，/etc/hostname 将被自动更新。然而，/etc/hosts 不会更新以保存所做的修改，所以你每次在修改主机名后一定要手动更新/etc/hosts，之后再重启CentOS 7。否则系统再启动时会很慢</p>\n</li>\n<li><p>手动更新/etc/hosts</p>\n<blockquote>\n</blockquote>\n<pre><code>vim /etc/hosts\n#127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n127.0.0.1  by.cos7\n#::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n::1        by.cos7\n</code></pre></li>\n<li><p>重启CentOS 7 之后（reboot -f ）</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@by ~]# hostname\nby.cos7\n[root@by ~]# hostnamectl\n</code></pre></li>\n<li><p>如果你只想修改特定的主机名（静态，瞬态或灵活），你可以使用–static，–transient或–pretty选项。例如，要永久修改主机名，你可以修改静态主机名:</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@localhost ~]# hostnamectl --static set-hostname by.cos7\n</code></pre></li>\n<li><p>重启CentOS 7 之后（reboot -f ）</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@by ~]# hostnamectl --static\nby.cos7\n[root@by ~]# hostnamectl --transient\nby.cos7\n[root@by ~]# hostnamectl --pretty\nby.cos7\n[root@by ~]# hostname\nby.cos7\n</code></pre></li>\n<li><p>其实，你不必重启机器以激活永久主机名修改。上面的命令会立即修改内核主机名。<br>注销并重新登入后在命令行提示来观察新的静态主机名</p>\n<h3 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h3></li>\n<li><p>安装前查看已安装的mysql或mysql库，并删除它们</p>\n<blockquote>\n</blockquote>\n<pre><code>rpm -qa|grep -i mysql\nrpm -e --nodeps filename\n</code></pre></li>\n<li><p>如果重装mysql，查找安装mysql产生的文件，并删除它们</p>\n<blockquote>\n</blockquote>\n<pre><code>find / -name mysql\nrm -fr filename\n</code></pre></li>\n<li><p>CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源</p>\n<blockquote>\n</blockquote>\n<pre><code>$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n</code></pre></li>\n<li><p>安装mysql-community-release-el7-5.noarch.rpm包</p>\n<blockquote>\n</blockquote>\n<pre><code>$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm\n</code></pre></li>\n<li><p>安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo</p>\n</li>\n<li><p>安装mysql</p>\n<blockquote>\n</blockquote>\n<pre><code>$ sudo yum install mysql-server\n</code></pre></li>\n<li><p>如果yum正在使用：强制关闭yum命令<code>rm -f /var/run/yum.pid</code></p>\n</li>\n<li><p>重置密码,重置密码前，首先要登录</p>\n<blockquote>\n</blockquote>\n<pre><code>$ mysql -u root\n</code></pre></li>\n<li><p>登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘ (2)，原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：</p>\n<blockquote>\n</blockquote>\n<pre><code>$ sudo chown -R mysql:mysql /var/lib/mysql\n</code></pre></li>\n<li><p>然后，重启服务：</p>\n<blockquote>\n</blockquote>\n<pre><code>$ service mysqld restart\n</code></pre></li>\n<li><p>接下来登录重置密码：</p>\n<blockquote>\n</blockquote>\n<pre><code>$ mysql -u root\nmysql &gt; use mysql;\nmysql &gt; update user set password=password(&apos;123456&apos;) where user=&apos;root&apos;;\nmysql &gt; exit;\n</code></pre></li>\n<li><p>需要更改权限才能实现远程连接MYSQL数据库</p>\n<blockquote>\n</blockquote>\n<pre><code># mysql -uroot -p\nEnter password: ******\nmysql&gt; use mysql; (此DB存放MySQL的各种配置信息)\nDatabase changed\nmysql&gt; select host,user from user; (查看用户的权限情况)\nmysql&gt; select host, user, password from user;\n+-----------+------+-------------------------------------------+\n| host       | user | password                                   |\n+-----------+------+-------------------------------------------+\n| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| localhost |       |                                            |\n+-----------+------+-------------------------------------------+\n4 rows in set (0.01 sec)\n由此可以看出，只能以localhost的主机方式访问。\n解决方法：\nmysql&gt; Grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;123456&apos; with grant option;\n(%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，)\nmysql&gt; flush privileges;    (运行此句才生效，或者重启MySQL)\nQuery OK, 0 rows affected (0.03 sec)\n再次查看。。\nmysql&gt; select host, user, password from user;\n+-----------+------+-------------------------------------------+\n| host       | user | password                                   |\n+-----------+------+-------------------------------------------+\n| localhost | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| 127.0.0.1 | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n| localhost |       |                                            |\n| %          | root | *4ACFE3202A5FF5CF467898FC58AAB1D615029441 |\n+-----------+------+-------------------------------------------+\n4 rows in set (0.01 sec)\n</code></pre></li>\n</ul>\n<h3 id=\"创建ejbca数据库\"><a href=\"#创建ejbca数据库\" class=\"headerlink\" title=\"创建ejbca数据库\"></a>创建ejbca数据库</h3><ul>\n<li><p>建数据库：</p>\n<blockquote>\n</blockquote>\n<pre><code>CREATE DATABASE ejbca CHARACTER SET utf8 COLLATE utf8_general_ci;\n</code></pre></li>\n<li><p>本机连接centos7中的数据库</p>\n<blockquote>\n</blockquote>\n<pre><code>vmware-&gt;编辑-&gt;虚拟网络编辑器-&gt;vmnet8-&gt;NAT设置-&gt;将虚拟ip地址加上（如80 192.168.171.143：80 TCP）\n关闭防火墙：\n[root@by ~]# systemctl stop firewalld.service\n本机hosts文件（windows/system32/drivers/etc/hosts）配置：\n192.168.171.144  by.cos7\n</code></pre></li>\n</ul>\n<h3 id=\"为EJBCA新建用户\"><a href=\"#为EJBCA新建用户\" class=\"headerlink\" title=\"为EJBCA新建用户\"></a>为EJBCA新建用户</h3><ul>\n<li><p>进入root用户(su命令)：(设置pwd:ejbca)</p>\n<blockquote>\n</blockquote>\n<pre><code>adduser ca\npasswd ca\n</code></pre></li>\n<li><p>将安装包的所有者改成ca</p>\n<blockquote>\n</blockquote>\n<pre><code>mkdir /opt/ca/\nchown ca:ca /opt/ca\nchown ca:ca /opt/ca/jboss-eap-6.4.0-installer.jar\nchown ca:ca /opt/ca/ejbca_ce_6_3_1_1.zip\nchown ca:ca /opt/ca/mysql-connector-java-5.1.27.jar\n</code></pre></li>\n</ul>\n<h2 id=\"安装JBoss-EAP\"><a href=\"#安装JBoss-EAP\" class=\"headerlink\" title=\"安装JBoss EAP\"></a>安装JBoss EAP</h2><ul>\n<li>切换用户: <code>su ca</code></li>\n<li><p>用java命令安装JBoss EAP：</p>\n<blockquote>\n</blockquote>\n<pre><code>java -jar /opt/ca/jboss-eap-6.4.0-installer.jar\n</code></pre></li>\n<li><p>安装过程会有交互：</p>\n<blockquote>\n</blockquote>\n<pre><code>#选择安装语言，默认为英语\nSelect language  :\n0:  eng\n1:  chn\n2:  deu\n3:  fra\n4:  jpn\n5:  por\n6:  spa\nPlease choose  [0]  :\n\n#确认协议之后是安装路径，默认即可\nSelect the installation path:  [/root/EAP-6.4.0]\n\n#随后是部件选项，默认即可\nSelect the packs you want to  install:\n\n1    [x]  [Required]      [Red Hat JBoss Enterprise Application Platform]  (542.89  KB)\n2    [x] [AppClient]  (34.24  KB)\n3    [x]  [Required]      [Bin]  (10.99  MB)\n4    [x]  [Required]      [Bundles]  (1.01  MB)\n5    [x] [Docs]  (4.75  MB)\n6    [x]  [Required]      [Domain]  (125.56  KB)\n7    [x]  [Required]      [Domain Shell Scripts]  (17.35  KB)\n8    [x]  [Required]      [Modules]  (147.01  MB)\n9    [x]  [Required]      [Standalone]  (152.77  KB)\n10 [x]  [Required]      [Standalone Shell Scripts]  (14.16  KB)\n11 [x]  [Required]      [Welcome Content]  (2.11  MB)\n12 [x] [Red Hat JBoss Enterprise Application Platform Natives]  (8  KB)\n13 [x] [Native RHEL7 x86_64]  (76  KB)\n14 [x] [Native Utils RHEL7 x86_64]  (53.04  KB)\n15 [x] [Native Webserver RHEL7 x86_64]  (254.97  KB)\nTotal Size Required:  167.11  MB\nPress  0  to  confirm your selections\nPlease select which packs you want to  install\n\n#随后是jboss用户名和密码（admin:jbossadmin5*）\nAdmin username:  [admin]\nAdmin password:  []\n*************\nConfirm admin password:  [*************]\n*************\npress  1  to  continue,  2  to  quit,  3  to  redisplay.\n\n#然后是演示文件的安装，我选择no\nQuickstarts\nRed Hat JBoss Enterprise Application Platform comes with  a  series of quickstart examples designed to  help users begin writing applications using the Java EE  6  technologies.  Would you like to  install quickstarts?\n0  [x]  No\n1  [  ]  Yes\n\n#最后是监听端口，默认是8080,\nSocket Bindings\nConfigure the socket bindings for  Red Hat JBoss Enterprise Application Platform.\nSelect Port Configuration:\n0  [x]  Use  the default  port bindings for  standalone and  domain modes.\n1  [  ]  Configure an offset for  all default  port bindings.\n2  [  ]  Configure custom port bindings.\n\n#紧接着是是否启用IPv6\nIf  this  computer is  using  a  pure IPv6 configuration,  please check the box below.\n  [  ]  Enable pure IPv6 configuration\n\n#然后会询问是否启动服务器，先不启动\nServer Launch\nChoose server startup mode:\n0  [x]  Don&apos;t  start the server\n1  [  ]  Standalone Mode\n2  [  ]  Domain Mode\n\n#选择日志等级\nConfigure the logging levels for  Red Hat JBoss Enterprise Application Platform?\n0  [x]  No\n1  [  ]  Yes\n#选择配置文件\nConfigure runtime environment\nThere are several additional options for  configuring Red Hat JBoss Enterprise Application Platform now that the server has been installed.  Each  option can be individually chosen,  and  will be configured in  the order displayed upon pressing next.  Would you like to  do  this  now?\n0  [x]  Perform default  configuration\n1  [  ]  Perform advanced configuration\n</code></pre></li>\n<li><p>经过一系列交互之后就会解包安装：<img src=\"https://i.imgur.com/eqaXqq5.jpg\" alt=\"\"></p>\n</li>\n<li><p>到这里已经完成JBoss EAP的安装，其实他有个基于web的控制面饭，但是服务器只监听127.0.0.1这个IP，如果需要监听其他IP或0.0.0.0，请修改以下文件：</p>\n<blockquote>\n</blockquote>\n<pre><code>#打开文件进行修改\n[root@ejbca  ~]# vim /opt/ca/EAP-6.4.0/standalone/configuration/standalone.xml\n搜索：/127.0.0.1\n#定位到interface的节点和该节点上面的127.0.0.1，修改监听地址为0.0.0.0\n&lt;interfaces&gt;\n    &lt;interface  name=&quot;management&quot;&gt;\n        &lt;inet-address value=&quot;${jboss.bind.address.management:0.0.0.0}&quot;/&gt;\n    &lt;/interface&gt;\n    &lt;interface  name=&quot;public&quot;&gt;\n        &lt;inet-address value=&quot;${jboss.bind.address:0.0.0.0}&quot;/&gt;\n    &lt;/interface&gt;\n    &lt;!--  TODO  -  only show this  if  the jacorb subsystem is  added  --&gt;\n    &lt;interface  name=&quot;unsecure&quot;&gt;\n        &lt;!--\n          ~  Used for  IIOP sockets in  the standard configuration.\n          ~                  To  secure JacORB you need to  setup SSL\n          --&gt;\n        &lt;inet-address value=&quot;${jboss.bind.address.unsecure:0.0.0.0}&quot;/&gt;\n    &lt;/interface&gt;\n&lt;/interfaces&gt;    \n</code></pre></li>\n<li><p>随后使用以下命令启动服务，在这里先不用脚本，因为后面需要重启服务。启动服务后再打开一个SSH窗口进行下面的步骤：</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@ejbca  ~]# /opt/ca/EAP-6.4.0/bin/standalone.sh\n（ps:此处不会用）顺便记一下关闭服务的命令：ctrl+c或者如下：\nps -ef|grep jboss\nkill -9 进程号\n</code></pre></li>\n<li><p>确认JBoss EAP服务启动后即可通过浏览器打开管理界面：访问http:by.cos7:8080/</p>\n<h2 id=\"配置jboss的mysql数据源\"><a href=\"#配置jboss的mysql数据源\" class=\"headerlink\" title=\"配置jboss的mysql数据源\"></a>配置jboss的mysql数据源</h2></li>\n<li><p>创建目录，然后在该目录下创建module.xml</p>\n<blockquote>\n</blockquote>\n<pre><code>mkdir -p /opt/ca/EAP-6.4.0/modules/com/mysql/main/\ncd /opt/ca/EAP-6.4.0/modules/com/mysql/main\nvi module.xml\n</code></pre></li>\n<li><p>module.xml内容如下：</p>\n<blockquote>\n</blockquote>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n    &lt;module xmlns=&quot;urn:jboss:module:1.0&quot; name=&quot;com.mysql&quot;&gt;\n    &lt;resources&gt;\n        &lt;resource-root path=&quot;mysql-connector-java-5.1.27.jar&quot;/&gt;\n    &lt;/resources&gt;\n    &lt;dependencies&gt;\n        &lt;module name=&quot;javax.api&quot;/&gt;\n        &lt;module name=&quot;javax.transaction.api&quot;/&gt;\n        &lt;module name=&quot;org.slf4j&quot;/&gt;\n    &lt;/dependencies&gt;\n&lt;/module&gt;\n</code></pre></li>\n<li><p>将mysql的驱动包<code>mysql-connector-java-5.1.27.jar</code>，拷贝到当前目录xxx/mian</p>\n<blockquote>\n</blockquote>\n<pre><code>cp /home/ca/Downloads/mysql-connector-java-5.1.27.jar ./\n</code></pre></li>\n<li><p>打开新的shell窗口，运行</p>\n<blockquote>\n</blockquote>\n<pre><code>[root@by EAP-6.4.0]# /opt/ca/EAP-6.4.0/bin/jboss-cli.sh\nYou are disconnected at  the moment.  Type  &apos;connect&apos;  to  connect to  the server or  &apos;help&apos;  for  the list of supported commands.\n[disconnected  /]\n</code></pre></li>\n<li><p>如果提示disconnected，则需要输入connect并回车，如果一切正常则显示：</p>\n<blockquote>\n</blockquote>\n<pre><code>[standalone@localhost:9999  /]\n</code></pre></li>\n<li><p>然后输入以下命令在JBoss中注册mysql驱动：</p>\n<blockquote>\n</blockquote>\n<pre><code>#注册驱动\n/subsystem=datasources/jdbc-driver=com.mysql.jdbc.Driver:add(driver-name=com.mysql.jdbc.Driver,driver-class-name=com.mysql.jdbc.Driver,driver-module-name=com.mysql,driver-xa-datasource-class-name=com.mysql.jdbc.jdbc.jdbc2.optional.MysqlXADataSource)\n#重新加载\n:reload\n</code></pre></li>\n<li><p>完成后输入exit回车即可退出。</p>\n<h2 id=\"安装ejbca\"><a href=\"#安装ejbca\" class=\"headerlink\" title=\"安装ejbca\"></a>安装ejbca</h2></li>\n<li><p>　从ejbca官方网站下载ejbca安装包：ejbca_ce_6_3_1_1.zip，放在/usr/file目录，解压，准备修改配置</p>\n<blockquote>\n</blockquote>\n<pre><code>unzip /usr/file/ejbca_ce_6_3_1_1.zip -d /usr/java\ncd /usr/java\nmv ejbca_ce_6_3_1_1 ejbca-ce-6.3.1.1\ncd /usr/java/ejbca-ce-6.3.1.1/conf/\n# 配置文件目录包含以下文件：\nll -h\n</code></pre></li>\n<li><p>EJBCA只加载后缀名为properties的文件，否则则加载默认配置。在这里我们需要修改以下文件：</p>\n<blockquote>\n</blockquote>\n<pre><code>database.properties：数据库配置文件\nejbca.properties：EJBCA配置文件\ninstall.properties：安装配置文件\nweb.properties：web服务配置文件\n</code></pre></li>\n<li><p>首先是数据库配置文件，先将文件复制一份然后进行修改:</p>\n<blockquote>\n</blockquote>\n<pre><code># 复制\ncp database.properties.sample database.properties\n# 修改\nvim database.properties\n# 修改以下内容\ndatasource.jndi-name=jboss/datasources/MySqlDS\ndatabase.name=mysql\ndatabase.url=jdbc:mysql://by.cos7:3306/ejbca?characterEncoding=UTF-8\ndatabase.driver=org.mysql.jdbc.Driver\ndatabase.username=root\ndatabase.password=123456\n</code></pre></li>\n<li><p>然后复制并修改EJBCA配置文件:</p>\n<blockquote>\n</blockquote>\n<pre><code># 复制\ncp ejbca.properties.sample ejbca.properties\n# 修改\nvim ejbca.properties\n# 修改以下内容\nappserver.home=/opt/ca/EAP-6.4.0\nappserver.type=jboss\napproval.defaultrequestvalidity=28800 #保持默认状态\napproval.defaultapprovalvalidity=28800 #保持默认状态\nejbca.passwordlogrounds=8 #设置密码为8位\n</code></pre></li>\n<li><p>然后修改安装配置文件：</p>\n<blockquote>\n</blockquote>\n<pre><code># 复制\ncp install.properties.sample install.properties\n# 修改\nvim install.properties\n# 修改以下内容\nca.name=EnginxManagementCA\nca.dn=CN=TestManagementCA,O=Test,C=CN\nca.tokentype=soft\nca.tokenpassword=null\nca.keyspec=4096\nca.keytype=RSA\nca.signaturealgorithm=SHA256WithRSA\nca.validity=3650\nca.policy=null\nca.certificateprofile=ROOTCA #要修改\n</code></pre></li>\n<li><p>最后是web服务配置文件：</p>\n<blockquote>\n</blockquote>\n<pre><code># 复制\ncp web.properties.sample web.properties\n# 修改\nvim web.properties\n# 修改以下内容\njava.trustpassword=changeit  #默认即可\nsuperadmin.cn=SuperAdmin  #默认即可\nsuperadmin.dn=CN=${superadmin.cn},O=Test,C=CN\nsuperadmin.password=ejbca  #默认即可\nsuperadmin.batch=true\nhttpsserver.password=serverpwd  #默认即可\nhttpsserver.hostname=by.cos7\nhttpsserver.dn=CN=${httpsserver.hostname},O=Test,C=CN\nhttpserver.pubhttp=8080 #不修改\nhttpserver.pubhttps=8442 #不修改\nhttpserver.privhttps=8443 #不修改\n</code></pre><h2 id=\"部署ejbca到jboss\"><a href=\"#部署ejbca到jboss\" class=\"headerlink\" title=\"部署ejbca到jboss\"></a>部署ejbca到jboss</h2></li>\n<li>deploy用ant部署，install生成证书，deploy-keystore将证书部署到jboss，前两步所需时间较长，过程中如需输入，请直接回车:<blockquote>\n</blockquote>\n<pre><code>cd /opt/ca/ejbca-ce-6.3.1.1\nant clean deploy\nant install #成功后会生成数据库表\nant deploy-keystore\n</code></pre><h2 id=\"配置jboss的https\"><a href=\"#配置jboss的https\" class=\"headerlink\" title=\"配置jboss的https\"></a>配置jboss的https</h2></li>\n<li><p>打开新的shell窗口，运行</p>\n<blockquote>\n</blockquote>\n<pre><code>/opt/ca/EAP-6.4.0/bin/jboss-cli.sh\n如果是“disconnect”状态，运行“connect”，多回车几次，准备运行下面4部分配置\n</code></pre></li>\n<li><p>第一部分（配置任意主机可访问）</p>\n<blockquote>\n</blockquote>\n<pre><code>/interface=http:add(inet-address=&quot;0.0.0.0&quot;)\n/interface=httpspub:add(inet-address=&quot;0.0.0.0&quot;)\n/interface=httpspriv:add(inet-address=&quot;0.0.0.0&quot;)\n/socket-binding-group=standard-sockets/socket-binding=http:add(port=&quot;8080&quot;,interface=&quot;http&quot;)\n/subsystem=undertow/server=default-server/http-listener=http:add(socket-binding=http)\n/subsystem=undertow/server=default-server/http-listener=http:write-attribute(name=redirect-socket, value=&quot;httpspriv&quot;)\n:reload\n</code></pre></li>\n<li><p>第二部分（配置证书））</p>\n<blockquote>\n</blockquote>\n<pre><code>/core-service=management/security-realm=SSLRealm:add()\n/core-service=management/security-realm=SSLRealm/server-identity=ssl:add(keystore-path=&quot;${jboss.server.config.dir}/keystore/keystore.jks&quot;, keystore-password=&quot;serverpwd&quot;, alias=&quot;prod-ica1&quot;)\n/core-service=management/security-realm=SSLRealm/authentication=truststore:add(keystore-path=&quot;${jboss.server.config.dir}/keystore/truststore.jks&quot;, keystore-password=&quot;changeit&quot;)\n/socket-binding-group=standard-sockets/socket-binding=httpspriv:add(port=&quot;8443&quot;,interface=&quot;httpspriv&quot;)\n/socket-binding-group=standard-sockets/socket-binding=httpspub:add(port=&quot;8442&quot;, interface=&quot;httpspub&quot;)\n:reload\n</code></pre></li>\n</ul>\n<ul>\n<li><p>第三部分（配置ssl））</p>\n<blockquote>\n</blockquote>\n<pre><code>/subsystem=undertow/server=default-server/https-listener=httpspriv:add(socket-binding=httpspriv, security-realm=&quot;SSLRealm&quot;, verify-client=REQUIRED)\n/subsystem=undertow/server=default-server/https-listener=httpspub:add(socket-binding=httpspub, security-realm=&quot;SSLRealm&quot;)\n:reload\n</code></pre></li>\n<li><p>第四部分（配置web service）</p>\n<blockquote>\n</blockquote>\n<pre><code>/system-property=org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH:add(value=true)\n/system-property=org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH:add(value=true)\n/system-property=org.apache.catalina.connector.URI_ENCODING:add(value=&quot;UTF-8&quot;)\n/system-property=org.apache.catalina.connector.USE_BODY_ENCODING_FOR_QUERY_STRING:add(value=true)\n/subsystem=webservices:write-attribute(name=wsdl-host, value=jbossws.undefined.host)\n/subsystem=webservices:write-attribute(name=modify-wsdl-address, value=true)\n:reload\n</code></pre></li>\n</ul>\n<h2 id=\"使用ejbca-community-6-3-1-1\"><a href=\"#使用ejbca-community-6-3-1-1\" class=\"headerlink\" title=\"使用ejbca community 6.3.1.1\"></a>使用ejbca community 6.3.1.1</h2><ul>\n<li>假设ejbca服务器地址：172.17.210.124，编辑windows的“C:\\Windows\\System32\\drivers\\etc”下的hosts文件，加入一行<code>172.17.210.124 by.cos7</code></li>\n<li>拷贝ejbca服务器“/usr/java/ejbca-ce-6.3.1.1/p12/”下的superadmin.p12到windows，双击安装，密码“ejbca”,ejbca提供了两个界面</li>\n<li>用户界面:<code>http://by.cos7:8080/ejbca/</code></li>\n<li>管理员界面（需要证书，使用刚才安装的superadmin证书）:<code>https://by.cos7:8443/ejbca/adminweb/</code></li>\n<li>图片参考：<img src=\"https://i.imgur.com/10L0sEU.jpg\" alt=\"\"><img src=\"https://i.imgur.com/1hKKnKm.jpg\" alt=\"\"><img src=\"https://i.imgur.com/TvEsmb5.jpg\" alt=\"\"><img src=\"https://i.imgur.com/jizg2OD.png\" alt=\"\"><img src=\"https://i.imgur.com/4SjRPld.png\" alt=\"\"><h1 id=\"三、参考链接\"><a href=\"#三、参考链接\" class=\"headerlink\" title=\"三、参考链接\"></a>三、参考链接</h1></li>\n<li><code>https://www.jianshu.com/p/56051594fee9</code></li>\n<li><code>https://www.bbsmax.com/A/xl56xw2Yzr/</code></li>\n<li><code>https://piggsoft.com/2018/07/11/PKI%E4%BD%93%E7%B3%BB%EF%BC%88%E4%B8%89%EF%BC%89-EJBCA%E5%AE%89%E8%A3%85/</code></li>\n<li>(centos7安装mysql)<code>https://www.cnblogs.com/julyme/p/5969626.html</code></li>\n<li>(centos改主机名)<code>https://www.jianshu.com/p/39d7000dfa47</code></li>\n<li>(EJBCA下载)<code>https://www.ejbca.org/download.html</code></li>\n<li>(JBoss EAP) <code>https://developers.redhat.com/products/eap/download/)</code>6.4.0</li>\n<li>(JDK下载)<code>https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</code></li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-10-11T05:07:17.581Z","updated":"2018-10-11T05:07:17.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxj80008hcr390g1291j","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"hexo+next博客","date":"2018-10-11T05:50:49.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n## 环境准备 ##\n- 安装node.js (npm或淘宝镜像cnpm)\n- 安装git 配饰ssh等\n- 下载安装hexo  (cnpm install -g hexo)\n\n## 本地搭建hexo静态博客 ##\n- 新建文件夹，如Blog\n- 进入文件夹右键运行git,输入hexo init(生成hexo模板，翻墙？)\n- 运行cnpm install\n- 运行hexo server(运行程序，访问本地localhost:4000可看到博客已搭建成功)\n\n## 将博客与Github关联 ##\n- 在Github上创建名字为XXX.github.io的项目，XXX为github的用户名\n- 打开本地的MyBlog文件夹项目内的_config.yml配置文件，将其中的type设置为git\n> \n\t\tdeploy:\n\t\t  type: git\n\t\t  repository: https://github.com/BingYuQHS/BingYuQHS.github.io.git\n\t\t  branch: master\n- 运行：cnpm install --save hexo-deployer-git\n- 运行：hexo clean(删除本地Public目录)\n- 运行：hexo g(本地生成静态文件)\n- 运行：hexo d(将本地静态文件推送至Github)\n- 浏览器访问：https://bingyuqhs.github.io/\n\n## 绑定域名 ##\n- 博客已经搭建好，能通过github的域名访问，也可以绑定自己的域名。（ps:具体的方法后面补充）\n\n## 更换主题 ##\n- Next主题为例\n- 下载主题,下载到Blog目录的themes主题下的next文件夹中\n> \n    \n\t\tgit clone https://github.com/iissnan/hexo-theme-next themes/next\n- 打开站点的_config.yml配置文件，修改主题为next(主题项目的文件夹名称)\n>\n    \ttheme: next\n\n- 打开主题(不是站点下的)的_config.yml配置文件，选择next主题的样式\n>\n\t    # Scheme Settings\n    \t# Schemes\n    \t#scheme: Muse\n    \tscheme: Mist\n    \t#scheme: Pisces\n    \t#scheme: Gemini\n- 选择好后，再次部署网站，hexo g、hexo d，查看效果，可在本地hexo server查看后再执行hexo d命令。\n\n## 发布文章 ##\n- 创建博文\n>\n\t\thexo n \"博客名字\" (= hexo new \"博客名字\")\n\t\thexo s --debug   (= hexo server --debug，在本地调样式时使用)\n\t\thexo clean\t\t (删除本地地Public目录)\n\t\thexo g\t        （本地生成静态文件）\n\t\thexo d\t\t\t (将本地静态文件推送至Github)\n- 执行命令后，会发现在Blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开可进行博文编写。\n- 写好博文并且样式无误后，通过hexo g、hexo d 生成、部署网页。随后可以在浏览器中输入域名浏览。(ps:可以hexo server --debug命令进行本地调试修改)\n\n## 寻找图床 ##\n- 图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法``![图片信息](外部链接)``，完成图片的插入，这种网站就被成为图床。\n- 常见的简易的图床网站有：[贴图库图片外链](http://www.tietuku.com/, \"\") 国内算比较好的图床我认为有两个：新浪微博和 [七牛云](https://www.qiniu.com/, \"七牛云官网\") ，七牛云的使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细，下图是博文插入图片，使用图床外链的示例：\n\n## 个性化设置 ##\n### 修改基本站点信息 ###\n- 在站点配置文件_config.yml修改基本的站点信息\n> \n\t    # Site\n\t    title: Flamingo's Blog\n\t    subtitle: hs\n\t    description: RunDouble\n\t    keywords: \n\t    author: hsQin\n\t    avatar: headicon_link\n\t    language: zh-Hans\n\t    timezone: Asia/Shanghai\n- 依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。\n### 修改基本主题信息 ###\n- 在主题配置文件_config.yml修改基本的主题信息\n> \n\t    # Reward\n\t\t#reward_comment: Donate comment here\n\t\twechatpay: /images/wechatpay.jpg\n\t\talipay: /images/alipay.jpg\n\t\t#bitcoin: /images/bitcoin.png\n- 博文打赏的微信、支付宝二维码图片，可以直接把图片放在根目录的source文件夹中，也可以使用图床外链。\n> \n\t    # Social Links.\n\t\t# Usage: `Key: permalink || icon`\n\t\t# Key is the link label showing to end users.\n\t\t# Value before `||` delimeter is the target permalink.\n\t\t# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.\n\t\tsocial:\n\t\t  GitHub: https://github.com/bingyuqhs || github\n\t\t  #E-Mail: mailto:yourname@gmail.com || envelope\n\t\t  #Google: https://plus.google.com/yourname || google\n\t\t  #Twitter: https://twitter.com/yourname || twitter\n\t\t  #FB Page: https://www.facebook.com/yourname || facebook\n\t\t  #VK Group: https://vk.com/yourname || vk\n\t\t  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow\n\t\t  #YouTube: https://youtube.com/yourname || youtube\n\t\t  #Instagram: https://instagram.com/yourname || instagram\n\t\t  #Skype: skype:yourname?call|chat || skype\n\t\tsocial_icons:\n\t\t  enable: true\n\t\t  GitHub: github\n\t\t  icons_only: false\n\t\t  transition: false\n- 社交外链的设置，即在侧栏展示你的个人社交网站信息。\n> \n\t    # Share\n\t\t# This plugin is more useful in China, make sure you known how to use it.\n\t\t# And you can find the use guide at official webiste: http://www.jiathis.com/.\n\t\t# Warning: JiaThis does not support https.\n\t\t#jiathis:\n\t\t  ##uid: Get this uid from http://www.jiathis.com/\n\t\t#add_this_id:\n- 博文分享的插件jiathis,值设置为true。\n### 个性化进阶 ###\n#### 添加网易云音乐 ####\n#### 设置背景 ####\n#### 增加菜单条目 ####\n## 异地同步博客 ##\n- 如何将两台电脑上的博客内容同步，及两台电脑上都可以编辑更新博客？要解决这个问题，首先要清楚博客文件地组成：\n>\n\t\tnode_modules\n\t\tpublic\n\t\tscaffolds\n\t\tsource\n\t\tthemes\n\t\t_config_yml\n\t\tdb.json\n\t\tpackage.json\n\t\t.deploy_git\n- 以上是利用hexo生成的博客的全部内容，当我们执行hexo d时，真正被推送到github上的有哪些内容呢？\n- 看下guthub上的bingyuqhs.github.io项目，发现里面只有Public目录下的内容。也就是说，博客上呈现的内容其实就是public下的文件内容。那么这个public目录是怎么生成的呢？\n- 一开始hexo init的时候是没有public目录的，而运行hexo g命令时，public目录生成了，也就是说hexo g命令就是用来生成博客文件的（会根据_config.yml，source目录文件以及themes目录下文件生成）。运行hexo clean命令时，public目录被删除了。\n- 现在，我们知道决定博客显示内容的只有一个Public目录，而public目录又是可以动态生成的，那么其实我们只要在不同电脑上同步可以生成Public目录的文件即可。\n- 以下文件及目录是必须要同步的：\n>  \n\t\tsource\n\t\tthemes\n\t\t_config.yml\n\t\tdb.json\n\t\tpackage.json\n\t\t.deploy_git\n\n- 同步的方式有很多种，可以每次更新后都备份到一个地址。可以采用github去备份，新建一个项目用来存放以上文件，每次更新后推送的gihub上，用作备份同步。\n- 同步完必须的文件后，怎样在其他电脑上也可以更新博客呢？\n> \n\t\t1 下载node.js并安装（官网下载安装），默认会安装npm.\n\t\t2 下载安装git(官网下载安装)\n\t\t3 下载安装hexo(方法：npm install -g hexo)【要翻墙】\n\t\t4 新建一个文件夹，如Blog\n\t\t5 进入该文件夹内，右键运行git,输入命令：hexo init(生成hexo模板，可能要翻墙)\n\n- 我们重复一开始搭建博客的步骤，重新生成了一个新的模板，这个模板中包含了hexo生成的一些文件。\n> \n\t\t1 git clone我们备份的项目，生成一个文件夹，如BlogData\n\t\t2 将Blog里面的node_moudules、scaffolds文件夹复制到BlogData里面。\n\n- 做完这些，从表面上看，两台电脑上的BlogData目录下的文件应该都是一样的了，现在运行hexo g、hexo d试试，如果报错就往下看。\n> \n\t\t这是因为.deploy_git没同步，在BlogData目录内运行npm install hexo-deployer-git --save后再次推送即可\t\n- 总结流程：当我们每次更新Blog内容后，先利用hexo将public推送到github，然后再将其余必须同步的文件利用git推送到github上。","source":"_posts/hexo-next博客.md","raw":"---\ntitle: hexo+next博客\ndate: 2018-10-11 13:50:49\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n## 环境准备 ##\n- 安装node.js (npm或淘宝镜像cnpm)\n- 安装git 配饰ssh等\n- 下载安装hexo  (cnpm install -g hexo)\n\n## 本地搭建hexo静态博客 ##\n- 新建文件夹，如Blog\n- 进入文件夹右键运行git,输入hexo init(生成hexo模板，翻墙？)\n- 运行cnpm install\n- 运行hexo server(运行程序，访问本地localhost:4000可看到博客已搭建成功)\n\n## 将博客与Github关联 ##\n- 在Github上创建名字为XXX.github.io的项目，XXX为github的用户名\n- 打开本地的MyBlog文件夹项目内的_config.yml配置文件，将其中的type设置为git\n> \n\t\tdeploy:\n\t\t  type: git\n\t\t  repository: https://github.com/BingYuQHS/BingYuQHS.github.io.git\n\t\t  branch: master\n- 运行：cnpm install --save hexo-deployer-git\n- 运行：hexo clean(删除本地Public目录)\n- 运行：hexo g(本地生成静态文件)\n- 运行：hexo d(将本地静态文件推送至Github)\n- 浏览器访问：https://bingyuqhs.github.io/\n\n## 绑定域名 ##\n- 博客已经搭建好，能通过github的域名访问，也可以绑定自己的域名。（ps:具体的方法后面补充）\n\n## 更换主题 ##\n- Next主题为例\n- 下载主题,下载到Blog目录的themes主题下的next文件夹中\n> \n    \n\t\tgit clone https://github.com/iissnan/hexo-theme-next themes/next\n- 打开站点的_config.yml配置文件，修改主题为next(主题项目的文件夹名称)\n>\n    \ttheme: next\n\n- 打开主题(不是站点下的)的_config.yml配置文件，选择next主题的样式\n>\n\t    # Scheme Settings\n    \t# Schemes\n    \t#scheme: Muse\n    \tscheme: Mist\n    \t#scheme: Pisces\n    \t#scheme: Gemini\n- 选择好后，再次部署网站，hexo g、hexo d，查看效果，可在本地hexo server查看后再执行hexo d命令。\n\n## 发布文章 ##\n- 创建博文\n>\n\t\thexo n \"博客名字\" (= hexo new \"博客名字\")\n\t\thexo s --debug   (= hexo server --debug，在本地调样式时使用)\n\t\thexo clean\t\t (删除本地地Public目录)\n\t\thexo g\t        （本地生成静态文件）\n\t\thexo d\t\t\t (将本地静态文件推送至Github)\n- 执行命令后，会发现在Blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开可进行博文编写。\n- 写好博文并且样式无误后，通过hexo g、hexo d 生成、部署网页。随后可以在浏览器中输入域名浏览。(ps:可以hexo server --debug命令进行本地调试修改)\n\n## 寻找图床 ##\n- 图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法``![图片信息](外部链接)``，完成图片的插入，这种网站就被成为图床。\n- 常见的简易的图床网站有：[贴图库图片外链](http://www.tietuku.com/, \"\") 国内算比较好的图床我认为有两个：新浪微博和 [七牛云](https://www.qiniu.com/, \"七牛云官网\") ，七牛云的使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细，下图是博文插入图片，使用图床外链的示例：\n\n## 个性化设置 ##\n### 修改基本站点信息 ###\n- 在站点配置文件_config.yml修改基本的站点信息\n> \n\t    # Site\n\t    title: Flamingo's Blog\n\t    subtitle: hs\n\t    description: RunDouble\n\t    keywords: \n\t    author: hsQin\n\t    avatar: headicon_link\n\t    language: zh-Hans\n\t    timezone: Asia/Shanghai\n- 依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。\n### 修改基本主题信息 ###\n- 在主题配置文件_config.yml修改基本的主题信息\n> \n\t    # Reward\n\t\t#reward_comment: Donate comment here\n\t\twechatpay: /images/wechatpay.jpg\n\t\talipay: /images/alipay.jpg\n\t\t#bitcoin: /images/bitcoin.png\n- 博文打赏的微信、支付宝二维码图片，可以直接把图片放在根目录的source文件夹中，也可以使用图床外链。\n> \n\t    # Social Links.\n\t\t# Usage: `Key: permalink || icon`\n\t\t# Key is the link label showing to end users.\n\t\t# Value before `||` delimeter is the target permalink.\n\t\t# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.\n\t\tsocial:\n\t\t  GitHub: https://github.com/bingyuqhs || github\n\t\t  #E-Mail: mailto:yourname@gmail.com || envelope\n\t\t  #Google: https://plus.google.com/yourname || google\n\t\t  #Twitter: https://twitter.com/yourname || twitter\n\t\t  #FB Page: https://www.facebook.com/yourname || facebook\n\t\t  #VK Group: https://vk.com/yourname || vk\n\t\t  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow\n\t\t  #YouTube: https://youtube.com/yourname || youtube\n\t\t  #Instagram: https://instagram.com/yourname || instagram\n\t\t  #Skype: skype:yourname?call|chat || skype\n\t\tsocial_icons:\n\t\t  enable: true\n\t\t  GitHub: github\n\t\t  icons_only: false\n\t\t  transition: false\n- 社交外链的设置，即在侧栏展示你的个人社交网站信息。\n> \n\t    # Share\n\t\t# This plugin is more useful in China, make sure you known how to use it.\n\t\t# And you can find the use guide at official webiste: http://www.jiathis.com/.\n\t\t# Warning: JiaThis does not support https.\n\t\t#jiathis:\n\t\t  ##uid: Get this uid from http://www.jiathis.com/\n\t\t#add_this_id:\n- 博文分享的插件jiathis,值设置为true。\n### 个性化进阶 ###\n#### 添加网易云音乐 ####\n#### 设置背景 ####\n#### 增加菜单条目 ####\n## 异地同步博客 ##\n- 如何将两台电脑上的博客内容同步，及两台电脑上都可以编辑更新博客？要解决这个问题，首先要清楚博客文件地组成：\n>\n\t\tnode_modules\n\t\tpublic\n\t\tscaffolds\n\t\tsource\n\t\tthemes\n\t\t_config_yml\n\t\tdb.json\n\t\tpackage.json\n\t\t.deploy_git\n- 以上是利用hexo生成的博客的全部内容，当我们执行hexo d时，真正被推送到github上的有哪些内容呢？\n- 看下guthub上的bingyuqhs.github.io项目，发现里面只有Public目录下的内容。也就是说，博客上呈现的内容其实就是public下的文件内容。那么这个public目录是怎么生成的呢？\n- 一开始hexo init的时候是没有public目录的，而运行hexo g命令时，public目录生成了，也就是说hexo g命令就是用来生成博客文件的（会根据_config.yml，source目录文件以及themes目录下文件生成）。运行hexo clean命令时，public目录被删除了。\n- 现在，我们知道决定博客显示内容的只有一个Public目录，而public目录又是可以动态生成的，那么其实我们只要在不同电脑上同步可以生成Public目录的文件即可。\n- 以下文件及目录是必须要同步的：\n>  \n\t\tsource\n\t\tthemes\n\t\t_config.yml\n\t\tdb.json\n\t\tpackage.json\n\t\t.deploy_git\n\n- 同步的方式有很多种，可以每次更新后都备份到一个地址。可以采用github去备份，新建一个项目用来存放以上文件，每次更新后推送的gihub上，用作备份同步。\n- 同步完必须的文件后，怎样在其他电脑上也可以更新博客呢？\n> \n\t\t1 下载node.js并安装（官网下载安装），默认会安装npm.\n\t\t2 下载安装git(官网下载安装)\n\t\t3 下载安装hexo(方法：npm install -g hexo)【要翻墙】\n\t\t4 新建一个文件夹，如Blog\n\t\t5 进入该文件夹内，右键运行git,输入命令：hexo init(生成hexo模板，可能要翻墙)\n\n- 我们重复一开始搭建博客的步骤，重新生成了一个新的模板，这个模板中包含了hexo生成的一些文件。\n> \n\t\t1 git clone我们备份的项目，生成一个文件夹，如BlogData\n\t\t2 将Blog里面的node_moudules、scaffolds文件夹复制到BlogData里面。\n\n- 做完这些，从表面上看，两台电脑上的BlogData目录下的文件应该都是一样的了，现在运行hexo g、hexo d试试，如果报错就往下看。\n> \n\t\t这是因为.deploy_git没同步，在BlogData目录内运行npm install hexo-deployer-git --save后再次推送即可\t\n- 总结流程：当我们每次更新Blog内容后，先利用hexo将public推送到github，然后再将其余必须同步的文件利用git推送到github上。","slug":"hexo-next博客","published":1,"updated":"2018-10-26T02:25:58.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxjc0009hcr35zmlpl9m","content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><ul>\n<li>安装node.js (npm或淘宝镜像cnpm)</li>\n<li>安装git 配饰ssh等</li>\n<li>下载安装hexo  (cnpm install -g hexo)</li>\n</ul>\n<h2 id=\"本地搭建hexo静态博客\"><a href=\"#本地搭建hexo静态博客\" class=\"headerlink\" title=\"本地搭建hexo静态博客\"></a>本地搭建hexo静态博客</h2><ul>\n<li>新建文件夹，如Blog</li>\n<li>进入文件夹右键运行git,输入hexo init(生成hexo模板，翻墙？)</li>\n<li>运行cnpm install</li>\n<li>运行hexo server(运行程序，访问本地localhost:4000可看到博客已搭建成功)</li>\n</ul>\n<h2 id=\"将博客与Github关联\"><a href=\"#将博客与Github关联\" class=\"headerlink\" title=\"将博客与Github关联\"></a>将博客与Github关联</h2><ul>\n<li>在Github上创建名字为XXX.github.io的项目，XXX为github的用户名</li>\n<li>打开本地的MyBlog文件夹项目内的_config.yml配置文件，将其中的type设置为git<blockquote>\n</blockquote>\n<pre><code>deploy:\n  type: git\n  repository: https://github.com/BingYuQHS/BingYuQHS.github.io.git\n  branch: master\n</code></pre></li>\n<li>运行：cnpm install –save hexo-deployer-git</li>\n<li>运行：hexo clean(删除本地Public目录)</li>\n<li>运行：hexo g(本地生成静态文件)</li>\n<li>运行：hexo d(将本地静态文件推送至Github)</li>\n<li>浏览器访问：<a href=\"https://bingyuqhs.github.io/\" target=\"_blank\" rel=\"noopener\">https://bingyuqhs.github.io/</a></li>\n</ul>\n<h2 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h2><ul>\n<li>博客已经搭建好，能通过github的域名访问，也可以绑定自己的域名。（ps:具体的方法后面补充）</li>\n</ul>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><ul>\n<li>Next主题为例</li>\n<li><p>下载主题,下载到Blog目录的themes主题下的next文件夹中</p>\n<blockquote>\n</blockquote>\n<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre></li>\n<li><p>打开站点的_config.yml配置文件，修改主题为next(主题项目的文件夹名称)</p>\n<blockquote>\n</blockquote>\n<pre><code>theme: next\n</code></pre></li>\n<li><p>打开主题(不是站点下的)的_config.yml配置文件，选择next主题的样式</p>\n<blockquote>\n</blockquote>\n<pre><code># Scheme Settings\n# Schemes\n#scheme: Muse\nscheme: Mist\n#scheme: Pisces\n#scheme: Gemini\n</code></pre></li>\n<li>选择好后，再次部署网站，hexo g、hexo d，查看效果，可在本地hexo server查看后再执行hexo d命令。</li>\n</ul>\n<h2 id=\"发布文章\"><a href=\"#发布文章\" class=\"headerlink\" title=\"发布文章\"></a>发布文章</h2><ul>\n<li>创建博文<blockquote>\n</blockquote>\n<pre><code>hexo n &quot;博客名字&quot; (= hexo new &quot;博客名字&quot;)\nhexo s --debug   (= hexo server --debug，在本地调样式时使用)\nhexo clean         (删除本地地Public目录)\nhexo g            （本地生成静态文件）\nhexo d             (将本地静态文件推送至Github)\n</code></pre></li>\n<li>执行命令后，会发现在Blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开可进行博文编写。</li>\n<li>写好博文并且样式无误后，通过hexo g、hexo d 生成、部署网页。随后可以在浏览器中输入域名浏览。(ps:可以hexo server –debug命令进行本地调试修改)</li>\n</ul>\n<h2 id=\"寻找图床\"><a href=\"#寻找图床\" class=\"headerlink\" title=\"寻找图床\"></a>寻找图床</h2><ul>\n<li>图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法<code>![图片信息](外部链接)</code>，完成图片的插入，这种网站就被成为图床。</li>\n<li>常见的简易的图床网站有：<a href=\"http://www.tietuku.com/,\" target=\"_blank\" rel=\"noopener\">贴图库图片外链</a> 国内算比较好的图床我认为有两个：新浪微博和 <a href=\"https://www.qiniu.com/,\" title=\"七牛云官网\" target=\"_blank\" rel=\"noopener\">七牛云</a> ，七牛云的使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细，下图是博文插入图片，使用图床外链的示例：</li>\n</ul>\n<h2 id=\"个性化设置\"><a href=\"#个性化设置\" class=\"headerlink\" title=\"个性化设置\"></a>个性化设置</h2><h3 id=\"修改基本站点信息\"><a href=\"#修改基本站点信息\" class=\"headerlink\" title=\"修改基本站点信息\"></a>修改基本站点信息</h3><ul>\n<li>在站点配置文件_config.yml修改基本的站点信息<blockquote>\n</blockquote>\n<pre><code># Site\ntitle: Flamingo&apos;s Blog\nsubtitle: hs\ndescription: RunDouble\nkeywords: \nauthor: hsQin\navatar: headicon_link\nlanguage: zh-Hans\ntimezone: Asia/Shanghai\n</code></pre></li>\n<li>依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。<h3 id=\"修改基本主题信息\"><a href=\"#修改基本主题信息\" class=\"headerlink\" title=\"修改基本主题信息\"></a>修改基本主题信息</h3></li>\n<li>在主题配置文件_config.yml修改基本的主题信息<blockquote>\n</blockquote>\n<pre><code># Reward\n#reward_comment: Donate comment here\nwechatpay: /images/wechatpay.jpg\nalipay: /images/alipay.jpg\n#bitcoin: /images/bitcoin.png\n</code></pre></li>\n<li>博文打赏的微信、支付宝二维码图片，可以直接把图片放在根目录的source文件夹中，也可以使用图床外链。<blockquote>\n</blockquote>\n<pre><code># Social Links.\n# Usage: `Key: permalink || icon`\n# Key is the link label showing to end users.\n# Value before `||` delimeter is the target permalink.\n# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.\nsocial:\n  GitHub: https://github.com/bingyuqhs || github\n  #E-Mail: mailto:yourname@gmail.com || envelope\n  #Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\nsocial_icons:\n  enable: true\n  GitHub: github\n  icons_only: false\n  transition: false\n</code></pre></li>\n<li>社交外链的设置，即在侧栏展示你的个人社交网站信息。<blockquote>\n</blockquote>\n<pre><code># Share\n# This plugin is more useful in China, make sure you known how to use it.\n# And you can find the use guide at official webiste: http://www.jiathis.com/.\n# Warning: JiaThis does not support https.\n#jiathis:\n  ##uid: Get this uid from http://www.jiathis.com/\n#add_this_id:\n</code></pre></li>\n<li>博文分享的插件jiathis,值设置为true。<h3 id=\"个性化进阶\"><a href=\"#个性化进阶\" class=\"headerlink\" title=\"个性化进阶\"></a>个性化进阶</h3><h4 id=\"添加网易云音乐\"><a href=\"#添加网易云音乐\" class=\"headerlink\" title=\"添加网易云音乐\"></a>添加网易云音乐</h4><h4 id=\"设置背景\"><a href=\"#设置背景\" class=\"headerlink\" title=\"设置背景\"></a>设置背景</h4><h4 id=\"增加菜单条目\"><a href=\"#增加菜单条目\" class=\"headerlink\" title=\"增加菜单条目\"></a>增加菜单条目</h4><h2 id=\"异地同步博客\"><a href=\"#异地同步博客\" class=\"headerlink\" title=\"异地同步博客\"></a>异地同步博客</h2></li>\n<li>如何将两台电脑上的博客内容同步，及两台电脑上都可以编辑更新博客？要解决这个问题，首先要清楚博客文件地组成：<blockquote>\n</blockquote>\n<pre><code>node_modules\npublic\nscaffolds\nsource\nthemes\n_config_yml\ndb.json\npackage.json\n.deploy_git\n</code></pre></li>\n<li>以上是利用hexo生成的博客的全部内容，当我们执行hexo d时，真正被推送到github上的有哪些内容呢？</li>\n<li>看下guthub上的bingyuqhs.github.io项目，发现里面只有Public目录下的内容。也就是说，博客上呈现的内容其实就是public下的文件内容。那么这个public目录是怎么生成的呢？</li>\n<li>一开始hexo init的时候是没有public目录的，而运行hexo g命令时，public目录生成了，也就是说hexo g命令就是用来生成博客文件的（会根据_config.yml，source目录文件以及themes目录下文件生成）。运行hexo clean命令时，public目录被删除了。</li>\n<li>现在，我们知道决定博客显示内容的只有一个Public目录，而public目录又是可以动态生成的，那么其实我们只要在不同电脑上同步可以生成Public目录的文件即可。</li>\n<li><p>以下文件及目录是必须要同步的：</p>\n<blockquote>\n<pre><code>source\nthemes\n_config.yml\ndb.json\npackage.json\n.deploy_git\n</code></pre></blockquote>\n</li>\n<li><p>同步的方式有很多种，可以每次更新后都备份到一个地址。可以采用github去备份，新建一个项目用来存放以上文件，每次更新后推送的gihub上，用作备份同步。</p>\n</li>\n<li><p>同步完必须的文件后，怎样在其他电脑上也可以更新博客呢？</p>\n<blockquote>\n</blockquote>\n<pre><code>1 下载node.js并安装（官网下载安装），默认会安装npm.\n2 下载安装git(官网下载安装)\n3 下载安装hexo(方法：npm install -g hexo)【要翻墙】\n4 新建一个文件夹，如Blog\n5 进入该文件夹内，右键运行git,输入命令：hexo init(生成hexo模板，可能要翻墙)\n</code></pre></li>\n<li><p>我们重复一开始搭建博客的步骤，重新生成了一个新的模板，这个模板中包含了hexo生成的一些文件。</p>\n<blockquote>\n</blockquote>\n<pre><code>1 git clone我们备份的项目，生成一个文件夹，如BlogData\n2 将Blog里面的node_moudules、scaffolds文件夹复制到BlogData里面。\n</code></pre></li>\n<li><p>做完这些，从表面上看，两台电脑上的BlogData目录下的文件应该都是一样的了，现在运行hexo g、hexo d试试，如果报错就往下看。</p>\n<blockquote>\n</blockquote>\n<pre><code>这是因为.deploy_git没同步，在BlogData目录内运行npm install hexo-deployer-git --save后再次推送即可    \n</code></pre></li>\n<li>总结流程：当我们每次更新Blog内容后，先利用hexo将public推送到github，然后再将其余必须同步的文件利用git推送到github上。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><ul>\n<li>安装node.js (npm或淘宝镜像cnpm)</li>\n<li>安装git 配饰ssh等</li>\n<li>下载安装hexo  (cnpm install -g hexo)</li>\n</ul>\n<h2 id=\"本地搭建hexo静态博客\"><a href=\"#本地搭建hexo静态博客\" class=\"headerlink\" title=\"本地搭建hexo静态博客\"></a>本地搭建hexo静态博客</h2><ul>\n<li>新建文件夹，如Blog</li>\n<li>进入文件夹右键运行git,输入hexo init(生成hexo模板，翻墙？)</li>\n<li>运行cnpm install</li>\n<li>运行hexo server(运行程序，访问本地localhost:4000可看到博客已搭建成功)</li>\n</ul>\n<h2 id=\"将博客与Github关联\"><a href=\"#将博客与Github关联\" class=\"headerlink\" title=\"将博客与Github关联\"></a>将博客与Github关联</h2><ul>\n<li>在Github上创建名字为XXX.github.io的项目，XXX为github的用户名</li>\n<li>打开本地的MyBlog文件夹项目内的_config.yml配置文件，将其中的type设置为git<blockquote>\n</blockquote>\n<pre><code>deploy:\n  type: git\n  repository: https://github.com/BingYuQHS/BingYuQHS.github.io.git\n  branch: master\n</code></pre></li>\n<li>运行：cnpm install –save hexo-deployer-git</li>\n<li>运行：hexo clean(删除本地Public目录)</li>\n<li>运行：hexo g(本地生成静态文件)</li>\n<li>运行：hexo d(将本地静态文件推送至Github)</li>\n<li>浏览器访问：<a href=\"https://bingyuqhs.github.io/\" target=\"_blank\" rel=\"noopener\">https://bingyuqhs.github.io/</a></li>\n</ul>\n<h2 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h2><ul>\n<li>博客已经搭建好，能通过github的域名访问，也可以绑定自己的域名。（ps:具体的方法后面补充）</li>\n</ul>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><ul>\n<li>Next主题为例</li>\n<li><p>下载主题,下载到Blog目录的themes主题下的next文件夹中</p>\n<blockquote>\n</blockquote>\n<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre></li>\n<li><p>打开站点的_config.yml配置文件，修改主题为next(主题项目的文件夹名称)</p>\n<blockquote>\n</blockquote>\n<pre><code>theme: next\n</code></pre></li>\n<li><p>打开主题(不是站点下的)的_config.yml配置文件，选择next主题的样式</p>\n<blockquote>\n</blockquote>\n<pre><code># Scheme Settings\n# Schemes\n#scheme: Muse\nscheme: Mist\n#scheme: Pisces\n#scheme: Gemini\n</code></pre></li>\n<li>选择好后，再次部署网站，hexo g、hexo d，查看效果，可在本地hexo server查看后再执行hexo d命令。</li>\n</ul>\n<h2 id=\"发布文章\"><a href=\"#发布文章\" class=\"headerlink\" title=\"发布文章\"></a>发布文章</h2><ul>\n<li>创建博文<blockquote>\n</blockquote>\n<pre><code>hexo n &quot;博客名字&quot; (= hexo new &quot;博客名字&quot;)\nhexo s --debug   (= hexo server --debug，在本地调样式时使用)\nhexo clean         (删除本地地Public目录)\nhexo g            （本地生成静态文件）\nhexo d             (将本地静态文件推送至Github)\n</code></pre></li>\n<li>执行命令后，会发现在Blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开可进行博文编写。</li>\n<li>写好博文并且样式无误后，通过hexo g、hexo d 生成、部署网页。随后可以在浏览器中输入域名浏览。(ps:可以hexo server –debug命令进行本地调试修改)</li>\n</ul>\n<h2 id=\"寻找图床\"><a href=\"#寻找图床\" class=\"headerlink\" title=\"寻找图床\"></a>寻找图床</h2><ul>\n<li>图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法<code>![图片信息](外部链接)</code>，完成图片的插入，这种网站就被成为图床。</li>\n<li>常见的简易的图床网站有：<a href=\"http://www.tietuku.com/,\" target=\"_blank\" rel=\"noopener\">贴图库图片外链</a> 国内算比较好的图床我认为有两个：新浪微博和 <a href=\"https://www.qiniu.com/,\" title=\"七牛云官网\" target=\"_blank\" rel=\"noopener\">七牛云</a> ，七牛云的使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细，下图是博文插入图片，使用图床外链的示例：</li>\n</ul>\n<h2 id=\"个性化设置\"><a href=\"#个性化设置\" class=\"headerlink\" title=\"个性化设置\"></a>个性化设置</h2><h3 id=\"修改基本站点信息\"><a href=\"#修改基本站点信息\" class=\"headerlink\" title=\"修改基本站点信息\"></a>修改基本站点信息</h3><ul>\n<li>在站点配置文件_config.yml修改基本的站点信息<blockquote>\n</blockquote>\n<pre><code># Site\ntitle: Flamingo&apos;s Blog\nsubtitle: hs\ndescription: RunDouble\nkeywords: \nauthor: hsQin\navatar: headicon_link\nlanguage: zh-Hans\ntimezone: Asia/Shanghai\n</code></pre></li>\n<li>依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。<h3 id=\"修改基本主题信息\"><a href=\"#修改基本主题信息\" class=\"headerlink\" title=\"修改基本主题信息\"></a>修改基本主题信息</h3></li>\n<li>在主题配置文件_config.yml修改基本的主题信息<blockquote>\n</blockquote>\n<pre><code># Reward\n#reward_comment: Donate comment here\nwechatpay: /images/wechatpay.jpg\nalipay: /images/alipay.jpg\n#bitcoin: /images/bitcoin.png\n</code></pre></li>\n<li>博文打赏的微信、支付宝二维码图片，可以直接把图片放在根目录的source文件夹中，也可以使用图床外链。<blockquote>\n</blockquote>\n<pre><code># Social Links.\n# Usage: `Key: permalink || icon`\n# Key is the link label showing to end users.\n# Value before `||` delimeter is the target permalink.\n# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.\nsocial:\n  GitHub: https://github.com/bingyuqhs || github\n  #E-Mail: mailto:yourname@gmail.com || envelope\n  #Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\nsocial_icons:\n  enable: true\n  GitHub: github\n  icons_only: false\n  transition: false\n</code></pre></li>\n<li>社交外链的设置，即在侧栏展示你的个人社交网站信息。<blockquote>\n</blockquote>\n<pre><code># Share\n# This plugin is more useful in China, make sure you known how to use it.\n# And you can find the use guide at official webiste: http://www.jiathis.com/.\n# Warning: JiaThis does not support https.\n#jiathis:\n  ##uid: Get this uid from http://www.jiathis.com/\n#add_this_id:\n</code></pre></li>\n<li>博文分享的插件jiathis,值设置为true。<h3 id=\"个性化进阶\"><a href=\"#个性化进阶\" class=\"headerlink\" title=\"个性化进阶\"></a>个性化进阶</h3><h4 id=\"添加网易云音乐\"><a href=\"#添加网易云音乐\" class=\"headerlink\" title=\"添加网易云音乐\"></a>添加网易云音乐</h4><h4 id=\"设置背景\"><a href=\"#设置背景\" class=\"headerlink\" title=\"设置背景\"></a>设置背景</h4><h4 id=\"增加菜单条目\"><a href=\"#增加菜单条目\" class=\"headerlink\" title=\"增加菜单条目\"></a>增加菜单条目</h4><h2 id=\"异地同步博客\"><a href=\"#异地同步博客\" class=\"headerlink\" title=\"异地同步博客\"></a>异地同步博客</h2></li>\n<li>如何将两台电脑上的博客内容同步，及两台电脑上都可以编辑更新博客？要解决这个问题，首先要清楚博客文件地组成：<blockquote>\n</blockquote>\n<pre><code>node_modules\npublic\nscaffolds\nsource\nthemes\n_config_yml\ndb.json\npackage.json\n.deploy_git\n</code></pre></li>\n<li>以上是利用hexo生成的博客的全部内容，当我们执行hexo d时，真正被推送到github上的有哪些内容呢？</li>\n<li>看下guthub上的bingyuqhs.github.io项目，发现里面只有Public目录下的内容。也就是说，博客上呈现的内容其实就是public下的文件内容。那么这个public目录是怎么生成的呢？</li>\n<li>一开始hexo init的时候是没有public目录的，而运行hexo g命令时，public目录生成了，也就是说hexo g命令就是用来生成博客文件的（会根据_config.yml，source目录文件以及themes目录下文件生成）。运行hexo clean命令时，public目录被删除了。</li>\n<li>现在，我们知道决定博客显示内容的只有一个Public目录，而public目录又是可以动态生成的，那么其实我们只要在不同电脑上同步可以生成Public目录的文件即可。</li>\n<li><p>以下文件及目录是必须要同步的：</p>\n<blockquote>\n<pre><code>source\nthemes\n_config.yml\ndb.json\npackage.json\n.deploy_git\n</code></pre></blockquote>\n</li>\n<li><p>同步的方式有很多种，可以每次更新后都备份到一个地址。可以采用github去备份，新建一个项目用来存放以上文件，每次更新后推送的gihub上，用作备份同步。</p>\n</li>\n<li><p>同步完必须的文件后，怎样在其他电脑上也可以更新博客呢？</p>\n<blockquote>\n</blockquote>\n<pre><code>1 下载node.js并安装（官网下载安装），默认会安装npm.\n2 下载安装git(官网下载安装)\n3 下载安装hexo(方法：npm install -g hexo)【要翻墙】\n4 新建一个文件夹，如Blog\n5 进入该文件夹内，右键运行git,输入命令：hexo init(生成hexo模板，可能要翻墙)\n</code></pre></li>\n<li><p>我们重复一开始搭建博客的步骤，重新生成了一个新的模板，这个模板中包含了hexo生成的一些文件。</p>\n<blockquote>\n</blockquote>\n<pre><code>1 git clone我们备份的项目，生成一个文件夹，如BlogData\n2 将Blog里面的node_moudules、scaffolds文件夹复制到BlogData里面。\n</code></pre></li>\n<li><p>做完这些，从表面上看，两台电脑上的BlogData目录下的文件应该都是一样的了，现在运行hexo g、hexo d试试，如果报错就往下看。</p>\n<blockquote>\n</blockquote>\n<pre><code>这是因为.deploy_git没同步，在BlogData目录内运行npm install hexo-deployer-git --save后再次推送即可    \n</code></pre></li>\n<li>总结流程：当我们每次更新Blog内容后，先利用hexo将public推送到github，然后再将其余必须同步的文件利用git推送到github上。</li>\n</ul>\n"},{"title":"markdown常用语法","date":"2018-10-11T06:52:43.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n标题：\n#h1级标题\n##h2级标题\n###h3级标题\n####h4级标题\n#####h5级标题\n######h6级标题\n\n分割线：三个以上的短线 即可作出分割线\n\n----\n\n超链接：[连接名称](网址 , 标题)\n[我是链接名](http://www.izhangbo.cn, \"我是标题\")\n[<i class=\"icon-refresh\"></i> 点我刷新](/sonfilename/)\n\n另一种超链接写法：[链接名][链接代号]\n[here][3]\n然后在别的地方定义 3 这个详细链接信息，\n[3]: http://www.izhangbo.cn \"聚牛团队\"\n\n直接展示链接的写法：<http://www.izhangbo.cn>\n\n键盘键\n<kbd>Ctrl+[</kbd> and <kbd>Ctrl+]</kbd>\n\ncode格式：反引号\nUse the `printf()` function.\n\n``There is a literal backtick (`) here.针对在代码区段内插入反引号的情况`` \n\n强调：\n*斜体强调*\n**粗体强调**\n\n图片\n![Alt text](http://www.izhangbo.cn/wp-content/themes/minty/img/logo.png \"Optional title\")\n\n使用 icon 图标文字\n<i class=\"icon-cog\"></i>\n\n段落：以一个空行开始，以一个空行结束，中间的就是一个段落。\n\n表格：\n\nItem     | Value\n-------- | ---\nComputer | $1600\nPhone    | $12\nPipe     | $1\n\n无序列表：使用 - 加一个空格（）\n\n- 无需列表1\n- 无序列表2\n- 无序列表3\n\n有序列表：使用 数字 加一个英文句点\n\n1. 有序列表\n2. 有序列表\n3. 有序列表\n4. 有序列表\n5. 有序列表\n\n换行缩进形成代码区块\n\n    这里先换行，然后缩进4个空格，之后的内容便可以原样显示了，适合用于显示代码内容。直到文本结束或最后一个存在缩进的行为止。    \n\n块引用\n>给引用的文本开始位置都加一个 '>'，\n>便可组成一个块引用。在块引用中，可以结合\n>其他markdown元素一块使用，比如列表。\n>**强调**\n也可以只在第一行加大于号，其他位置不加。\n\n>- 块引用里使用列表，需要和上面的内容隔开一个空行\n>- 记得加空格哦。","source":"_posts/markdown常用语法.md","raw":"---\ntitle: markdown常用语法\ndate: 2018-10-11 14:52:43\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n标题：\n#h1级标题\n##h2级标题\n###h3级标题\n####h4级标题\n#####h5级标题\n######h6级标题\n\n分割线：三个以上的短线 即可作出分割线\n\n----\n\n超链接：[连接名称](网址 , 标题)\n[我是链接名](http://www.izhangbo.cn, \"我是标题\")\n[<i class=\"icon-refresh\"></i> 点我刷新](/sonfilename/)\n\n另一种超链接写法：[链接名][链接代号]\n[here][3]\n然后在别的地方定义 3 这个详细链接信息，\n[3]: http://www.izhangbo.cn \"聚牛团队\"\n\n直接展示链接的写法：<http://www.izhangbo.cn>\n\n键盘键\n<kbd>Ctrl+[</kbd> and <kbd>Ctrl+]</kbd>\n\ncode格式：反引号\nUse the `printf()` function.\n\n``There is a literal backtick (`) here.针对在代码区段内插入反引号的情况`` \n\n强调：\n*斜体强调*\n**粗体强调**\n\n图片\n![Alt text](http://www.izhangbo.cn/wp-content/themes/minty/img/logo.png \"Optional title\")\n\n使用 icon 图标文字\n<i class=\"icon-cog\"></i>\n\n段落：以一个空行开始，以一个空行结束，中间的就是一个段落。\n\n表格：\n\nItem     | Value\n-------- | ---\nComputer | $1600\nPhone    | $12\nPipe     | $1\n\n无序列表：使用 - 加一个空格（）\n\n- 无需列表1\n- 无序列表2\n- 无序列表3\n\n有序列表：使用 数字 加一个英文句点\n\n1. 有序列表\n2. 有序列表\n3. 有序列表\n4. 有序列表\n5. 有序列表\n\n换行缩进形成代码区块\n\n    这里先换行，然后缩进4个空格，之后的内容便可以原样显示了，适合用于显示代码内容。直到文本结束或最后一个存在缩进的行为止。    \n\n块引用\n>给引用的文本开始位置都加一个 '>'，\n>便可组成一个块引用。在块引用中，可以结合\n>其他markdown元素一块使用，比如列表。\n>**强调**\n也可以只在第一行加大于号，其他位置不加。\n\n>- 块引用里使用列表，需要和上面的内容隔开一个空行\n>- 记得加空格哦。","slug":"markdown常用语法","published":1,"updated":"2018-10-11T06:54:12.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxjh000ahcr31to0tmqn","content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n<p>标题：</p>\n<p>#h1级标题</p>\n<p>##h2级标题</p>\n<p>###h3级标题</p>\n<p>####h4级标题</p>\n<p>#####h5级标题</p>\n<p>######h6级标题</p>\n<p>分割线：三个以上的短线 即可作出分割线</p>\n<hr>\n<p>超链接：<a href=\"网址 , 标题\">连接名称</a><br><a href=\"http://www.izhangbo.cn,\" title=\"我是标题\" target=\"_blank\" rel=\"noopener\">我是链接名</a><br><a href=\"/sonfilename/\"><i class=\"icon-refresh\"></i> 点我刷新</a></p>\n<p>另一种超链接写法：[链接名][链接代号]<br>[here][3]<br>然后在别的地方定义 3 这个详细链接信息，<br>[3]: <a href=\"http://www.izhangbo.cn\" target=\"_blank\" rel=\"noopener\">http://www.izhangbo.cn</a> “聚牛团队”</p>\n<p>直接展示链接的写法：<a href=\"http://www.izhangbo.cn\" target=\"_blank\" rel=\"noopener\">http://www.izhangbo.cn</a></p>\n<p>键盘键<br><kbd>Ctrl+[</kbd> and <kbd>Ctrl+]</kbd></p>\n<p>code格式：反引号<br>Use the <code>printf()</code> function.</p>\n<p><code>There is a literal backtick (`) here.针对在代码区段内插入反引号的情况</code> </p>\n<p>强调：<br><em>斜体强调</em><br><strong>粗体强调</strong></p>\n<p>图片<br><img src=\"http://www.izhangbo.cn/wp-content/themes/minty/img/logo.png\" alt=\"Alt text\" title=\"Optional title\"></p>\n<p>使用 icon 图标文字<br><i class=\"icon-cog\"></i></p>\n<p>段落：以一个空行开始，以一个空行结束，中间的就是一个段落。</p>\n<p>表格：</p>\n<table>\n<thead>\n<tr>\n<th>Item</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Computer</td>\n<td>$1600</td>\n</tr>\n<tr>\n<td>Phone</td>\n<td>$12</td>\n</tr>\n<tr>\n<td>Pipe</td>\n<td>$1</td>\n</tr>\n</tbody>\n</table>\n<p>无序列表：使用 - 加一个空格（）</p>\n<ul>\n<li>无需列表1</li>\n<li>无序列表2</li>\n<li>无序列表3</li>\n</ul>\n<p>有序列表：使用 数字 加一个英文句点</p>\n<ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n</ol>\n<p>换行缩进形成代码区块</p>\n<pre><code>这里先换行，然后缩进4个空格，之后的内容便可以原样显示了，适合用于显示代码内容。直到文本结束或最后一个存在缩进的行为止。    \n</code></pre><p>块引用</p>\n<blockquote>\n<p>给引用的文本开始位置都加一个 ‘&gt;’，<br>便可组成一个块引用。在块引用中，可以结合<br>其他markdown元素一块使用，比如列表。<br><strong>强调</strong><br>也可以只在第一行加大于号，其他位置不加。</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>块引用里使用列表，需要和上面的内容隔开一个空行</li>\n<li>记得加空格哦。</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n\n<p>标题：</p>\n<p>#h1级标题</p>\n<p>##h2级标题</p>\n<p>###h3级标题</p>\n<p>####h4级标题</p>\n<p>#####h5级标题</p>\n<p>######h6级标题</p>\n<p>分割线：三个以上的短线 即可作出分割线</p>\n<hr>\n<p>超链接：<a href=\"网址 , 标题\">连接名称</a><br><a href=\"http://www.izhangbo.cn,\" title=\"我是标题\" target=\"_blank\" rel=\"noopener\">我是链接名</a><br><a href=\"/sonfilename/\"><i class=\"icon-refresh\"></i> 点我刷新</a></p>\n<p>另一种超链接写法：[链接名][链接代号]<br>[here][3]<br>然后在别的地方定义 3 这个详细链接信息，<br>[3]: <a href=\"http://www.izhangbo.cn\" target=\"_blank\" rel=\"noopener\">http://www.izhangbo.cn</a> “聚牛团队”</p>\n<p>直接展示链接的写法：<a href=\"http://www.izhangbo.cn\" target=\"_blank\" rel=\"noopener\">http://www.izhangbo.cn</a></p>\n<p>键盘键<br><kbd>Ctrl+[</kbd> and <kbd>Ctrl+]</kbd></p>\n<p>code格式：反引号<br>Use the <code>printf()</code> function.</p>\n<p><code>There is a literal backtick (`) here.针对在代码区段内插入反引号的情况</code> </p>\n<p>强调：<br><em>斜体强调</em><br><strong>粗体强调</strong></p>\n<p>图片<br><img src=\"http://www.izhangbo.cn/wp-content/themes/minty/img/logo.png\" alt=\"Alt text\" title=\"Optional title\"></p>\n<p>使用 icon 图标文字<br><i class=\"icon-cog\"></i></p>\n<p>段落：以一个空行开始，以一个空行结束，中间的就是一个段落。</p>\n<p>表格：</p>\n<table>\n<thead>\n<tr>\n<th>Item</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Computer</td>\n<td>$1600</td>\n</tr>\n<tr>\n<td>Phone</td>\n<td>$12</td>\n</tr>\n<tr>\n<td>Pipe</td>\n<td>$1</td>\n</tr>\n</tbody>\n</table>\n<p>无序列表：使用 - 加一个空格（）</p>\n<ul>\n<li>无需列表1</li>\n<li>无序列表2</li>\n<li>无序列表3</li>\n</ul>\n<p>有序列表：使用 数字 加一个英文句点</p>\n<ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n</ol>\n<p>换行缩进形成代码区块</p>\n<pre><code>这里先换行，然后缩进4个空格，之后的内容便可以原样显示了，适合用于显示代码内容。直到文本结束或最后一个存在缩进的行为止。    \n</code></pre><p>块引用</p>\n<blockquote>\n<p>给引用的文本开始位置都加一个 ‘&gt;’，<br>便可组成一个块引用。在块引用中，可以结合<br>其他markdown元素一块使用，比如列表。<br><strong>强调</strong><br>也可以只在第一行加大于号，其他位置不加。</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>块引用里使用列表，需要和上面的内容隔开一个空行</li>\n<li>记得加空格哦。</li>\n</ul>\n</blockquote>\n"},{"title":"前端基础回顾","date":"2018-12-25T07:23:56.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n## HTML基础 ##\n#### 超链 ####\n\t安全写法 参考<https://juejin.im/post/5a9f8425f265da239a5f57f8?utm_source=gold_browser_extension>\n    <a href=\"https://an.evil.site\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">进入一个“邪恶”的网站</a>\n#### 表单元素 ####\n#### 文本框 ####\n    <input type=\"text\" value=\"有初始值的文本框\">\n\t<input type=\"text\" placeholder=\"有背景文字的文本框 html5属性\"\n#### 密码框 ####\n\t<input type=\"password\"> #输入的数据会自动显示为星号\n#### 表单 ####\n\t<form  method=\"get\" action=\"http://how2j.cn/study/login.jsp\">\n\t账号：<input type=\"text\" name=\"name\"> <br/>\n\t密码：<input type=\"password\" name=\"password\" > <br/>\n\t<input type=\"submit\" value=\"登陆\">\n\t</form>\n\t//提交数据的方式 get(不设置method时默认get) post(地址栏没有提交参数，提交二进制文件如上传文件必须用post)\n#### 单选框 ####\n    <p>今天晚上做什么？</p>\n\t学习java<input type=\"radio\" name=\"activity\" value=\"学习java\" > <br/>\n\t东京热<input type=\"radio\" checked=\"checked\"  name=\"activity\" value=\"tokyohot\" > <br/>\n\tdota<input type=\"radio\" name=\"activity\" value=\"dota\" > <br/>\n\tLOL<input type=\"radio\" name=\"activity\"  value=\"lol\"> <br/>\n\t//type=\"radio\" \n\t//分组控制只能选中一个name=\"activity\"\n\t//默认选中checked=\"checked\"\n#### 复选框 ####\n    <p>今天晚上做什么？</p>\n\t学习java<input type=\"checkbox\" value=\"学习java\" > <br/>\n\t东京热<input type=\"checkbox\" checked=\"checked\"  name=\"activity\" value=\"tokyohot\" > <br/>\n\tdota<input type=\"checkbox\" value=\"dota\" > <br/>\n\tLOL<input type=\"checkbox\" value=\"lol\"> <br/>\n#### 下拉列表 ####\n    <select size=\"3\" multiple=\"multiple\">\n\t <option >1aaa</option>\n\t <option selected=\"selected\">2bbb</option>\n\t <option selected=\"selected\">3cccc</option>\n\t</select>\n\t//size=\"3\"表示下拉列表的高度\n\t//multiple=\"multiple\"表示按`ctrl`或`shift`可多选\n\t//selected=\"selected\"表示默认选中\n#### 文本域 ####\n    <textarea cols=\"30\" rows=\"8\">123456789012345678901234567890\n\t1234567890\n\t1234567890\n\t1234567890\n\t1234567890\n\t1234567890\n\t1234567890\n\t1234567890</textarea>\n\t//可以多行，可以有滚动条\n\t//cols和rows表示设置宽度和行数\n#### 普通按钮 ####\n\t<input type=\"button\"> 即普通按钮\n\t//普通按钮不具备提交form的效果\n#### 提交按钮 ####\n    <form action=\"/study/login.jsp\" method=\"get\">\n\t账号：<input type=\"text\" name=\"name\"> <br/>\n\t密码：<input type=\"password\" name=\"password\" > <br/>\n\t<input type=\"submit\" value=\"登陆\">\n\t</form>\n\t//submit 用于提交form，把数据提交到服务端\n#### 重置按钮 ####\n    <input type=\"reset\"> 重置按钮 可以把输入框的改动复原\n#### 图像提交 ####\n    //<input type=\"image\" > 即使用图像作为按钮进行form的提交\n\t<form action=\"/study/login.jsp\">\n\t账号：<input type=\"text\" name=\"name\"> <br/>\n\t密码：<input type=\"password\" name=\"password\" > <br/>\n\t<input type=\"image\" src=\"http://how2j.cn/example.gif\">\n\t</form>\n#### 按钮 ####\n\t//button里是图片\n\t<button><img src=\"http://how2j.cn/example.gif\"/></button>\n\t//提交数据\n\t设置type=\"submit\" \n\tIE下button的type的默认值为button不具备提交功能 \n\t其他浏览器type的默认值是submit\n\t<form action=\"/study/login.jsp\">\n\t账号：<input type=\"text\" name=\"name\"> <br/>\n\t密码：<input type=\"password\" name=\"password\" > <br/>\n\t<button type=\"submit\">登陆</button>\n\t</form>\n### CSS基础 ###\n#### 选择器 ####\n    //元素选择器 \n\t<style>\n\t\tp{\n\t\t  color:red;\n\t\t}\n\t</style>\n\n\t//id选择器  (id=\"p1\")\n\t\t#p1{\n\t\t  color:blue;\n\t\t}\n\n\t//类选择器  (class=\"pre\")\n\t\t.pre{\n\t\t  color:blue;\n\t\t}\n\n\t//更准确的选择 （元素名.class值或元素名#id值）\n\t<style>\n\t\tp.blue{\n\t\t  color:blue;\n\t\t}\n\t\tp#percentage{\n\t\t  width:50%;\n\t\t  height:50%;\n\t\t  background-color:pink;\n\t\t}\n\t</style>\n#### 注释 ####\n    /**/\n#### 尺寸 ####\n\t属性：width hight\n\t值：可以是百分比或者像素\n#### 背景 ####\n##### 背景颜色 #####\n\t属性：background-color\n\t值： 1.预定义的颜色名字 red\n\t\t2.rgb格式 rgb(250,0,255)\n\t\t3.16进制的表示 #00ff00 等同rgb(0,255,0)\n    <style>\n\tp.gray {background-color: gray;}\n\th1 {background-color: transparent}\n\th2 {background-color: rgb(250,0,255)}\n\th3 {background-color: #00ff00}\n\t</style>\n\t \n\t<p class=\"gray\">灰色</p>\n\t<h1>透明背景，默认即透明背景</h1>\n\t<h2>紫色</h2>\n\t<h3>绿色背景</h3>\n##### 图片做背景 #####\n\t属性：background-image\n\t值：url(/study/background.jpg)\n\t<style>\n\tdiv#test\n\t  {\n\t    background-image:url(/study/background.jpg);\n\t    width:200px;\n\t    height:100px;\n\t  }\n\t</style>\n\t \n\t<div id=\"test\">\n\t  这是一个有背景图的DIV\n\t</div>\n##### 背景重复 #####\n\t属性：background-repeat\n\t值：repeat; 水平垂直方向都重复 \n\t\trepeat-x; 只有水平方向重复 \n\t\trepeat-y; 只有垂直方向重复 \n\t\tno-repeat; 无重复\n\n\tdiv#norepeat\n\t  {\n\t    background-image:url(/study/background_small.jpg);\n\t    width:200px;\n\t    height:100px;\n\t    background-repeat: no-repeat;\n\t  }\n##### 背景平铺 #####\n\t属性：background-size\n\t值：contain\n\n\t<style>\n\tdiv#contain\n\t  {\n\t    background-image:url(/study/background_small.jpg);\n\t    width:200px;\n\t    height:100px;\n\t    background-size: contain;\n\t  }\n\t</style>\n\t  \n\t<div id=\"contain\">\n\t   背景平铺，通过拉伸实现，会有失真\n\t</div>\n#### 文字 ####\n##### 文字颜色 #####\n\tdiv#colorful{\n\t  color:pink\n\t}\n\t \n\t</style>\n\t \n\t<div id=\"colorful\">\n\t  粉红\n##### 对齐 #####\n\t属性:text-align\n\t值：left,right,center\n\tdiv是块级元素，其默认宽度是100%，所以文本有对齐的空间前提。\n\t\n\t但是，span却看不出右对齐效果\n\t因为span是内联元素其默认宽度就是其文本内容的宽度\n\t简单说就是文本已经粑在其边框上了，对齐是看不出效果来的\n##### 文本修饰 #####\n\t属性：text-decoration \n\t值： overline 上划线\n\t\tline-through 删除效果\n\t\tunderline 下划线\n\t\tblink 闪烁效果，大部分浏览器取消了\n\n\t.a {text-decoration: none}//去掉默认下划线的超链\n##### 行间距 #####\n\t属性：line-height \n\t值：数字或者百分比\n\t.p{\n\t  line-height:200%;\n\t}\n##### 字符间距 #####\n\t属性：letter-spacing \n\t值： 数字\n\t.p{\n\t  letter-spacing:2;\n\t}\n##### 单词间距 #####\n\t属性：word-spacing \n\t值： 数字\n\t.p{\n\t  word-spacing:10;\n\t}\n##### 首行缩进 #####\n\t属性：text-indent \n\t值： 数字\n\t.p{\n\t  text-indent:50;\n\t}\n##### 大小写 #####\n\t属性：text-transform \n\t值： \n\tuppercase 全部大写 \n\tcapitalize 首字母大写 \n\tlowercase 全部小写\n##### 空白格 #####\n\t属性：white-space\n\t值：\n\tnormal 默认。多个空白格或者换行符会被合并成一个空白格\n\tpre 有多少空白格，显示多少空白格，相当于pre标签,如果长度超出父容器也不会换行。\n\tpre-wrap 有多少空白格，显示多少空白格，相当于pre标签,如果长度超出父容器，会换行。\n\tnowrap 一直不换行，直到使用br\n#### 字体 ####\n##### 尺寸 #####\n\t属性：font-size\n\t值：数字或百分比\n\tp.big{\n\t  font-size:30px;\n\t}\n\t \n\tp.small{\n\t  font-size:50%; /*0.5em 等同于 50%比例的文字*/\n\t}\n\t   \n\tp.small2{\n\t  font-size:0.5em;\n\t} \n##### 风格 #####\n\t属性：font-style\n\t值：normal 标准字体\n\t\titalic 斜体\n##### 粗细 #####\n\t属性：font-weight\n\t值：normal 标准粗细\n\t\tbold 粗\n##### 字库 #####\n\t属性：font-family\n\t值：\n\t<style>\n\tp.f1{\n\t  font-family:\"Times New Roman\";\n\t}\n\t \n\tp.f2{\n\t  font-family:Arial;\n\t}\n\tp.f3{\n\t  font-family:宋体;\n\t}\n\tp.f4{\n\t  font-family:黑体;\n\t}\n\tp.f5{\n\t  font-family:楷体;\n\t}\n\tp.f6{\n\t  font-family:微软雅黑;\n\t}\n\t</style>\n##### 大小 风格 粗细 字库声明在一起 #####\n\t<style>\n\tp.all{\n\t   font:italic bold 30px \"Times New Roman\";\n\t} \n\t</style>\n\t \n\t<p>默认字体</p> \n\t<p class=\"all\">斜体的 粗体的 大小是30px的 \"Times New Roman\" </p>\t\t\n#### 鼠标样式 ####\n    属性：cursor\n\t值：not-allowed\n\t\thelp\n\t\tpointer ...\n#### 表格相关样式 ####\n##### 表格布局 #####\n    属性:table-layout \n\tautomatic; 单元格的大小由td的内容宽度决定 \n\tfixed; 单元格的大小由td上设置的宽度决定\n##### 表格边框 #####\n\t属性：border-collapse\n\t值：\n\tseparate:边框分隔\n\tcollapse:边框合并\n#### 边框 ####\n\t属性：border-style 边框风格\n\t\tborder-color \n\t\tborder-width\n\t\tborder\n\t\tborder-top\n\t\tborder-top，border-left\n\t\t块级元素和内联元素的边框区别\n\t\t\t块级元素div默认是占用100%的宽度\n\t\t\t常见的块级元素有div h1 p 等\n\t\t\t而内联元素span的宽度由其内容的宽度决定\n\t\t\t常见的内联元素有 a b strong i input 等\n\t\t表格斑马线\n\t\t\t<style>\n\t\t\t\ttable{\n\t\t\t\tborder-collapse:collapse;\n\t\t\t\twidth:90%;\n\t\t\t\t}\n\t\t\t\ttr.odd{\n\t\t\t\tbackground-color:#f8f8f8;\n\t\t\t\t}\n\t\t\t\t  tr.head{\n\t\t\t\t    border-bottom-width: 2px;\n\t\t\t\t  }\n\t\t\t\ttr{\n\t\t\t\tborder-bottom-style: solid;\n\t\t\t\tborder-bottom-width: 1px;\n\t\t\t\tborder-bottom-color: lightgray;\n\t\t\t\theight:35px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\ttd{\n\t\t\t\twidth:25%;\n\t\t\t\ttext-align:center;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t</style>\n\t\t\t\t<table>\n\t\t\t\t   <tr class=\"head\">\n\t\t\t\t       <td>id</td>\n\t\t\t\t       <td>名称</td>\n\t\t\t\t       <td>血量</td>\n\t\t\t\t       <td>伤害</td>\n\t\t\t\t    </tr>\n\t\t\t\t   <tr class=\"odd\">\n\t\t\t\t       <td>1</td>\n\t\t\t\t       <td>gareen</td>\n\t\t\t\t       <td>340</td>\n\t\t\t\t       <td>58</td>\n\t\t\t\t    </tr>\n\t\t\t\t   <tr class=\"even\">\n\t\t\t\t       <td>2</td>\n\t\t\t\t       <td>teemo</td>\n\t\t\t\t       <td>320</td>\n\t\t\t\t       <td>76</td>\n\t\t\t\t    </tr>\n\t\t\t\t   <tr class=\"odd\">\n\t\t\t\t       <td>3</td>\n\t\t\t\t       <td>annie</td>\n\t\t\t\t       <td>380</td>\n\t\t\t\t       <td>38</td>\n\t\t\t\t    </tr>\n\t\t\t\t   <tr class=\"even\">\n\t\t\t\t       <td>4</td>\n\t\t\t\t       <td>deadbrother</td>\n\t\t\t\t       <td>400</td>\n\t\t\t\t       <td>90</td>\n\t\t\t\t    </tr>\n\t\t\t\t</table>\n\t\t美人尖\n\t\t\t<style>\n\t\t\t\tdiv{\n\t\t\t\t   width:0px;\n\t\t\t\t   height:0px;\n\t\t\t\t   border-top-style:solid;\n\t\t\t\t   border-top-color:red;\n\t\t\t\t   border-top-width: 10px;\n\t\t\t\t   border-left-style:solid;\n\t\t\t\t   border-left-color:white;\n\t\t\t\t   border-left-width: 10px;  \n\t\t\t\t   border-bottom-style:solid;\n\t\t\t\t   border-bottom-color:white;\n\t\t\t\t   border-bottom-width: 10px;\n\t\t\t\t   border-right-style:solid;\n\t\t\t\t   border-right-color:white;\n\t\t\t\t   border-right-width: 10px;     \n\t\t\t\t  }\n\t\t\t\t</style>\n\t\t\t\t   \n\t\t\t\t<div >\n\t\t\t\t</div>\n\t\t短线下划线\n\t\t\t<style>\n\t\t\t  table{\n\t\t\t    width:100%;\n\t\t\t  }\n\t\t\t  table td{\n\t\t\t    text-align:center;\n\t\t\t  }\n\t\t\t  table tr.rowborder td{\n\t\t\t    background-color: #b2d1ff;\n\t\t\t    border-right: 2px solid #fff;\n\t\t\t    height: 3px;\n\t\t\t}\n\t\t\t</style>\n\t\t\t  \n\t\t\t<table>\n\t\t\t  <tr>\n\t\t\t    <td>商品</td>\n\t\t\t    <td>数量</td>\n\t\t\t    <td>价格</td>\n\t\t\t    <td>小记</td>\n\t\t\t  </tr>\n\t\t\t  <tr class=\"rowborder\">\n\t\t\t    <td></td>\n\t\t\t    <td></td>\n\t\t\t    <td></td>\n\t\t\t    <td></td>\n\t\t\t  </tr> \n\t\t\t</table>\n#### 内边距 ####\n\t元素内边距 \n\t指的是元素里的内容与边框之间的距离 \n\t属性： \n\tpadding-left: 左内边距 \n\tpadding-right: 右内边距 \n\tpadding-top: 上内边距 \n\tpadding-bottom: 下内边距 \n\tpadding: 上 右 下 左\n\t\n\t如果缺少左内边距的值，则使用右内边距的值。\n\t如果缺少下内边距的值，则使用上内边距的值。\n\t如果缺少右内边距的值，则使用上内边距的值。\n\t举例说明\n\t这是完整4个的\n\tpadding: 10px 20px 40px 80px\n\t如果只有3个\n\tpadding: 10 20 40\n\t那么left取right\n\tpadding: 10 20 40 = padding: 10 20 40 20\n\t如果只有两个\n\tpadding: 10 20\n\t那么bottom取top，left取right\n\tpadding: 10 20 = padding:10 20 10 20\n\t如果只有一个\n\tpadding:10\n\t那么right取top，bottom取top，left取top\n\tpadding:10 = padding:10 10 10 10\n#### 外边距 ####\n\t元素外边距 \n\t指的是元素边框和元素边框之间的距离 \n\t属性： \n\tmargin-left: 左外边距 \n\tmargin-right: 右外边距 \n\tmargin-top: 上外边距 \n\tmargin-bottom: 下外边距 \n\tmargin:0px 10px;  //顺序 上右下左\n\t注：像span这样的内联元素，默认情况下，只有左右外边距，没有上下外边距。 为了观察上下外边距的效果，可以采用块级元素，比如div.\n#### 边框模型 ####\n\t真正决定一个元素的表现形式，是由其边框模型决定的\n\t由图所示\n\t蓝色框即为内容\n\twidth:70px 表示内容的大小\n\t红色框即为边框\n\t内容到边框之间的距离，即为内边距 5px\n\t灰色框，是指边框与其他元素之间的距离，即为外边距：10px\n\t \n\t.box{\n\t    width:70px;\n\t    padding:5px;\n\t    margin: 10px;\n\t}\n![](https://i.imgur.com/JOnY0O2.png)\n#### 超链状态 ####\n\t超链状态有4种 \n\tlink - 初始状态，从未被访问过 \n\tvisited - 已访问过 \n\thover - 鼠标悬停于超链的上方 \n\tactive - 鼠标左键点击下去，但是尚未弹起的时候\n\t\n\t<style>\n\ta:link {color: #FF0000}\n\ta:visited {color: #00FF00}\n\ta:hover {color: #FF00FF}\n\ta:active {color: #0000FF}\n\ta {text-decoration: none}/*去除超链下划线*/\n\t</style>\n\t  \n\t<a href=\"http://www.12306.com\">超链的不同状态</a>\n##### 垂直菜单风格 #####\n\t<style>\n\ta{\n\tfont-size:14px;\n\tcolor: CornflowerBlue;\n\ttext-decoration: none;\n\t}\n\tdiv.menu {\n\t width:80px;\n\t border: 1px solid lightgray;\n\t margin-top:15px;\n\t position: absolute;\n\t  left: 80px;\n\t  top: 20px;\n\t}\n\tdiv.menu a{\n\tdisplay:block;\n\tfont-size:14px;\n\tfont-family:宋体;\n\tcolor: #888;\n\ttext-decoration: none;\n\tpadding:10 0 10 15;\n\t}\n\t \n\tdiv.menu a:hover\n\t {\n\tbackground-color: #f1f1f1;\n\t}\n\t \n\t</style>\n\t \n\t<a href=\"#nowhere\"> 武器 </a>\n\t<a href=\"#nowhere\"> 护甲 </a>\n\t<a href=\"#nowhere\"> 英雄 </a>\n\t \n\t<div class=\"menu\">\n\t<a href=\"#nowhere\"> 盖伦 </a>\n\t<a href=\"#nowhere\"> 提莫 </a>\n\t<a href=\"#nowhere\"> 安妮 </a>\n\t<a href=\"#nowhere\"> 死哥 </a>\n\t</div>\n\t \n\t<div style=\"height:200px\"></div>\n#### 隐藏 ####\n\t隐藏元素有两种方式 \n\tdisplay:none; //隐藏一个元素，这个元素将不再占有原空间 “坑” 让出来了\n\tvisibility:hidden; //隐藏一个元素，这个元素继续占有原空间，只是“看不见”\n#### css文件引用 ####\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/study/style.css\" />\n#### 优先级 ####\n\t标签上的style属性 > html文件中的style标签里样式 > 外部引用的css\n\n\t!important,如果样式上增加了!important，则优先级最高，甚至高于style属性\n\t<style>\n\t.p1{\n\t  color:green !important;\n\t}\n\t</style>\n## 布局 ##\n#### 绝对定位 ####\n\t属性：position \n\t值： absolute \n\tps:\n\t1.设置了绝对定位的元素，相当于该元素被从原文档中删除了 \n\t所以”正常文字4“会紧接着出现在 ”正常文字2“后面，而不会留下空档。\n\t2.绝对定位是基于最近的一个定位了的父容器,如果没有定位了的父容器,”最近的一个定位了的父容器” 即body。\n\t<style>\n\tp.abs{\n\t  position: absolute;\n\t  left: 150px;\n\t  top: 50px;\n\t}\n\t</style>\n\t \n\t<p >正常文字1</p>\n\t<p >正常文字2</p>\n\t<p class=\"abs\" >绝对定位的文字3</p>\n\t<p >正常文字4</p>\n\t<p >正常文字5</p>\n\t3.通过绝对定位可以把一个元素放在另一个元素上，这样位置就重复了重复了，就存在一个谁掩盖谁的问题。 这个时候就可以使用z-index属性，当z-index的值越大，就表示放上面，z-index:越小就表示放下面。\n#### 相对定位 ####\n\t属性：position \n\t值： relative \n\t与绝对定位不同的是，相对定位不会把该元素从原文档删除掉，而是在原文档的位置的基础上，移动一定的距离\n\t<style>\n\tp.r{\n\t  position: relative;\n\t  left: 150px;\n\t  top: 50px;\n\t}\n\t  \n\t</style>\n\t  \n\t<p >正常文字1</p>\n\t<p >正常文字2</p>\n\t<p class=\"r\" >相对定位的文字3</p>\n\t<p >正常文字4</p>\n\t<p >正常文字5</p>\n\t\n\t使用相对定位可以很方便的原来的位置上，移动一下，但是又会占用原来的位置，后面的内容接不上来 。 \n\t有时候，希望一个元素在原来的位置上，移动一下，但是又不占用位置，这个时候，就需要绝对定位和相对定位组合使用了。\n\t1. 首先对一个div(d1)使用相对定位在当前的位置上，但是什么内容都不放。\n\t2. 然后，在这个div(d1)里放一个绝对定位的div(d2),因为绝对定位是以其定位了的父容器来调整位置的，所以就会在这个相对定位的div(d1)的基础上调整位置，看上去就是在原来的基础上调整了位置，并且还不占用坑\n\t<style>\n\tdiv.r{\n\t  position: relative;\n\t  left: 0;\n\t  top: 0;\n\t}\n\tdiv.a{\n\t  position: absolute;\n\t  left: 150px;\n\t  top: 0px;\n\t}\n\t</style>\n\t  \n\t<p>正常文字1</p>\n\t<p>正常文字2</p>\n\t<div class=\"r\">\n\t<div class=\"a\">相对定位的文字3(不占坑)</div>\n\t</div>\n\t<p>正常文字4</p>\n\t<p>正常文字5</p>\n#### 浮动 ####\n\t","source":"_posts/基础回顾.md","raw":"---\ntitle: 前端基础回顾\ndate: 2018-12-25 15:23:56\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n## HTML基础 ##\n#### 超链 ####\n\t安全写法 参考<https://juejin.im/post/5a9f8425f265da239a5f57f8?utm_source=gold_browser_extension>\n    <a href=\"https://an.evil.site\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">进入一个“邪恶”的网站</a>\n#### 表单元素 ####\n#### 文本框 ####\n    <input type=\"text\" value=\"有初始值的文本框\">\n\t<input type=\"text\" placeholder=\"有背景文字的文本框 html5属性\"\n#### 密码框 ####\n\t<input type=\"password\"> #输入的数据会自动显示为星号\n#### 表单 ####\n\t<form  method=\"get\" action=\"http://how2j.cn/study/login.jsp\">\n\t账号：<input type=\"text\" name=\"name\"> <br/>\n\t密码：<input type=\"password\" name=\"password\" > <br/>\n\t<input type=\"submit\" value=\"登陆\">\n\t</form>\n\t//提交数据的方式 get(不设置method时默认get) post(地址栏没有提交参数，提交二进制文件如上传文件必须用post)\n#### 单选框 ####\n    <p>今天晚上做什么？</p>\n\t学习java<input type=\"radio\" name=\"activity\" value=\"学习java\" > <br/>\n\t东京热<input type=\"radio\" checked=\"checked\"  name=\"activity\" value=\"tokyohot\" > <br/>\n\tdota<input type=\"radio\" name=\"activity\" value=\"dota\" > <br/>\n\tLOL<input type=\"radio\" name=\"activity\"  value=\"lol\"> <br/>\n\t//type=\"radio\" \n\t//分组控制只能选中一个name=\"activity\"\n\t//默认选中checked=\"checked\"\n#### 复选框 ####\n    <p>今天晚上做什么？</p>\n\t学习java<input type=\"checkbox\" value=\"学习java\" > <br/>\n\t东京热<input type=\"checkbox\" checked=\"checked\"  name=\"activity\" value=\"tokyohot\" > <br/>\n\tdota<input type=\"checkbox\" value=\"dota\" > <br/>\n\tLOL<input type=\"checkbox\" value=\"lol\"> <br/>\n#### 下拉列表 ####\n    <select size=\"3\" multiple=\"multiple\">\n\t <option >1aaa</option>\n\t <option selected=\"selected\">2bbb</option>\n\t <option selected=\"selected\">3cccc</option>\n\t</select>\n\t//size=\"3\"表示下拉列表的高度\n\t//multiple=\"multiple\"表示按`ctrl`或`shift`可多选\n\t//selected=\"selected\"表示默认选中\n#### 文本域 ####\n    <textarea cols=\"30\" rows=\"8\">123456789012345678901234567890\n\t1234567890\n\t1234567890\n\t1234567890\n\t1234567890\n\t1234567890\n\t1234567890\n\t1234567890</textarea>\n\t//可以多行，可以有滚动条\n\t//cols和rows表示设置宽度和行数\n#### 普通按钮 ####\n\t<input type=\"button\"> 即普通按钮\n\t//普通按钮不具备提交form的效果\n#### 提交按钮 ####\n    <form action=\"/study/login.jsp\" method=\"get\">\n\t账号：<input type=\"text\" name=\"name\"> <br/>\n\t密码：<input type=\"password\" name=\"password\" > <br/>\n\t<input type=\"submit\" value=\"登陆\">\n\t</form>\n\t//submit 用于提交form，把数据提交到服务端\n#### 重置按钮 ####\n    <input type=\"reset\"> 重置按钮 可以把输入框的改动复原\n#### 图像提交 ####\n    //<input type=\"image\" > 即使用图像作为按钮进行form的提交\n\t<form action=\"/study/login.jsp\">\n\t账号：<input type=\"text\" name=\"name\"> <br/>\n\t密码：<input type=\"password\" name=\"password\" > <br/>\n\t<input type=\"image\" src=\"http://how2j.cn/example.gif\">\n\t</form>\n#### 按钮 ####\n\t//button里是图片\n\t<button><img src=\"http://how2j.cn/example.gif\"/></button>\n\t//提交数据\n\t设置type=\"submit\" \n\tIE下button的type的默认值为button不具备提交功能 \n\t其他浏览器type的默认值是submit\n\t<form action=\"/study/login.jsp\">\n\t账号：<input type=\"text\" name=\"name\"> <br/>\n\t密码：<input type=\"password\" name=\"password\" > <br/>\n\t<button type=\"submit\">登陆</button>\n\t</form>\n### CSS基础 ###\n#### 选择器 ####\n    //元素选择器 \n\t<style>\n\t\tp{\n\t\t  color:red;\n\t\t}\n\t</style>\n\n\t//id选择器  (id=\"p1\")\n\t\t#p1{\n\t\t  color:blue;\n\t\t}\n\n\t//类选择器  (class=\"pre\")\n\t\t.pre{\n\t\t  color:blue;\n\t\t}\n\n\t//更准确的选择 （元素名.class值或元素名#id值）\n\t<style>\n\t\tp.blue{\n\t\t  color:blue;\n\t\t}\n\t\tp#percentage{\n\t\t  width:50%;\n\t\t  height:50%;\n\t\t  background-color:pink;\n\t\t}\n\t</style>\n#### 注释 ####\n    /**/\n#### 尺寸 ####\n\t属性：width hight\n\t值：可以是百分比或者像素\n#### 背景 ####\n##### 背景颜色 #####\n\t属性：background-color\n\t值： 1.预定义的颜色名字 red\n\t\t2.rgb格式 rgb(250,0,255)\n\t\t3.16进制的表示 #00ff00 等同rgb(0,255,0)\n    <style>\n\tp.gray {background-color: gray;}\n\th1 {background-color: transparent}\n\th2 {background-color: rgb(250,0,255)}\n\th3 {background-color: #00ff00}\n\t</style>\n\t \n\t<p class=\"gray\">灰色</p>\n\t<h1>透明背景，默认即透明背景</h1>\n\t<h2>紫色</h2>\n\t<h3>绿色背景</h3>\n##### 图片做背景 #####\n\t属性：background-image\n\t值：url(/study/background.jpg)\n\t<style>\n\tdiv#test\n\t  {\n\t    background-image:url(/study/background.jpg);\n\t    width:200px;\n\t    height:100px;\n\t  }\n\t</style>\n\t \n\t<div id=\"test\">\n\t  这是一个有背景图的DIV\n\t</div>\n##### 背景重复 #####\n\t属性：background-repeat\n\t值：repeat; 水平垂直方向都重复 \n\t\trepeat-x; 只有水平方向重复 \n\t\trepeat-y; 只有垂直方向重复 \n\t\tno-repeat; 无重复\n\n\tdiv#norepeat\n\t  {\n\t    background-image:url(/study/background_small.jpg);\n\t    width:200px;\n\t    height:100px;\n\t    background-repeat: no-repeat;\n\t  }\n##### 背景平铺 #####\n\t属性：background-size\n\t值：contain\n\n\t<style>\n\tdiv#contain\n\t  {\n\t    background-image:url(/study/background_small.jpg);\n\t    width:200px;\n\t    height:100px;\n\t    background-size: contain;\n\t  }\n\t</style>\n\t  \n\t<div id=\"contain\">\n\t   背景平铺，通过拉伸实现，会有失真\n\t</div>\n#### 文字 ####\n##### 文字颜色 #####\n\tdiv#colorful{\n\t  color:pink\n\t}\n\t \n\t</style>\n\t \n\t<div id=\"colorful\">\n\t  粉红\n##### 对齐 #####\n\t属性:text-align\n\t值：left,right,center\n\tdiv是块级元素，其默认宽度是100%，所以文本有对齐的空间前提。\n\t\n\t但是，span却看不出右对齐效果\n\t因为span是内联元素其默认宽度就是其文本内容的宽度\n\t简单说就是文本已经粑在其边框上了，对齐是看不出效果来的\n##### 文本修饰 #####\n\t属性：text-decoration \n\t值： overline 上划线\n\t\tline-through 删除效果\n\t\tunderline 下划线\n\t\tblink 闪烁效果，大部分浏览器取消了\n\n\t.a {text-decoration: none}//去掉默认下划线的超链\n##### 行间距 #####\n\t属性：line-height \n\t值：数字或者百分比\n\t.p{\n\t  line-height:200%;\n\t}\n##### 字符间距 #####\n\t属性：letter-spacing \n\t值： 数字\n\t.p{\n\t  letter-spacing:2;\n\t}\n##### 单词间距 #####\n\t属性：word-spacing \n\t值： 数字\n\t.p{\n\t  word-spacing:10;\n\t}\n##### 首行缩进 #####\n\t属性：text-indent \n\t值： 数字\n\t.p{\n\t  text-indent:50;\n\t}\n##### 大小写 #####\n\t属性：text-transform \n\t值： \n\tuppercase 全部大写 \n\tcapitalize 首字母大写 \n\tlowercase 全部小写\n##### 空白格 #####\n\t属性：white-space\n\t值：\n\tnormal 默认。多个空白格或者换行符会被合并成一个空白格\n\tpre 有多少空白格，显示多少空白格，相当于pre标签,如果长度超出父容器也不会换行。\n\tpre-wrap 有多少空白格，显示多少空白格，相当于pre标签,如果长度超出父容器，会换行。\n\tnowrap 一直不换行，直到使用br\n#### 字体 ####\n##### 尺寸 #####\n\t属性：font-size\n\t值：数字或百分比\n\tp.big{\n\t  font-size:30px;\n\t}\n\t \n\tp.small{\n\t  font-size:50%; /*0.5em 等同于 50%比例的文字*/\n\t}\n\t   \n\tp.small2{\n\t  font-size:0.5em;\n\t} \n##### 风格 #####\n\t属性：font-style\n\t值：normal 标准字体\n\t\titalic 斜体\n##### 粗细 #####\n\t属性：font-weight\n\t值：normal 标准粗细\n\t\tbold 粗\n##### 字库 #####\n\t属性：font-family\n\t值：\n\t<style>\n\tp.f1{\n\t  font-family:\"Times New Roman\";\n\t}\n\t \n\tp.f2{\n\t  font-family:Arial;\n\t}\n\tp.f3{\n\t  font-family:宋体;\n\t}\n\tp.f4{\n\t  font-family:黑体;\n\t}\n\tp.f5{\n\t  font-family:楷体;\n\t}\n\tp.f6{\n\t  font-family:微软雅黑;\n\t}\n\t</style>\n##### 大小 风格 粗细 字库声明在一起 #####\n\t<style>\n\tp.all{\n\t   font:italic bold 30px \"Times New Roman\";\n\t} \n\t</style>\n\t \n\t<p>默认字体</p> \n\t<p class=\"all\">斜体的 粗体的 大小是30px的 \"Times New Roman\" </p>\t\t\n#### 鼠标样式 ####\n    属性：cursor\n\t值：not-allowed\n\t\thelp\n\t\tpointer ...\n#### 表格相关样式 ####\n##### 表格布局 #####\n    属性:table-layout \n\tautomatic; 单元格的大小由td的内容宽度决定 \n\tfixed; 单元格的大小由td上设置的宽度决定\n##### 表格边框 #####\n\t属性：border-collapse\n\t值：\n\tseparate:边框分隔\n\tcollapse:边框合并\n#### 边框 ####\n\t属性：border-style 边框风格\n\t\tborder-color \n\t\tborder-width\n\t\tborder\n\t\tborder-top\n\t\tborder-top，border-left\n\t\t块级元素和内联元素的边框区别\n\t\t\t块级元素div默认是占用100%的宽度\n\t\t\t常见的块级元素有div h1 p 等\n\t\t\t而内联元素span的宽度由其内容的宽度决定\n\t\t\t常见的内联元素有 a b strong i input 等\n\t\t表格斑马线\n\t\t\t<style>\n\t\t\t\ttable{\n\t\t\t\tborder-collapse:collapse;\n\t\t\t\twidth:90%;\n\t\t\t\t}\n\t\t\t\ttr.odd{\n\t\t\t\tbackground-color:#f8f8f8;\n\t\t\t\t}\n\t\t\t\t  tr.head{\n\t\t\t\t    border-bottom-width: 2px;\n\t\t\t\t  }\n\t\t\t\ttr{\n\t\t\t\tborder-bottom-style: solid;\n\t\t\t\tborder-bottom-width: 1px;\n\t\t\t\tborder-bottom-color: lightgray;\n\t\t\t\theight:35px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\ttd{\n\t\t\t\twidth:25%;\n\t\t\t\ttext-align:center;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t</style>\n\t\t\t\t<table>\n\t\t\t\t   <tr class=\"head\">\n\t\t\t\t       <td>id</td>\n\t\t\t\t       <td>名称</td>\n\t\t\t\t       <td>血量</td>\n\t\t\t\t       <td>伤害</td>\n\t\t\t\t    </tr>\n\t\t\t\t   <tr class=\"odd\">\n\t\t\t\t       <td>1</td>\n\t\t\t\t       <td>gareen</td>\n\t\t\t\t       <td>340</td>\n\t\t\t\t       <td>58</td>\n\t\t\t\t    </tr>\n\t\t\t\t   <tr class=\"even\">\n\t\t\t\t       <td>2</td>\n\t\t\t\t       <td>teemo</td>\n\t\t\t\t       <td>320</td>\n\t\t\t\t       <td>76</td>\n\t\t\t\t    </tr>\n\t\t\t\t   <tr class=\"odd\">\n\t\t\t\t       <td>3</td>\n\t\t\t\t       <td>annie</td>\n\t\t\t\t       <td>380</td>\n\t\t\t\t       <td>38</td>\n\t\t\t\t    </tr>\n\t\t\t\t   <tr class=\"even\">\n\t\t\t\t       <td>4</td>\n\t\t\t\t       <td>deadbrother</td>\n\t\t\t\t       <td>400</td>\n\t\t\t\t       <td>90</td>\n\t\t\t\t    </tr>\n\t\t\t\t</table>\n\t\t美人尖\n\t\t\t<style>\n\t\t\t\tdiv{\n\t\t\t\t   width:0px;\n\t\t\t\t   height:0px;\n\t\t\t\t   border-top-style:solid;\n\t\t\t\t   border-top-color:red;\n\t\t\t\t   border-top-width: 10px;\n\t\t\t\t   border-left-style:solid;\n\t\t\t\t   border-left-color:white;\n\t\t\t\t   border-left-width: 10px;  \n\t\t\t\t   border-bottom-style:solid;\n\t\t\t\t   border-bottom-color:white;\n\t\t\t\t   border-bottom-width: 10px;\n\t\t\t\t   border-right-style:solid;\n\t\t\t\t   border-right-color:white;\n\t\t\t\t   border-right-width: 10px;     \n\t\t\t\t  }\n\t\t\t\t</style>\n\t\t\t\t   \n\t\t\t\t<div >\n\t\t\t\t</div>\n\t\t短线下划线\n\t\t\t<style>\n\t\t\t  table{\n\t\t\t    width:100%;\n\t\t\t  }\n\t\t\t  table td{\n\t\t\t    text-align:center;\n\t\t\t  }\n\t\t\t  table tr.rowborder td{\n\t\t\t    background-color: #b2d1ff;\n\t\t\t    border-right: 2px solid #fff;\n\t\t\t    height: 3px;\n\t\t\t}\n\t\t\t</style>\n\t\t\t  \n\t\t\t<table>\n\t\t\t  <tr>\n\t\t\t    <td>商品</td>\n\t\t\t    <td>数量</td>\n\t\t\t    <td>价格</td>\n\t\t\t    <td>小记</td>\n\t\t\t  </tr>\n\t\t\t  <tr class=\"rowborder\">\n\t\t\t    <td></td>\n\t\t\t    <td></td>\n\t\t\t    <td></td>\n\t\t\t    <td></td>\n\t\t\t  </tr> \n\t\t\t</table>\n#### 内边距 ####\n\t元素内边距 \n\t指的是元素里的内容与边框之间的距离 \n\t属性： \n\tpadding-left: 左内边距 \n\tpadding-right: 右内边距 \n\tpadding-top: 上内边距 \n\tpadding-bottom: 下内边距 \n\tpadding: 上 右 下 左\n\t\n\t如果缺少左内边距的值，则使用右内边距的值。\n\t如果缺少下内边距的值，则使用上内边距的值。\n\t如果缺少右内边距的值，则使用上内边距的值。\n\t举例说明\n\t这是完整4个的\n\tpadding: 10px 20px 40px 80px\n\t如果只有3个\n\tpadding: 10 20 40\n\t那么left取right\n\tpadding: 10 20 40 = padding: 10 20 40 20\n\t如果只有两个\n\tpadding: 10 20\n\t那么bottom取top，left取right\n\tpadding: 10 20 = padding:10 20 10 20\n\t如果只有一个\n\tpadding:10\n\t那么right取top，bottom取top，left取top\n\tpadding:10 = padding:10 10 10 10\n#### 外边距 ####\n\t元素外边距 \n\t指的是元素边框和元素边框之间的距离 \n\t属性： \n\tmargin-left: 左外边距 \n\tmargin-right: 右外边距 \n\tmargin-top: 上外边距 \n\tmargin-bottom: 下外边距 \n\tmargin:0px 10px;  //顺序 上右下左\n\t注：像span这样的内联元素，默认情况下，只有左右外边距，没有上下外边距。 为了观察上下外边距的效果，可以采用块级元素，比如div.\n#### 边框模型 ####\n\t真正决定一个元素的表现形式，是由其边框模型决定的\n\t由图所示\n\t蓝色框即为内容\n\twidth:70px 表示内容的大小\n\t红色框即为边框\n\t内容到边框之间的距离，即为内边距 5px\n\t灰色框，是指边框与其他元素之间的距离，即为外边距：10px\n\t \n\t.box{\n\t    width:70px;\n\t    padding:5px;\n\t    margin: 10px;\n\t}\n![](https://i.imgur.com/JOnY0O2.png)\n#### 超链状态 ####\n\t超链状态有4种 \n\tlink - 初始状态，从未被访问过 \n\tvisited - 已访问过 \n\thover - 鼠标悬停于超链的上方 \n\tactive - 鼠标左键点击下去，但是尚未弹起的时候\n\t\n\t<style>\n\ta:link {color: #FF0000}\n\ta:visited {color: #00FF00}\n\ta:hover {color: #FF00FF}\n\ta:active {color: #0000FF}\n\ta {text-decoration: none}/*去除超链下划线*/\n\t</style>\n\t  \n\t<a href=\"http://www.12306.com\">超链的不同状态</a>\n##### 垂直菜单风格 #####\n\t<style>\n\ta{\n\tfont-size:14px;\n\tcolor: CornflowerBlue;\n\ttext-decoration: none;\n\t}\n\tdiv.menu {\n\t width:80px;\n\t border: 1px solid lightgray;\n\t margin-top:15px;\n\t position: absolute;\n\t  left: 80px;\n\t  top: 20px;\n\t}\n\tdiv.menu a{\n\tdisplay:block;\n\tfont-size:14px;\n\tfont-family:宋体;\n\tcolor: #888;\n\ttext-decoration: none;\n\tpadding:10 0 10 15;\n\t}\n\t \n\tdiv.menu a:hover\n\t {\n\tbackground-color: #f1f1f1;\n\t}\n\t \n\t</style>\n\t \n\t<a href=\"#nowhere\"> 武器 </a>\n\t<a href=\"#nowhere\"> 护甲 </a>\n\t<a href=\"#nowhere\"> 英雄 </a>\n\t \n\t<div class=\"menu\">\n\t<a href=\"#nowhere\"> 盖伦 </a>\n\t<a href=\"#nowhere\"> 提莫 </a>\n\t<a href=\"#nowhere\"> 安妮 </a>\n\t<a href=\"#nowhere\"> 死哥 </a>\n\t</div>\n\t \n\t<div style=\"height:200px\"></div>\n#### 隐藏 ####\n\t隐藏元素有两种方式 \n\tdisplay:none; //隐藏一个元素，这个元素将不再占有原空间 “坑” 让出来了\n\tvisibility:hidden; //隐藏一个元素，这个元素继续占有原空间，只是“看不见”\n#### css文件引用 ####\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/study/style.css\" />\n#### 优先级 ####\n\t标签上的style属性 > html文件中的style标签里样式 > 外部引用的css\n\n\t!important,如果样式上增加了!important，则优先级最高，甚至高于style属性\n\t<style>\n\t.p1{\n\t  color:green !important;\n\t}\n\t</style>\n## 布局 ##\n#### 绝对定位 ####\n\t属性：position \n\t值： absolute \n\tps:\n\t1.设置了绝对定位的元素，相当于该元素被从原文档中删除了 \n\t所以”正常文字4“会紧接着出现在 ”正常文字2“后面，而不会留下空档。\n\t2.绝对定位是基于最近的一个定位了的父容器,如果没有定位了的父容器,”最近的一个定位了的父容器” 即body。\n\t<style>\n\tp.abs{\n\t  position: absolute;\n\t  left: 150px;\n\t  top: 50px;\n\t}\n\t</style>\n\t \n\t<p >正常文字1</p>\n\t<p >正常文字2</p>\n\t<p class=\"abs\" >绝对定位的文字3</p>\n\t<p >正常文字4</p>\n\t<p >正常文字5</p>\n\t3.通过绝对定位可以把一个元素放在另一个元素上，这样位置就重复了重复了，就存在一个谁掩盖谁的问题。 这个时候就可以使用z-index属性，当z-index的值越大，就表示放上面，z-index:越小就表示放下面。\n#### 相对定位 ####\n\t属性：position \n\t值： relative \n\t与绝对定位不同的是，相对定位不会把该元素从原文档删除掉，而是在原文档的位置的基础上，移动一定的距离\n\t<style>\n\tp.r{\n\t  position: relative;\n\t  left: 150px;\n\t  top: 50px;\n\t}\n\t  \n\t</style>\n\t  \n\t<p >正常文字1</p>\n\t<p >正常文字2</p>\n\t<p class=\"r\" >相对定位的文字3</p>\n\t<p >正常文字4</p>\n\t<p >正常文字5</p>\n\t\n\t使用相对定位可以很方便的原来的位置上，移动一下，但是又会占用原来的位置，后面的内容接不上来 。 \n\t有时候，希望一个元素在原来的位置上，移动一下，但是又不占用位置，这个时候，就需要绝对定位和相对定位组合使用了。\n\t1. 首先对一个div(d1)使用相对定位在当前的位置上，但是什么内容都不放。\n\t2. 然后，在这个div(d1)里放一个绝对定位的div(d2),因为绝对定位是以其定位了的父容器来调整位置的，所以就会在这个相对定位的div(d1)的基础上调整位置，看上去就是在原来的基础上调整了位置，并且还不占用坑\n\t<style>\n\tdiv.r{\n\t  position: relative;\n\t  left: 0;\n\t  top: 0;\n\t}\n\tdiv.a{\n\t  position: absolute;\n\t  left: 150px;\n\t  top: 0px;\n\t}\n\t</style>\n\t  \n\t<p>正常文字1</p>\n\t<p>正常文字2</p>\n\t<div class=\"r\">\n\t<div class=\"a\">相对定位的文字3(不占坑)</div>\n\t</div>\n\t<p>正常文字4</p>\n\t<p>正常文字5</p>\n#### 浮动 ####\n\t","slug":"基础回顾","published":1,"updated":"2018-12-26T06:28:45.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxjk000bhcr30id38tzj","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h2 id=\"HTML基础\"><a href=\"#HTML基础\" class=\"headerlink\" title=\"HTML基础\"></a>HTML基础</h2><h4 id=\"超链\"><a href=\"#超链\" class=\"headerlink\" title=\"超链\"></a>超链</h4><pre><code>安全写法 参考&lt;https://juejin.im/post/5a9f8425f265da239a5f57f8?utm_source=gold_browser_extension&gt;\n&lt;a href=&quot;https://an.evil.site&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;进入一个“邪恶”的网站&lt;/a&gt;\n</code></pre><h4 id=\"表单元素\"><a href=\"#表单元素\" class=\"headerlink\" title=\"表单元素\"></a>表单元素</h4><h4 id=\"文本框\"><a href=\"#文本框\" class=\"headerlink\" title=\"文本框\"></a>文本框</h4><pre><code>&lt;input type=&quot;text&quot; value=&quot;有初始值的文本框&quot;&gt;\n&lt;input type=&quot;text&quot; placeholder=&quot;有背景文字的文本框 html5属性&quot;\n</code></pre><h4 id=\"密码框\"><a href=\"#密码框\" class=\"headerlink\" title=\"密码框\"></a>密码框</h4><pre><code>&lt;input type=&quot;password&quot;&gt; #输入的数据会自动显示为星号\n</code></pre><h4 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h4><pre><code>&lt;form  method=&quot;get&quot; action=&quot;http://how2j.cn/study/login.jsp&quot;&gt;\n账号：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br/&gt;\n密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; &gt; &lt;br/&gt;\n&lt;input type=&quot;submit&quot; value=&quot;登陆&quot;&gt;\n&lt;/form&gt;\n//提交数据的方式 get(不设置method时默认get) post(地址栏没有提交参数，提交二进制文件如上传文件必须用post)\n</code></pre><h4 id=\"单选框\"><a href=\"#单选框\" class=\"headerlink\" title=\"单选框\"></a>单选框</h4><pre><code>&lt;p&gt;今天晚上做什么？&lt;/p&gt;\n学习java&lt;input type=&quot;radio&quot; name=&quot;activity&quot; value=&quot;学习java&quot; &gt; &lt;br/&gt;\n东京热&lt;input type=&quot;radio&quot; checked=&quot;checked&quot;  name=&quot;activity&quot; value=&quot;tokyohot&quot; &gt; &lt;br/&gt;\ndota&lt;input type=&quot;radio&quot; name=&quot;activity&quot; value=&quot;dota&quot; &gt; &lt;br/&gt;\nLOL&lt;input type=&quot;radio&quot; name=&quot;activity&quot;  value=&quot;lol&quot;&gt; &lt;br/&gt;\n//type=&quot;radio&quot; \n//分组控制只能选中一个name=&quot;activity&quot;\n//默认选中checked=&quot;checked&quot;\n</code></pre><h4 id=\"复选框\"><a href=\"#复选框\" class=\"headerlink\" title=\"复选框\"></a>复选框</h4><pre><code>&lt;p&gt;今天晚上做什么？&lt;/p&gt;\n学习java&lt;input type=&quot;checkbox&quot; value=&quot;学习java&quot; &gt; &lt;br/&gt;\n东京热&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot;  name=&quot;activity&quot; value=&quot;tokyohot&quot; &gt; &lt;br/&gt;\ndota&lt;input type=&quot;checkbox&quot; value=&quot;dota&quot; &gt; &lt;br/&gt;\nLOL&lt;input type=&quot;checkbox&quot; value=&quot;lol&quot;&gt; &lt;br/&gt;\n</code></pre><h4 id=\"下拉列表\"><a href=\"#下拉列表\" class=\"headerlink\" title=\"下拉列表\"></a>下拉列表</h4><pre><code>&lt;select size=&quot;3&quot; multiple=&quot;multiple&quot;&gt;\n &lt;option &gt;1aaa&lt;/option&gt;\n &lt;option selected=&quot;selected&quot;&gt;2bbb&lt;/option&gt;\n &lt;option selected=&quot;selected&quot;&gt;3cccc&lt;/option&gt;\n&lt;/select&gt;\n//size=&quot;3&quot;表示下拉列表的高度\n//multiple=&quot;multiple&quot;表示按`ctrl`或`shift`可多选\n//selected=&quot;selected&quot;表示默认选中\n</code></pre><h4 id=\"文本域\"><a href=\"#文本域\" class=\"headerlink\" title=\"文本域\"></a>文本域</h4><pre><code>&lt;textarea cols=&quot;30&quot; rows=&quot;8&quot;&gt;123456789012345678901234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890&lt;/textarea&gt;\n//可以多行，可以有滚动条\n//cols和rows表示设置宽度和行数\n</code></pre><h4 id=\"普通按钮\"><a href=\"#普通按钮\" class=\"headerlink\" title=\"普通按钮\"></a>普通按钮</h4><pre><code>&lt;input type=&quot;button&quot;&gt; 即普通按钮\n//普通按钮不具备提交form的效果\n</code></pre><h4 id=\"提交按钮\"><a href=\"#提交按钮\" class=\"headerlink\" title=\"提交按钮\"></a>提交按钮</h4><pre><code>&lt;form action=&quot;/study/login.jsp&quot; method=&quot;get&quot;&gt;\n账号：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br/&gt;\n密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; &gt; &lt;br/&gt;\n&lt;input type=&quot;submit&quot; value=&quot;登陆&quot;&gt;\n&lt;/form&gt;\n//submit 用于提交form，把数据提交到服务端\n</code></pre><h4 id=\"重置按钮\"><a href=\"#重置按钮\" class=\"headerlink\" title=\"重置按钮\"></a>重置按钮</h4><pre><code>&lt;input type=&quot;reset&quot;&gt; 重置按钮 可以把输入框的改动复原\n</code></pre><h4 id=\"图像提交\"><a href=\"#图像提交\" class=\"headerlink\" title=\"图像提交\"></a>图像提交</h4><pre><code>//&lt;input type=&quot;image&quot; &gt; 即使用图像作为按钮进行form的提交\n&lt;form action=&quot;/study/login.jsp&quot;&gt;\n账号：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br/&gt;\n密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; &gt; &lt;br/&gt;\n&lt;input type=&quot;image&quot; src=&quot;http://how2j.cn/example.gif&quot;&gt;\n&lt;/form&gt;\n</code></pre><h4 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h4><pre><code>//button里是图片\n&lt;button&gt;&lt;img src=&quot;http://how2j.cn/example.gif&quot;/&gt;&lt;/button&gt;\n//提交数据\n设置type=&quot;submit&quot; \nIE下button的type的默认值为button不具备提交功能 \n其他浏览器type的默认值是submit\n&lt;form action=&quot;/study/login.jsp&quot;&gt;\n账号：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br/&gt;\n密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; &gt; &lt;br/&gt;\n&lt;button type=&quot;submit&quot;&gt;登陆&lt;/button&gt;\n&lt;/form&gt;\n</code></pre><h3 id=\"CSS基础\"><a href=\"#CSS基础\" class=\"headerlink\" title=\"CSS基础\"></a>CSS基础</h3><h4 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h4><pre><code>//元素选择器 \n&lt;style&gt;\n    p{\n      color:red;\n    }\n&lt;/style&gt;\n\n//id选择器  (id=&quot;p1&quot;)\n    #p1{\n      color:blue;\n    }\n\n//类选择器  (class=&quot;pre&quot;)\n    .pre{\n      color:blue;\n    }\n\n//更准确的选择 （元素名.class值或元素名#id值）\n&lt;style&gt;\n    p.blue{\n      color:blue;\n    }\n    p#percentage{\n      width:50%;\n      height:50%;\n      background-color:pink;\n    }\n&lt;/style&gt;\n</code></pre><h4 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h4><pre><code>/**/\n</code></pre><h4 id=\"尺寸\"><a href=\"#尺寸\" class=\"headerlink\" title=\"尺寸\"></a>尺寸</h4><pre><code>属性：width hight\n值：可以是百分比或者像素\n</code></pre><h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><h5 id=\"背景颜色\"><a href=\"#背景颜色\" class=\"headerlink\" title=\"背景颜色\"></a>背景颜色</h5><pre><code>属性：background-color\n值： 1.预定义的颜色名字 red\n    2.rgb格式 rgb(250,0,255)\n    3.16进制的表示 #00ff00 等同rgb(0,255,0)\n&lt;style&gt;\np.gray {background-color: gray;}\nh1 {background-color: transparent}\nh2 {background-color: rgb(250,0,255)}\nh3 {background-color: #00ff00}\n&lt;/style&gt;\n\n&lt;p class=&quot;gray&quot;&gt;灰色&lt;/p&gt;\n&lt;h1&gt;透明背景，默认即透明背景&lt;/h1&gt;\n&lt;h2&gt;紫色&lt;/h2&gt;\n&lt;h3&gt;绿色背景&lt;/h3&gt;\n</code></pre><h5 id=\"图片做背景\"><a href=\"#图片做背景\" class=\"headerlink\" title=\"图片做背景\"></a>图片做背景</h5><pre><code>属性：background-image\n值：url(/study/background.jpg)\n&lt;style&gt;\ndiv#test\n  {\n    background-image:url(/study/background.jpg);\n    width:200px;\n    height:100px;\n  }\n&lt;/style&gt;\n\n&lt;div id=&quot;test&quot;&gt;\n  这是一个有背景图的DIV\n&lt;/div&gt;\n</code></pre><h5 id=\"背景重复\"><a href=\"#背景重复\" class=\"headerlink\" title=\"背景重复\"></a>背景重复</h5><pre><code>属性：background-repeat\n值：repeat; 水平垂直方向都重复 \n    repeat-x; 只有水平方向重复 \n    repeat-y; 只有垂直方向重复 \n    no-repeat; 无重复\n\ndiv#norepeat\n  {\n    background-image:url(/study/background_small.jpg);\n    width:200px;\n    height:100px;\n    background-repeat: no-repeat;\n  }\n</code></pre><h5 id=\"背景平铺\"><a href=\"#背景平铺\" class=\"headerlink\" title=\"背景平铺\"></a>背景平铺</h5><pre><code>属性：background-size\n值：contain\n\n&lt;style&gt;\ndiv#contain\n  {\n    background-image:url(/study/background_small.jpg);\n    width:200px;\n    height:100px;\n    background-size: contain;\n  }\n&lt;/style&gt;\n\n&lt;div id=&quot;contain&quot;&gt;\n   背景平铺，通过拉伸实现，会有失真\n&lt;/div&gt;\n</code></pre><h4 id=\"文字\"><a href=\"#文字\" class=\"headerlink\" title=\"文字\"></a>文字</h4><h5 id=\"文字颜色\"><a href=\"#文字颜色\" class=\"headerlink\" title=\"文字颜色\"></a>文字颜色</h5><pre><code>div#colorful{\n  color:pink\n}\n\n&lt;/style&gt;\n\n&lt;div id=&quot;colorful&quot;&gt;\n  粉红\n</code></pre><h5 id=\"对齐\"><a href=\"#对齐\" class=\"headerlink\" title=\"对齐\"></a>对齐</h5><pre><code>属性:text-align\n值：left,right,center\ndiv是块级元素，其默认宽度是100%，所以文本有对齐的空间前提。\n\n但是，span却看不出右对齐效果\n因为span是内联元素其默认宽度就是其文本内容的宽度\n简单说就是文本已经粑在其边框上了，对齐是看不出效果来的\n</code></pre><h5 id=\"文本修饰\"><a href=\"#文本修饰\" class=\"headerlink\" title=\"文本修饰\"></a>文本修饰</h5><pre><code>属性：text-decoration \n值： overline 上划线\n    line-through 删除效果\n    underline 下划线\n    blink 闪烁效果，大部分浏览器取消了\n\n.a {text-decoration: none}//去掉默认下划线的超链\n</code></pre><h5 id=\"行间距\"><a href=\"#行间距\" class=\"headerlink\" title=\"行间距\"></a>行间距</h5><pre><code>属性：line-height \n值：数字或者百分比\n.p{\n  line-height:200%;\n}\n</code></pre><h5 id=\"字符间距\"><a href=\"#字符间距\" class=\"headerlink\" title=\"字符间距\"></a>字符间距</h5><pre><code>属性：letter-spacing \n值： 数字\n.p{\n  letter-spacing:2;\n}\n</code></pre><h5 id=\"单词间距\"><a href=\"#单词间距\" class=\"headerlink\" title=\"单词间距\"></a>单词间距</h5><pre><code>属性：word-spacing \n值： 数字\n.p{\n  word-spacing:10;\n}\n</code></pre><h5 id=\"首行缩进\"><a href=\"#首行缩进\" class=\"headerlink\" title=\"首行缩进\"></a>首行缩进</h5><pre><code>属性：text-indent \n值： 数字\n.p{\n  text-indent:50;\n}\n</code></pre><h5 id=\"大小写\"><a href=\"#大小写\" class=\"headerlink\" title=\"大小写\"></a>大小写</h5><pre><code>属性：text-transform \n值： \nuppercase 全部大写 \ncapitalize 首字母大写 \nlowercase 全部小写\n</code></pre><h5 id=\"空白格\"><a href=\"#空白格\" class=\"headerlink\" title=\"空白格\"></a>空白格</h5><pre><code>属性：white-space\n值：\nnormal 默认。多个空白格或者换行符会被合并成一个空白格\npre 有多少空白格，显示多少空白格，相当于pre标签,如果长度超出父容器也不会换行。\npre-wrap 有多少空白格，显示多少空白格，相当于pre标签,如果长度超出父容器，会换行。\nnowrap 一直不换行，直到使用br\n</code></pre><h4 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h4><h5 id=\"尺寸-1\"><a href=\"#尺寸-1\" class=\"headerlink\" title=\"尺寸\"></a>尺寸</h5><pre><code>属性：font-size\n值：数字或百分比\np.big{\n  font-size:30px;\n}\n\np.small{\n  font-size:50%; /*0.5em 等同于 50%比例的文字*/\n}\n\np.small2{\n  font-size:0.5em;\n} \n</code></pre><h5 id=\"风格\"><a href=\"#风格\" class=\"headerlink\" title=\"风格\"></a>风格</h5><pre><code>属性：font-style\n值：normal 标准字体\n    italic 斜体\n</code></pre><h5 id=\"粗细\"><a href=\"#粗细\" class=\"headerlink\" title=\"粗细\"></a>粗细</h5><pre><code>属性：font-weight\n值：normal 标准粗细\n    bold 粗\n</code></pre><h5 id=\"字库\"><a href=\"#字库\" class=\"headerlink\" title=\"字库\"></a>字库</h5><pre><code>属性：font-family\n值：\n&lt;style&gt;\np.f1{\n  font-family:&quot;Times New Roman&quot;;\n}\n\np.f2{\n  font-family:Arial;\n}\np.f3{\n  font-family:宋体;\n}\np.f4{\n  font-family:黑体;\n}\np.f5{\n  font-family:楷体;\n}\np.f6{\n  font-family:微软雅黑;\n}\n&lt;/style&gt;\n</code></pre><h5 id=\"大小-风格-粗细-字库声明在一起\"><a href=\"#大小-风格-粗细-字库声明在一起\" class=\"headerlink\" title=\"大小 风格 粗细 字库声明在一起\"></a>大小 风格 粗细 字库声明在一起</h5><pre><code>&lt;style&gt;\np.all{\n   font:italic bold 30px &quot;Times New Roman&quot;;\n} \n&lt;/style&gt;\n\n&lt;p&gt;默认字体&lt;/p&gt; \n&lt;p class=&quot;all&quot;&gt;斜体的 粗体的 大小是30px的 &quot;Times New Roman&quot; &lt;/p&gt;        \n</code></pre><h4 id=\"鼠标样式\"><a href=\"#鼠标样式\" class=\"headerlink\" title=\"鼠标样式\"></a>鼠标样式</h4><pre><code>属性：cursor\n值：not-allowed\n    help\n    pointer ...\n</code></pre><h4 id=\"表格相关样式\"><a href=\"#表格相关样式\" class=\"headerlink\" title=\"表格相关样式\"></a>表格相关样式</h4><h5 id=\"表格布局\"><a href=\"#表格布局\" class=\"headerlink\" title=\"表格布局\"></a>表格布局</h5><pre><code>属性:table-layout \nautomatic; 单元格的大小由td的内容宽度决定 \nfixed; 单元格的大小由td上设置的宽度决定\n</code></pre><h5 id=\"表格边框\"><a href=\"#表格边框\" class=\"headerlink\" title=\"表格边框\"></a>表格边框</h5><pre><code>属性：border-collapse\n值：\nseparate:边框分隔\ncollapse:边框合并\n</code></pre><h4 id=\"边框\"><a href=\"#边框\" class=\"headerlink\" title=\"边框\"></a>边框</h4><pre><code>属性：border-style 边框风格\n    border-color \n    border-width\n    border\n    border-top\n    border-top，border-left\n    块级元素和内联元素的边框区别\n        块级元素div默认是占用100%的宽度\n        常见的块级元素有div h1 p 等\n        而内联元素span的宽度由其内容的宽度决定\n        常见的内联元素有 a b strong i input 等\n    表格斑马线\n        &lt;style&gt;\n            table{\n            border-collapse:collapse;\n            width:90%;\n            }\n            tr.odd{\n            background-color:#f8f8f8;\n            }\n              tr.head{\n                border-bottom-width: 2px;\n              }\n            tr{\n            border-bottom-style: solid;\n            border-bottom-width: 1px;\n            border-bottom-color: lightgray;\n            height:35px;\n            }\n\n            td{\n            width:25%;\n            text-align:center;\n            }\n\n            &lt;/style&gt;\n            &lt;table&gt;\n               &lt;tr class=&quot;head&quot;&gt;\n                   &lt;td&gt;id&lt;/td&gt;\n                   &lt;td&gt;名称&lt;/td&gt;\n                   &lt;td&gt;血量&lt;/td&gt;\n                   &lt;td&gt;伤害&lt;/td&gt;\n                &lt;/tr&gt;\n               &lt;tr class=&quot;odd&quot;&gt;\n                   &lt;td&gt;1&lt;/td&gt;\n                   &lt;td&gt;gareen&lt;/td&gt;\n                   &lt;td&gt;340&lt;/td&gt;\n                   &lt;td&gt;58&lt;/td&gt;\n                &lt;/tr&gt;\n               &lt;tr class=&quot;even&quot;&gt;\n                   &lt;td&gt;2&lt;/td&gt;\n                   &lt;td&gt;teemo&lt;/td&gt;\n                   &lt;td&gt;320&lt;/td&gt;\n                   &lt;td&gt;76&lt;/td&gt;\n                &lt;/tr&gt;\n               &lt;tr class=&quot;odd&quot;&gt;\n                   &lt;td&gt;3&lt;/td&gt;\n                   &lt;td&gt;annie&lt;/td&gt;\n                   &lt;td&gt;380&lt;/td&gt;\n                   &lt;td&gt;38&lt;/td&gt;\n                &lt;/tr&gt;\n               &lt;tr class=&quot;even&quot;&gt;\n                   &lt;td&gt;4&lt;/td&gt;\n                   &lt;td&gt;deadbrother&lt;/td&gt;\n                   &lt;td&gt;400&lt;/td&gt;\n                   &lt;td&gt;90&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n    美人尖\n        &lt;style&gt;\n            div{\n               width:0px;\n               height:0px;\n               border-top-style:solid;\n               border-top-color:red;\n               border-top-width: 10px;\n               border-left-style:solid;\n               border-left-color:white;\n               border-left-width: 10px;  \n               border-bottom-style:solid;\n               border-bottom-color:white;\n               border-bottom-width: 10px;\n               border-right-style:solid;\n               border-right-color:white;\n               border-right-width: 10px;     \n              }\n            &lt;/style&gt;\n\n            &lt;div &gt;\n            &lt;/div&gt;\n    短线下划线\n        &lt;style&gt;\n          table{\n            width:100%;\n          }\n          table td{\n            text-align:center;\n          }\n          table tr.rowborder td{\n            background-color: #b2d1ff;\n            border-right: 2px solid #fff;\n            height: 3px;\n        }\n        &lt;/style&gt;\n\n        &lt;table&gt;\n          &lt;tr&gt;\n            &lt;td&gt;商品&lt;/td&gt;\n            &lt;td&gt;数量&lt;/td&gt;\n            &lt;td&gt;价格&lt;/td&gt;\n            &lt;td&gt;小记&lt;/td&gt;\n          &lt;/tr&gt;\n          &lt;tr class=&quot;rowborder&quot;&gt;\n            &lt;td&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;/td&gt;\n          &lt;/tr&gt; \n        &lt;/table&gt;\n</code></pre><h4 id=\"内边距\"><a href=\"#内边距\" class=\"headerlink\" title=\"内边距\"></a>内边距</h4><pre><code>元素内边距 \n指的是元素里的内容与边框之间的距离 \n属性： \npadding-left: 左内边距 \npadding-right: 右内边距 \npadding-top: 上内边距 \npadding-bottom: 下内边距 \npadding: 上 右 下 左\n\n如果缺少左内边距的值，则使用右内边距的值。\n如果缺少下内边距的值，则使用上内边距的值。\n如果缺少右内边距的值，则使用上内边距的值。\n举例说明\n这是完整4个的\npadding: 10px 20px 40px 80px\n如果只有3个\npadding: 10 20 40\n那么left取right\npadding: 10 20 40 = padding: 10 20 40 20\n如果只有两个\npadding: 10 20\n那么bottom取top，left取right\npadding: 10 20 = padding:10 20 10 20\n如果只有一个\npadding:10\n那么right取top，bottom取top，left取top\npadding:10 = padding:10 10 10 10\n</code></pre><h4 id=\"外边距\"><a href=\"#外边距\" class=\"headerlink\" title=\"外边距\"></a>外边距</h4><pre><code>元素外边距 \n指的是元素边框和元素边框之间的距离 \n属性： \nmargin-left: 左外边距 \nmargin-right: 右外边距 \nmargin-top: 上外边距 \nmargin-bottom: 下外边距 \nmargin:0px 10px;  //顺序 上右下左\n注：像span这样的内联元素，默认情况下，只有左右外边距，没有上下外边距。 为了观察上下外边距的效果，可以采用块级元素，比如div.\n</code></pre><h4 id=\"边框模型\"><a href=\"#边框模型\" class=\"headerlink\" title=\"边框模型\"></a>边框模型</h4><pre><code>真正决定一个元素的表现形式，是由其边框模型决定的\n由图所示\n蓝色框即为内容\nwidth:70px 表示内容的大小\n红色框即为边框\n内容到边框之间的距离，即为内边距 5px\n灰色框，是指边框与其他元素之间的距离，即为外边距：10px\n\n.box{\n    width:70px;\n    padding:5px;\n    margin: 10px;\n}\n</code></pre><p><img src=\"https://i.imgur.com/JOnY0O2.png\" alt=\"\"></p>\n<h4 id=\"超链状态\"><a href=\"#超链状态\" class=\"headerlink\" title=\"超链状态\"></a>超链状态</h4><pre><code>超链状态有4种 \nlink - 初始状态，从未被访问过 \nvisited - 已访问过 \nhover - 鼠标悬停于超链的上方 \nactive - 鼠标左键点击下去，但是尚未弹起的时候\n\n&lt;style&gt;\na:link {color: #FF0000}\na:visited {color: #00FF00}\na:hover {color: #FF00FF}\na:active {color: #0000FF}\na {text-decoration: none}/*去除超链下划线*/\n&lt;/style&gt;\n\n&lt;a href=&quot;http://www.12306.com&quot;&gt;超链的不同状态&lt;/a&gt;\n</code></pre><h5 id=\"垂直菜单风格\"><a href=\"#垂直菜单风格\" class=\"headerlink\" title=\"垂直菜单风格\"></a>垂直菜单风格</h5><pre><code>&lt;style&gt;\na{\nfont-size:14px;\ncolor: CornflowerBlue;\ntext-decoration: none;\n}\ndiv.menu {\n width:80px;\n border: 1px solid lightgray;\n margin-top:15px;\n position: absolute;\n  left: 80px;\n  top: 20px;\n}\ndiv.menu a{\ndisplay:block;\nfont-size:14px;\nfont-family:宋体;\ncolor: #888;\ntext-decoration: none;\npadding:10 0 10 15;\n}\n\ndiv.menu a:hover\n {\nbackground-color: #f1f1f1;\n}\n\n&lt;/style&gt;\n\n&lt;a href=&quot;#nowhere&quot;&gt; 武器 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 护甲 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 英雄 &lt;/a&gt;\n\n&lt;div class=&quot;menu&quot;&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 盖伦 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 提莫 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 安妮 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 死哥 &lt;/a&gt;\n&lt;/div&gt;\n\n&lt;div style=&quot;height:200px&quot;&gt;&lt;/div&gt;\n</code></pre><h4 id=\"隐藏\"><a href=\"#隐藏\" class=\"headerlink\" title=\"隐藏\"></a>隐藏</h4><pre><code>隐藏元素有两种方式 \ndisplay:none; //隐藏一个元素，这个元素将不再占有原空间 “坑” 让出来了\nvisibility:hidden; //隐藏一个元素，这个元素继续占有原空间，只是“看不见”\n</code></pre><h4 id=\"css文件引用\"><a href=\"#css文件引用\" class=\"headerlink\" title=\"css文件引用\"></a>css文件引用</h4><pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/study/style.css&quot; /&gt;\n</code></pre><h4 id=\"优先级\"><a href=\"#优先级\" class=\"headerlink\" title=\"优先级\"></a>优先级</h4><pre><code>标签上的style属性 &gt; html文件中的style标签里样式 &gt; 外部引用的css\n\n!important,如果样式上增加了!important，则优先级最高，甚至高于style属性\n&lt;style&gt;\n.p1{\n  color:green !important;\n}\n&lt;/style&gt;\n</code></pre><h2 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h2><h4 id=\"绝对定位\"><a href=\"#绝对定位\" class=\"headerlink\" title=\"绝对定位\"></a>绝对定位</h4><pre><code>属性：position \n值： absolute \nps:\n1.设置了绝对定位的元素，相当于该元素被从原文档中删除了 \n所以”正常文字4“会紧接着出现在 ”正常文字2“后面，而不会留下空档。\n2.绝对定位是基于最近的一个定位了的父容器,如果没有定位了的父容器,”最近的一个定位了的父容器” 即body。\n&lt;style&gt;\np.abs{\n  position: absolute;\n  left: 150px;\n  top: 50px;\n}\n&lt;/style&gt;\n\n&lt;p &gt;正常文字1&lt;/p&gt;\n&lt;p &gt;正常文字2&lt;/p&gt;\n&lt;p class=&quot;abs&quot; &gt;绝对定位的文字3&lt;/p&gt;\n&lt;p &gt;正常文字4&lt;/p&gt;\n&lt;p &gt;正常文字5&lt;/p&gt;\n3.通过绝对定位可以把一个元素放在另一个元素上，这样位置就重复了重复了，就存在一个谁掩盖谁的问题。 这个时候就可以使用z-index属性，当z-index的值越大，就表示放上面，z-index:越小就表示放下面。\n</code></pre><h4 id=\"相对定位\"><a href=\"#相对定位\" class=\"headerlink\" title=\"相对定位\"></a>相对定位</h4><pre><code>属性：position \n值： relative \n与绝对定位不同的是，相对定位不会把该元素从原文档删除掉，而是在原文档的位置的基础上，移动一定的距离\n&lt;style&gt;\np.r{\n  position: relative;\n  left: 150px;\n  top: 50px;\n}\n\n&lt;/style&gt;\n\n&lt;p &gt;正常文字1&lt;/p&gt;\n&lt;p &gt;正常文字2&lt;/p&gt;\n&lt;p class=&quot;r&quot; &gt;相对定位的文字3&lt;/p&gt;\n&lt;p &gt;正常文字4&lt;/p&gt;\n&lt;p &gt;正常文字5&lt;/p&gt;\n\n使用相对定位可以很方便的原来的位置上，移动一下，但是又会占用原来的位置，后面的内容接不上来 。 \n有时候，希望一个元素在原来的位置上，移动一下，但是又不占用位置，这个时候，就需要绝对定位和相对定位组合使用了。\n1. 首先对一个div(d1)使用相对定位在当前的位置上，但是什么内容都不放。\n2. 然后，在这个div(d1)里放一个绝对定位的div(d2),因为绝对定位是以其定位了的父容器来调整位置的，所以就会在这个相对定位的div(d1)的基础上调整位置，看上去就是在原来的基础上调整了位置，并且还不占用坑\n&lt;style&gt;\ndiv.r{\n  position: relative;\n  left: 0;\n  top: 0;\n}\ndiv.a{\n  position: absolute;\n  left: 150px;\n  top: 0px;\n}\n&lt;/style&gt;\n\n&lt;p&gt;正常文字1&lt;/p&gt;\n&lt;p&gt;正常文字2&lt;/p&gt;\n&lt;div class=&quot;r&quot;&gt;\n&lt;div class=&quot;a&quot;&gt;相对定位的文字3(不占坑)&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;正常文字4&lt;/p&gt;\n&lt;p&gt;正常文字5&lt;/p&gt;\n</code></pre><h4 id=\"浮动\"><a href=\"#浮动\" class=\"headerlink\" title=\"浮动\"></a>浮动</h4>","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h2 id=\"HTML基础\"><a href=\"#HTML基础\" class=\"headerlink\" title=\"HTML基础\"></a>HTML基础</h2><h4 id=\"超链\"><a href=\"#超链\" class=\"headerlink\" title=\"超链\"></a>超链</h4><pre><code>安全写法 参考&lt;https://juejin.im/post/5a9f8425f265da239a5f57f8?utm_source=gold_browser_extension&gt;\n&lt;a href=&quot;https://an.evil.site&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;进入一个“邪恶”的网站&lt;/a&gt;\n</code></pre><h4 id=\"表单元素\"><a href=\"#表单元素\" class=\"headerlink\" title=\"表单元素\"></a>表单元素</h4><h4 id=\"文本框\"><a href=\"#文本框\" class=\"headerlink\" title=\"文本框\"></a>文本框</h4><pre><code>&lt;input type=&quot;text&quot; value=&quot;有初始值的文本框&quot;&gt;\n&lt;input type=&quot;text&quot; placeholder=&quot;有背景文字的文本框 html5属性&quot;\n</code></pre><h4 id=\"密码框\"><a href=\"#密码框\" class=\"headerlink\" title=\"密码框\"></a>密码框</h4><pre><code>&lt;input type=&quot;password&quot;&gt; #输入的数据会自动显示为星号\n</code></pre><h4 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h4><pre><code>&lt;form  method=&quot;get&quot; action=&quot;http://how2j.cn/study/login.jsp&quot;&gt;\n账号：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br/&gt;\n密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; &gt; &lt;br/&gt;\n&lt;input type=&quot;submit&quot; value=&quot;登陆&quot;&gt;\n&lt;/form&gt;\n//提交数据的方式 get(不设置method时默认get) post(地址栏没有提交参数，提交二进制文件如上传文件必须用post)\n</code></pre><h4 id=\"单选框\"><a href=\"#单选框\" class=\"headerlink\" title=\"单选框\"></a>单选框</h4><pre><code>&lt;p&gt;今天晚上做什么？&lt;/p&gt;\n学习java&lt;input type=&quot;radio&quot; name=&quot;activity&quot; value=&quot;学习java&quot; &gt; &lt;br/&gt;\n东京热&lt;input type=&quot;radio&quot; checked=&quot;checked&quot;  name=&quot;activity&quot; value=&quot;tokyohot&quot; &gt; &lt;br/&gt;\ndota&lt;input type=&quot;radio&quot; name=&quot;activity&quot; value=&quot;dota&quot; &gt; &lt;br/&gt;\nLOL&lt;input type=&quot;radio&quot; name=&quot;activity&quot;  value=&quot;lol&quot;&gt; &lt;br/&gt;\n//type=&quot;radio&quot; \n//分组控制只能选中一个name=&quot;activity&quot;\n//默认选中checked=&quot;checked&quot;\n</code></pre><h4 id=\"复选框\"><a href=\"#复选框\" class=\"headerlink\" title=\"复选框\"></a>复选框</h4><pre><code>&lt;p&gt;今天晚上做什么？&lt;/p&gt;\n学习java&lt;input type=&quot;checkbox&quot; value=&quot;学习java&quot; &gt; &lt;br/&gt;\n东京热&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot;  name=&quot;activity&quot; value=&quot;tokyohot&quot; &gt; &lt;br/&gt;\ndota&lt;input type=&quot;checkbox&quot; value=&quot;dota&quot; &gt; &lt;br/&gt;\nLOL&lt;input type=&quot;checkbox&quot; value=&quot;lol&quot;&gt; &lt;br/&gt;\n</code></pre><h4 id=\"下拉列表\"><a href=\"#下拉列表\" class=\"headerlink\" title=\"下拉列表\"></a>下拉列表</h4><pre><code>&lt;select size=&quot;3&quot; multiple=&quot;multiple&quot;&gt;\n &lt;option &gt;1aaa&lt;/option&gt;\n &lt;option selected=&quot;selected&quot;&gt;2bbb&lt;/option&gt;\n &lt;option selected=&quot;selected&quot;&gt;3cccc&lt;/option&gt;\n&lt;/select&gt;\n//size=&quot;3&quot;表示下拉列表的高度\n//multiple=&quot;multiple&quot;表示按`ctrl`或`shift`可多选\n//selected=&quot;selected&quot;表示默认选中\n</code></pre><h4 id=\"文本域\"><a href=\"#文本域\" class=\"headerlink\" title=\"文本域\"></a>文本域</h4><pre><code>&lt;textarea cols=&quot;30&quot; rows=&quot;8&quot;&gt;123456789012345678901234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890\n1234567890&lt;/textarea&gt;\n//可以多行，可以有滚动条\n//cols和rows表示设置宽度和行数\n</code></pre><h4 id=\"普通按钮\"><a href=\"#普通按钮\" class=\"headerlink\" title=\"普通按钮\"></a>普通按钮</h4><pre><code>&lt;input type=&quot;button&quot;&gt; 即普通按钮\n//普通按钮不具备提交form的效果\n</code></pre><h4 id=\"提交按钮\"><a href=\"#提交按钮\" class=\"headerlink\" title=\"提交按钮\"></a>提交按钮</h4><pre><code>&lt;form action=&quot;/study/login.jsp&quot; method=&quot;get&quot;&gt;\n账号：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br/&gt;\n密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; &gt; &lt;br/&gt;\n&lt;input type=&quot;submit&quot; value=&quot;登陆&quot;&gt;\n&lt;/form&gt;\n//submit 用于提交form，把数据提交到服务端\n</code></pre><h4 id=\"重置按钮\"><a href=\"#重置按钮\" class=\"headerlink\" title=\"重置按钮\"></a>重置按钮</h4><pre><code>&lt;input type=&quot;reset&quot;&gt; 重置按钮 可以把输入框的改动复原\n</code></pre><h4 id=\"图像提交\"><a href=\"#图像提交\" class=\"headerlink\" title=\"图像提交\"></a>图像提交</h4><pre><code>//&lt;input type=&quot;image&quot; &gt; 即使用图像作为按钮进行form的提交\n&lt;form action=&quot;/study/login.jsp&quot;&gt;\n账号：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br/&gt;\n密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; &gt; &lt;br/&gt;\n&lt;input type=&quot;image&quot; src=&quot;http://how2j.cn/example.gif&quot;&gt;\n&lt;/form&gt;\n</code></pre><h4 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h4><pre><code>//button里是图片\n&lt;button&gt;&lt;img src=&quot;http://how2j.cn/example.gif&quot;/&gt;&lt;/button&gt;\n//提交数据\n设置type=&quot;submit&quot; \nIE下button的type的默认值为button不具备提交功能 \n其他浏览器type的默认值是submit\n&lt;form action=&quot;/study/login.jsp&quot;&gt;\n账号：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br/&gt;\n密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; &gt; &lt;br/&gt;\n&lt;button type=&quot;submit&quot;&gt;登陆&lt;/button&gt;\n&lt;/form&gt;\n</code></pre><h3 id=\"CSS基础\"><a href=\"#CSS基础\" class=\"headerlink\" title=\"CSS基础\"></a>CSS基础</h3><h4 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h4><pre><code>//元素选择器 \n&lt;style&gt;\n    p{\n      color:red;\n    }\n&lt;/style&gt;\n\n//id选择器  (id=&quot;p1&quot;)\n    #p1{\n      color:blue;\n    }\n\n//类选择器  (class=&quot;pre&quot;)\n    .pre{\n      color:blue;\n    }\n\n//更准确的选择 （元素名.class值或元素名#id值）\n&lt;style&gt;\n    p.blue{\n      color:blue;\n    }\n    p#percentage{\n      width:50%;\n      height:50%;\n      background-color:pink;\n    }\n&lt;/style&gt;\n</code></pre><h4 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h4><pre><code>/**/\n</code></pre><h4 id=\"尺寸\"><a href=\"#尺寸\" class=\"headerlink\" title=\"尺寸\"></a>尺寸</h4><pre><code>属性：width hight\n值：可以是百分比或者像素\n</code></pre><h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><h5 id=\"背景颜色\"><a href=\"#背景颜色\" class=\"headerlink\" title=\"背景颜色\"></a>背景颜色</h5><pre><code>属性：background-color\n值： 1.预定义的颜色名字 red\n    2.rgb格式 rgb(250,0,255)\n    3.16进制的表示 #00ff00 等同rgb(0,255,0)\n&lt;style&gt;\np.gray {background-color: gray;}\nh1 {background-color: transparent}\nh2 {background-color: rgb(250,0,255)}\nh3 {background-color: #00ff00}\n&lt;/style&gt;\n\n&lt;p class=&quot;gray&quot;&gt;灰色&lt;/p&gt;\n&lt;h1&gt;透明背景，默认即透明背景&lt;/h1&gt;\n&lt;h2&gt;紫色&lt;/h2&gt;\n&lt;h3&gt;绿色背景&lt;/h3&gt;\n</code></pre><h5 id=\"图片做背景\"><a href=\"#图片做背景\" class=\"headerlink\" title=\"图片做背景\"></a>图片做背景</h5><pre><code>属性：background-image\n值：url(/study/background.jpg)\n&lt;style&gt;\ndiv#test\n  {\n    background-image:url(/study/background.jpg);\n    width:200px;\n    height:100px;\n  }\n&lt;/style&gt;\n\n&lt;div id=&quot;test&quot;&gt;\n  这是一个有背景图的DIV\n&lt;/div&gt;\n</code></pre><h5 id=\"背景重复\"><a href=\"#背景重复\" class=\"headerlink\" title=\"背景重复\"></a>背景重复</h5><pre><code>属性：background-repeat\n值：repeat; 水平垂直方向都重复 \n    repeat-x; 只有水平方向重复 \n    repeat-y; 只有垂直方向重复 \n    no-repeat; 无重复\n\ndiv#norepeat\n  {\n    background-image:url(/study/background_small.jpg);\n    width:200px;\n    height:100px;\n    background-repeat: no-repeat;\n  }\n</code></pre><h5 id=\"背景平铺\"><a href=\"#背景平铺\" class=\"headerlink\" title=\"背景平铺\"></a>背景平铺</h5><pre><code>属性：background-size\n值：contain\n\n&lt;style&gt;\ndiv#contain\n  {\n    background-image:url(/study/background_small.jpg);\n    width:200px;\n    height:100px;\n    background-size: contain;\n  }\n&lt;/style&gt;\n\n&lt;div id=&quot;contain&quot;&gt;\n   背景平铺，通过拉伸实现，会有失真\n&lt;/div&gt;\n</code></pre><h4 id=\"文字\"><a href=\"#文字\" class=\"headerlink\" title=\"文字\"></a>文字</h4><h5 id=\"文字颜色\"><a href=\"#文字颜色\" class=\"headerlink\" title=\"文字颜色\"></a>文字颜色</h5><pre><code>div#colorful{\n  color:pink\n}\n\n&lt;/style&gt;\n\n&lt;div id=&quot;colorful&quot;&gt;\n  粉红\n</code></pre><h5 id=\"对齐\"><a href=\"#对齐\" class=\"headerlink\" title=\"对齐\"></a>对齐</h5><pre><code>属性:text-align\n值：left,right,center\ndiv是块级元素，其默认宽度是100%，所以文本有对齐的空间前提。\n\n但是，span却看不出右对齐效果\n因为span是内联元素其默认宽度就是其文本内容的宽度\n简单说就是文本已经粑在其边框上了，对齐是看不出效果来的\n</code></pre><h5 id=\"文本修饰\"><a href=\"#文本修饰\" class=\"headerlink\" title=\"文本修饰\"></a>文本修饰</h5><pre><code>属性：text-decoration \n值： overline 上划线\n    line-through 删除效果\n    underline 下划线\n    blink 闪烁效果，大部分浏览器取消了\n\n.a {text-decoration: none}//去掉默认下划线的超链\n</code></pre><h5 id=\"行间距\"><a href=\"#行间距\" class=\"headerlink\" title=\"行间距\"></a>行间距</h5><pre><code>属性：line-height \n值：数字或者百分比\n.p{\n  line-height:200%;\n}\n</code></pre><h5 id=\"字符间距\"><a href=\"#字符间距\" class=\"headerlink\" title=\"字符间距\"></a>字符间距</h5><pre><code>属性：letter-spacing \n值： 数字\n.p{\n  letter-spacing:2;\n}\n</code></pre><h5 id=\"单词间距\"><a href=\"#单词间距\" class=\"headerlink\" title=\"单词间距\"></a>单词间距</h5><pre><code>属性：word-spacing \n值： 数字\n.p{\n  word-spacing:10;\n}\n</code></pre><h5 id=\"首行缩进\"><a href=\"#首行缩进\" class=\"headerlink\" title=\"首行缩进\"></a>首行缩进</h5><pre><code>属性：text-indent \n值： 数字\n.p{\n  text-indent:50;\n}\n</code></pre><h5 id=\"大小写\"><a href=\"#大小写\" class=\"headerlink\" title=\"大小写\"></a>大小写</h5><pre><code>属性：text-transform \n值： \nuppercase 全部大写 \ncapitalize 首字母大写 \nlowercase 全部小写\n</code></pre><h5 id=\"空白格\"><a href=\"#空白格\" class=\"headerlink\" title=\"空白格\"></a>空白格</h5><pre><code>属性：white-space\n值：\nnormal 默认。多个空白格或者换行符会被合并成一个空白格\npre 有多少空白格，显示多少空白格，相当于pre标签,如果长度超出父容器也不会换行。\npre-wrap 有多少空白格，显示多少空白格，相当于pre标签,如果长度超出父容器，会换行。\nnowrap 一直不换行，直到使用br\n</code></pre><h4 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h4><h5 id=\"尺寸-1\"><a href=\"#尺寸-1\" class=\"headerlink\" title=\"尺寸\"></a>尺寸</h5><pre><code>属性：font-size\n值：数字或百分比\np.big{\n  font-size:30px;\n}\n\np.small{\n  font-size:50%; /*0.5em 等同于 50%比例的文字*/\n}\n\np.small2{\n  font-size:0.5em;\n} \n</code></pre><h5 id=\"风格\"><a href=\"#风格\" class=\"headerlink\" title=\"风格\"></a>风格</h5><pre><code>属性：font-style\n值：normal 标准字体\n    italic 斜体\n</code></pre><h5 id=\"粗细\"><a href=\"#粗细\" class=\"headerlink\" title=\"粗细\"></a>粗细</h5><pre><code>属性：font-weight\n值：normal 标准粗细\n    bold 粗\n</code></pre><h5 id=\"字库\"><a href=\"#字库\" class=\"headerlink\" title=\"字库\"></a>字库</h5><pre><code>属性：font-family\n值：\n&lt;style&gt;\np.f1{\n  font-family:&quot;Times New Roman&quot;;\n}\n\np.f2{\n  font-family:Arial;\n}\np.f3{\n  font-family:宋体;\n}\np.f4{\n  font-family:黑体;\n}\np.f5{\n  font-family:楷体;\n}\np.f6{\n  font-family:微软雅黑;\n}\n&lt;/style&gt;\n</code></pre><h5 id=\"大小-风格-粗细-字库声明在一起\"><a href=\"#大小-风格-粗细-字库声明在一起\" class=\"headerlink\" title=\"大小 风格 粗细 字库声明在一起\"></a>大小 风格 粗细 字库声明在一起</h5><pre><code>&lt;style&gt;\np.all{\n   font:italic bold 30px &quot;Times New Roman&quot;;\n} \n&lt;/style&gt;\n\n&lt;p&gt;默认字体&lt;/p&gt; \n&lt;p class=&quot;all&quot;&gt;斜体的 粗体的 大小是30px的 &quot;Times New Roman&quot; &lt;/p&gt;        \n</code></pre><h4 id=\"鼠标样式\"><a href=\"#鼠标样式\" class=\"headerlink\" title=\"鼠标样式\"></a>鼠标样式</h4><pre><code>属性：cursor\n值：not-allowed\n    help\n    pointer ...\n</code></pre><h4 id=\"表格相关样式\"><a href=\"#表格相关样式\" class=\"headerlink\" title=\"表格相关样式\"></a>表格相关样式</h4><h5 id=\"表格布局\"><a href=\"#表格布局\" class=\"headerlink\" title=\"表格布局\"></a>表格布局</h5><pre><code>属性:table-layout \nautomatic; 单元格的大小由td的内容宽度决定 \nfixed; 单元格的大小由td上设置的宽度决定\n</code></pre><h5 id=\"表格边框\"><a href=\"#表格边框\" class=\"headerlink\" title=\"表格边框\"></a>表格边框</h5><pre><code>属性：border-collapse\n值：\nseparate:边框分隔\ncollapse:边框合并\n</code></pre><h4 id=\"边框\"><a href=\"#边框\" class=\"headerlink\" title=\"边框\"></a>边框</h4><pre><code>属性：border-style 边框风格\n    border-color \n    border-width\n    border\n    border-top\n    border-top，border-left\n    块级元素和内联元素的边框区别\n        块级元素div默认是占用100%的宽度\n        常见的块级元素有div h1 p 等\n        而内联元素span的宽度由其内容的宽度决定\n        常见的内联元素有 a b strong i input 等\n    表格斑马线\n        &lt;style&gt;\n            table{\n            border-collapse:collapse;\n            width:90%;\n            }\n            tr.odd{\n            background-color:#f8f8f8;\n            }\n              tr.head{\n                border-bottom-width: 2px;\n              }\n            tr{\n            border-bottom-style: solid;\n            border-bottom-width: 1px;\n            border-bottom-color: lightgray;\n            height:35px;\n            }\n\n            td{\n            width:25%;\n            text-align:center;\n            }\n\n            &lt;/style&gt;\n            &lt;table&gt;\n               &lt;tr class=&quot;head&quot;&gt;\n                   &lt;td&gt;id&lt;/td&gt;\n                   &lt;td&gt;名称&lt;/td&gt;\n                   &lt;td&gt;血量&lt;/td&gt;\n                   &lt;td&gt;伤害&lt;/td&gt;\n                &lt;/tr&gt;\n               &lt;tr class=&quot;odd&quot;&gt;\n                   &lt;td&gt;1&lt;/td&gt;\n                   &lt;td&gt;gareen&lt;/td&gt;\n                   &lt;td&gt;340&lt;/td&gt;\n                   &lt;td&gt;58&lt;/td&gt;\n                &lt;/tr&gt;\n               &lt;tr class=&quot;even&quot;&gt;\n                   &lt;td&gt;2&lt;/td&gt;\n                   &lt;td&gt;teemo&lt;/td&gt;\n                   &lt;td&gt;320&lt;/td&gt;\n                   &lt;td&gt;76&lt;/td&gt;\n                &lt;/tr&gt;\n               &lt;tr class=&quot;odd&quot;&gt;\n                   &lt;td&gt;3&lt;/td&gt;\n                   &lt;td&gt;annie&lt;/td&gt;\n                   &lt;td&gt;380&lt;/td&gt;\n                   &lt;td&gt;38&lt;/td&gt;\n                &lt;/tr&gt;\n               &lt;tr class=&quot;even&quot;&gt;\n                   &lt;td&gt;4&lt;/td&gt;\n                   &lt;td&gt;deadbrother&lt;/td&gt;\n                   &lt;td&gt;400&lt;/td&gt;\n                   &lt;td&gt;90&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n    美人尖\n        &lt;style&gt;\n            div{\n               width:0px;\n               height:0px;\n               border-top-style:solid;\n               border-top-color:red;\n               border-top-width: 10px;\n               border-left-style:solid;\n               border-left-color:white;\n               border-left-width: 10px;  \n               border-bottom-style:solid;\n               border-bottom-color:white;\n               border-bottom-width: 10px;\n               border-right-style:solid;\n               border-right-color:white;\n               border-right-width: 10px;     \n              }\n            &lt;/style&gt;\n\n            &lt;div &gt;\n            &lt;/div&gt;\n    短线下划线\n        &lt;style&gt;\n          table{\n            width:100%;\n          }\n          table td{\n            text-align:center;\n          }\n          table tr.rowborder td{\n            background-color: #b2d1ff;\n            border-right: 2px solid #fff;\n            height: 3px;\n        }\n        &lt;/style&gt;\n\n        &lt;table&gt;\n          &lt;tr&gt;\n            &lt;td&gt;商品&lt;/td&gt;\n            &lt;td&gt;数量&lt;/td&gt;\n            &lt;td&gt;价格&lt;/td&gt;\n            &lt;td&gt;小记&lt;/td&gt;\n          &lt;/tr&gt;\n          &lt;tr class=&quot;rowborder&quot;&gt;\n            &lt;td&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;/td&gt;\n          &lt;/tr&gt; \n        &lt;/table&gt;\n</code></pre><h4 id=\"内边距\"><a href=\"#内边距\" class=\"headerlink\" title=\"内边距\"></a>内边距</h4><pre><code>元素内边距 \n指的是元素里的内容与边框之间的距离 \n属性： \npadding-left: 左内边距 \npadding-right: 右内边距 \npadding-top: 上内边距 \npadding-bottom: 下内边距 \npadding: 上 右 下 左\n\n如果缺少左内边距的值，则使用右内边距的值。\n如果缺少下内边距的值，则使用上内边距的值。\n如果缺少右内边距的值，则使用上内边距的值。\n举例说明\n这是完整4个的\npadding: 10px 20px 40px 80px\n如果只有3个\npadding: 10 20 40\n那么left取right\npadding: 10 20 40 = padding: 10 20 40 20\n如果只有两个\npadding: 10 20\n那么bottom取top，left取right\npadding: 10 20 = padding:10 20 10 20\n如果只有一个\npadding:10\n那么right取top，bottom取top，left取top\npadding:10 = padding:10 10 10 10\n</code></pre><h4 id=\"外边距\"><a href=\"#外边距\" class=\"headerlink\" title=\"外边距\"></a>外边距</h4><pre><code>元素外边距 \n指的是元素边框和元素边框之间的距离 \n属性： \nmargin-left: 左外边距 \nmargin-right: 右外边距 \nmargin-top: 上外边距 \nmargin-bottom: 下外边距 \nmargin:0px 10px;  //顺序 上右下左\n注：像span这样的内联元素，默认情况下，只有左右外边距，没有上下外边距。 为了观察上下外边距的效果，可以采用块级元素，比如div.\n</code></pre><h4 id=\"边框模型\"><a href=\"#边框模型\" class=\"headerlink\" title=\"边框模型\"></a>边框模型</h4><pre><code>真正决定一个元素的表现形式，是由其边框模型决定的\n由图所示\n蓝色框即为内容\nwidth:70px 表示内容的大小\n红色框即为边框\n内容到边框之间的距离，即为内边距 5px\n灰色框，是指边框与其他元素之间的距离，即为外边距：10px\n\n.box{\n    width:70px;\n    padding:5px;\n    margin: 10px;\n}\n</code></pre><p><img src=\"https://i.imgur.com/JOnY0O2.png\" alt=\"\"></p>\n<h4 id=\"超链状态\"><a href=\"#超链状态\" class=\"headerlink\" title=\"超链状态\"></a>超链状态</h4><pre><code>超链状态有4种 \nlink - 初始状态，从未被访问过 \nvisited - 已访问过 \nhover - 鼠标悬停于超链的上方 \nactive - 鼠标左键点击下去，但是尚未弹起的时候\n\n&lt;style&gt;\na:link {color: #FF0000}\na:visited {color: #00FF00}\na:hover {color: #FF00FF}\na:active {color: #0000FF}\na {text-decoration: none}/*去除超链下划线*/\n&lt;/style&gt;\n\n&lt;a href=&quot;http://www.12306.com&quot;&gt;超链的不同状态&lt;/a&gt;\n</code></pre><h5 id=\"垂直菜单风格\"><a href=\"#垂直菜单风格\" class=\"headerlink\" title=\"垂直菜单风格\"></a>垂直菜单风格</h5><pre><code>&lt;style&gt;\na{\nfont-size:14px;\ncolor: CornflowerBlue;\ntext-decoration: none;\n}\ndiv.menu {\n width:80px;\n border: 1px solid lightgray;\n margin-top:15px;\n position: absolute;\n  left: 80px;\n  top: 20px;\n}\ndiv.menu a{\ndisplay:block;\nfont-size:14px;\nfont-family:宋体;\ncolor: #888;\ntext-decoration: none;\npadding:10 0 10 15;\n}\n\ndiv.menu a:hover\n {\nbackground-color: #f1f1f1;\n}\n\n&lt;/style&gt;\n\n&lt;a href=&quot;#nowhere&quot;&gt; 武器 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 护甲 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 英雄 &lt;/a&gt;\n\n&lt;div class=&quot;menu&quot;&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 盖伦 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 提莫 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 安妮 &lt;/a&gt;\n&lt;a href=&quot;#nowhere&quot;&gt; 死哥 &lt;/a&gt;\n&lt;/div&gt;\n\n&lt;div style=&quot;height:200px&quot;&gt;&lt;/div&gt;\n</code></pre><h4 id=\"隐藏\"><a href=\"#隐藏\" class=\"headerlink\" title=\"隐藏\"></a>隐藏</h4><pre><code>隐藏元素有两种方式 \ndisplay:none; //隐藏一个元素，这个元素将不再占有原空间 “坑” 让出来了\nvisibility:hidden; //隐藏一个元素，这个元素继续占有原空间，只是“看不见”\n</code></pre><h4 id=\"css文件引用\"><a href=\"#css文件引用\" class=\"headerlink\" title=\"css文件引用\"></a>css文件引用</h4><pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/study/style.css&quot; /&gt;\n</code></pre><h4 id=\"优先级\"><a href=\"#优先级\" class=\"headerlink\" title=\"优先级\"></a>优先级</h4><pre><code>标签上的style属性 &gt; html文件中的style标签里样式 &gt; 外部引用的css\n\n!important,如果样式上增加了!important，则优先级最高，甚至高于style属性\n&lt;style&gt;\n.p1{\n  color:green !important;\n}\n&lt;/style&gt;\n</code></pre><h2 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h2><h4 id=\"绝对定位\"><a href=\"#绝对定位\" class=\"headerlink\" title=\"绝对定位\"></a>绝对定位</h4><pre><code>属性：position \n值： absolute \nps:\n1.设置了绝对定位的元素，相当于该元素被从原文档中删除了 \n所以”正常文字4“会紧接着出现在 ”正常文字2“后面，而不会留下空档。\n2.绝对定位是基于最近的一个定位了的父容器,如果没有定位了的父容器,”最近的一个定位了的父容器” 即body。\n&lt;style&gt;\np.abs{\n  position: absolute;\n  left: 150px;\n  top: 50px;\n}\n&lt;/style&gt;\n\n&lt;p &gt;正常文字1&lt;/p&gt;\n&lt;p &gt;正常文字2&lt;/p&gt;\n&lt;p class=&quot;abs&quot; &gt;绝对定位的文字3&lt;/p&gt;\n&lt;p &gt;正常文字4&lt;/p&gt;\n&lt;p &gt;正常文字5&lt;/p&gt;\n3.通过绝对定位可以把一个元素放在另一个元素上，这样位置就重复了重复了，就存在一个谁掩盖谁的问题。 这个时候就可以使用z-index属性，当z-index的值越大，就表示放上面，z-index:越小就表示放下面。\n</code></pre><h4 id=\"相对定位\"><a href=\"#相对定位\" class=\"headerlink\" title=\"相对定位\"></a>相对定位</h4><pre><code>属性：position \n值： relative \n与绝对定位不同的是，相对定位不会把该元素从原文档删除掉，而是在原文档的位置的基础上，移动一定的距离\n&lt;style&gt;\np.r{\n  position: relative;\n  left: 150px;\n  top: 50px;\n}\n\n&lt;/style&gt;\n\n&lt;p &gt;正常文字1&lt;/p&gt;\n&lt;p &gt;正常文字2&lt;/p&gt;\n&lt;p class=&quot;r&quot; &gt;相对定位的文字3&lt;/p&gt;\n&lt;p &gt;正常文字4&lt;/p&gt;\n&lt;p &gt;正常文字5&lt;/p&gt;\n\n使用相对定位可以很方便的原来的位置上，移动一下，但是又会占用原来的位置，后面的内容接不上来 。 \n有时候，希望一个元素在原来的位置上，移动一下，但是又不占用位置，这个时候，就需要绝对定位和相对定位组合使用了。\n1. 首先对一个div(d1)使用相对定位在当前的位置上，但是什么内容都不放。\n2. 然后，在这个div(d1)里放一个绝对定位的div(d2),因为绝对定位是以其定位了的父容器来调整位置的，所以就会在这个相对定位的div(d1)的基础上调整位置，看上去就是在原来的基础上调整了位置，并且还不占用坑\n&lt;style&gt;\ndiv.r{\n  position: relative;\n  left: 0;\n  top: 0;\n}\ndiv.a{\n  position: absolute;\n  left: 150px;\n  top: 0px;\n}\n&lt;/style&gt;\n\n&lt;p&gt;正常文字1&lt;/p&gt;\n&lt;p&gt;正常文字2&lt;/p&gt;\n&lt;div class=&quot;r&quot;&gt;\n&lt;div class=&quot;a&quot;&gt;相对定位的文字3(不占坑)&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;正常文字4&lt;/p&gt;\n&lt;p&gt;正常文字5&lt;/p&gt;\n</code></pre><h4 id=\"浮动\"><a href=\"#浮动\" class=\"headerlink\" title=\"浮动\"></a>浮动</h4>"},{"title":"shiro知识总结","date":"2018-12-29T02:49:15.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n## shiro初探 ##\n### 介绍 ###\nshiro安全框架是目前为止作为登录注册最常用的框架，因为它十分的强大简单，提供了认证、授权、加密和会话管理等功能 。\n\n----------\n　　shiro能做什么？\n\n　　　　　　　认证：验证用户的身份\n\n　　　　　　　授权：对用户执行访问控制：判断用户是否被允许做某事\n\n　　　　　　　会话管理：在任何环境下使用 Session API，即使没有 Web 或EJB 容器。\n\n　　　　　　　加密：以更简洁易用的方式使用加密功能，保护或隐藏数据防止被偷窥\n\n　　　　　　　Realms：聚集一个或多个用户安全数据的数据源\n\n　　　　　　　单点登录（SSO）功能。\n\n　　　　　　　为没有关联到登录的用户启用 \"Remember Me“ 服务\n\n----------\n\n　　Shiro 的四大核心部分\n\n　　　　　　Authentication(身份验证)：简称为“登录”，即证明用户是谁。\n\n　　　　　　Authorization(授权)：访问控制的过程，即决定是否有权限去访问受保护的资源。\n\n　　　　　　Session Management(会话管理)：管理用户特定的会话，即使在非 Web 或 EJB 应用程序。\n\n　　　　　　Cryptography(加密)：通过使用加密算法保持数据安全\n\n----------\n\n　　shiro的三个核心组件：　　　　　\n\n　　　　　　Subject ：正与系统进行交互的人，或某一个第三方服务。所有 Subject 实例都被绑定到（且这是必须的）一个SecurityManager 上。\n\n　　　　　　SecurityManager：Shiro 架构的心脏，用来协调内部各安全组件，管理内部组件实例，并通过它来提供安全管理的各种服务。当 Shiro 与一个 Subject 进行交互时，实质上是幕后的 SecurityManager 处理所有繁重的 Subject 安全操作。\n\n　　　　　　Realms ：本质上是一个特定安全的 DAO。当配置 Shiro 时，必须指定至少一个 Realm 用来进行身份验证和/或授权。Shiro 提供了多种可用的 Realms 来获取安全相关的数据。如关系数据库(JDBC)，INI 及属性文件等。可以定义自己 Realm 实现来代表自定义的数据源。\n","source":"_posts/shiro知识总结.md","raw":"---\ntitle: shiro知识总结\ndate: 2018-12-29 10:49:15\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n## shiro初探 ##\n### 介绍 ###\nshiro安全框架是目前为止作为登录注册最常用的框架，因为它十分的强大简单，提供了认证、授权、加密和会话管理等功能 。\n\n----------\n　　shiro能做什么？\n\n　　　　　　　认证：验证用户的身份\n\n　　　　　　　授权：对用户执行访问控制：判断用户是否被允许做某事\n\n　　　　　　　会话管理：在任何环境下使用 Session API，即使没有 Web 或EJB 容器。\n\n　　　　　　　加密：以更简洁易用的方式使用加密功能，保护或隐藏数据防止被偷窥\n\n　　　　　　　Realms：聚集一个或多个用户安全数据的数据源\n\n　　　　　　　单点登录（SSO）功能。\n\n　　　　　　　为没有关联到登录的用户启用 \"Remember Me“ 服务\n\n----------\n\n　　Shiro 的四大核心部分\n\n　　　　　　Authentication(身份验证)：简称为“登录”，即证明用户是谁。\n\n　　　　　　Authorization(授权)：访问控制的过程，即决定是否有权限去访问受保护的资源。\n\n　　　　　　Session Management(会话管理)：管理用户特定的会话，即使在非 Web 或 EJB 应用程序。\n\n　　　　　　Cryptography(加密)：通过使用加密算法保持数据安全\n\n----------\n\n　　shiro的三个核心组件：　　　　　\n\n　　　　　　Subject ：正与系统进行交互的人，或某一个第三方服务。所有 Subject 实例都被绑定到（且这是必须的）一个SecurityManager 上。\n\n　　　　　　SecurityManager：Shiro 架构的心脏，用来协调内部各安全组件，管理内部组件实例，并通过它来提供安全管理的各种服务。当 Shiro 与一个 Subject 进行交互时，实质上是幕后的 SecurityManager 处理所有繁重的 Subject 安全操作。\n\n　　　　　　Realms ：本质上是一个特定安全的 DAO。当配置 Shiro 时，必须指定至少一个 Realm 用来进行身份验证和/或授权。Shiro 提供了多种可用的 Realms 来获取安全相关的数据。如关系数据库(JDBC)，INI 及属性文件等。可以定义自己 Realm 实现来代表自定义的数据源。\n","slug":"shiro知识总结","published":1,"updated":"2018-12-29T02:55:48.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxjt000chcr39cxccrzn","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h2 id=\"shiro初探\"><a href=\"#shiro初探\" class=\"headerlink\" title=\"shiro初探\"></a>shiro初探</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>shiro安全框架是目前为止作为登录注册最常用的框架，因为它十分的强大简单，提供了认证、授权、加密和会话管理等功能 。</p>\n<hr>\n<p>　　shiro能做什么？</p>\n<p>　　　　　　　认证：验证用户的身份</p>\n<p>　　　　　　　授权：对用户执行访问控制：判断用户是否被允许做某事</p>\n<p>　　　　　　　会话管理：在任何环境下使用 Session API，即使没有 Web 或EJB 容器。</p>\n<p>　　　　　　　加密：以更简洁易用的方式使用加密功能，保护或隐藏数据防止被偷窥</p>\n<p>　　　　　　　Realms：聚集一个或多个用户安全数据的数据源</p>\n<p>　　　　　　　单点登录（SSO）功能。</p>\n<p>　　　　　　　为没有关联到登录的用户启用 “Remember Me“ 服务</p>\n<hr>\n<p>　　Shiro 的四大核心部分</p>\n<p>　　　　　　Authentication(身份验证)：简称为“登录”，即证明用户是谁。</p>\n<p>　　　　　　Authorization(授权)：访问控制的过程，即决定是否有权限去访问受保护的资源。</p>\n<p>　　　　　　Session Management(会话管理)：管理用户特定的会话，即使在非 Web 或 EJB 应用程序。</p>\n<p>　　　　　　Cryptography(加密)：通过使用加密算法保持数据安全</p>\n<hr>\n<p>　　shiro的三个核心组件：　　　　　</p>\n<p>　　　　　　Subject ：正与系统进行交互的人，或某一个第三方服务。所有 Subject 实例都被绑定到（且这是必须的）一个SecurityManager 上。</p>\n<p>　　　　　　SecurityManager：Shiro 架构的心脏，用来协调内部各安全组件，管理内部组件实例，并通过它来提供安全管理的各种服务。当 Shiro 与一个 Subject 进行交互时，实质上是幕后的 SecurityManager 处理所有繁重的 Subject 安全操作。</p>\n<p>　　　　　　Realms ：本质上是一个特定安全的 DAO。当配置 Shiro 时，必须指定至少一个 Realm 用来进行身份验证和/或授权。Shiro 提供了多种可用的 Realms 来获取安全相关的数据。如关系数据库(JDBC)，INI 及属性文件等。可以定义自己 Realm 实现来代表自定义的数据源。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h2 id=\"shiro初探\"><a href=\"#shiro初探\" class=\"headerlink\" title=\"shiro初探\"></a>shiro初探</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>shiro安全框架是目前为止作为登录注册最常用的框架，因为它十分的强大简单，提供了认证、授权、加密和会话管理等功能 。</p>\n<hr>\n<p>　　shiro能做什么？</p>\n<p>　　　　　　　认证：验证用户的身份</p>\n<p>　　　　　　　授权：对用户执行访问控制：判断用户是否被允许做某事</p>\n<p>　　　　　　　会话管理：在任何环境下使用 Session API，即使没有 Web 或EJB 容器。</p>\n<p>　　　　　　　加密：以更简洁易用的方式使用加密功能，保护或隐藏数据防止被偷窥</p>\n<p>　　　　　　　Realms：聚集一个或多个用户安全数据的数据源</p>\n<p>　　　　　　　单点登录（SSO）功能。</p>\n<p>　　　　　　　为没有关联到登录的用户启用 “Remember Me“ 服务</p>\n<hr>\n<p>　　Shiro 的四大核心部分</p>\n<p>　　　　　　Authentication(身份验证)：简称为“登录”，即证明用户是谁。</p>\n<p>　　　　　　Authorization(授权)：访问控制的过程，即决定是否有权限去访问受保护的资源。</p>\n<p>　　　　　　Session Management(会话管理)：管理用户特定的会话，即使在非 Web 或 EJB 应用程序。</p>\n<p>　　　　　　Cryptography(加密)：通过使用加密算法保持数据安全</p>\n<hr>\n<p>　　shiro的三个核心组件：　　　　　</p>\n<p>　　　　　　Subject ：正与系统进行交互的人，或某一个第三方服务。所有 Subject 实例都被绑定到（且这是必须的）一个SecurityManager 上。</p>\n<p>　　　　　　SecurityManager：Shiro 架构的心脏，用来协调内部各安全组件，管理内部组件实例，并通过它来提供安全管理的各种服务。当 Shiro 与一个 Subject 进行交互时，实质上是幕后的 SecurityManager 处理所有繁重的 Subject 安全操作。</p>\n<p>　　　　　　Realms ：本质上是一个特定安全的 DAO。当配置 Shiro 时，必须指定至少一个 Realm 用来进行身份验证和/或授权。Shiro 提供了多种可用的 Realms 来获取安全相关的数据。如关系数据库(JDBC)，INI 及属性文件等。可以定义自己 Realm 实现来代表自定义的数据源。</p>\n"},{"title":"微信文档学习","date":"2018-11-21T13:35:01.000Z","_content":"<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 获取OpenID #\n## 手工方式 ##\n### 微信网页授权 ###\n- 官方文档:`https://mp.weixin.qq.com/wiki` 支付的文档:`https://pay.weixin.qq.com/wiki` 调试:`https://natapp.cn` 第三方SDK:`https://github.com/Wechat-Group/weixin-java-tools`\n- 第一步：设置域名。公众平台官网，`开发->接口授权->网页服务->网页账号->网页授权获取用户基本信息`的配置选项中，修改权限回调域名。\n\n## 利用第三方SDK ##","source":"_posts/微信文档学习.md","raw":"---\ntitle: 微信文档学习\ndate: 2018-11-21 21:35:01\ntags:\n---\n<blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>\n# 获取OpenID #\n## 手工方式 ##\n### 微信网页授权 ###\n- 官方文档:`https://mp.weixin.qq.com/wiki` 支付的文档:`https://pay.weixin.qq.com/wiki` 调试:`https://natapp.cn` 第三方SDK:`https://github.com/Wechat-Group/weixin-java-tools`\n- 第一步：设置域名。公众平台官网，`开发->接口授权->网页服务->网页账号->网页授权获取用户基本信息`的配置选项中，修改权限回调域名。\n\n## 利用第三方SDK ##","slug":"微信文档学习","published":1,"updated":"2018-11-21T14:04:31.255Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq8vjxjw000dhcr3haktfjxw","content":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"获取OpenID\"><a href=\"#获取OpenID\" class=\"headerlink\" title=\"获取OpenID\"></a>获取OpenID</h1><h2 id=\"手工方式\"><a href=\"#手工方式\" class=\"headerlink\" title=\"手工方式\"></a>手工方式</h2><h3 id=\"微信网页授权\"><a href=\"#微信网页授权\" class=\"headerlink\" title=\"微信网页授权\"></a>微信网页授权</h3><ul>\n<li>官方文档:<code>https://mp.weixin.qq.com/wiki</code> 支付的文档:<code>https://pay.weixin.qq.com/wiki</code> 调试:<code>https://natapp.cn</code> 第三方SDK:<code>https://github.com/Wechat-Group/weixin-java-tools</code></li>\n<li>第一步：设置域名。公众平台官网，<code>开发-&gt;接口授权-&gt;网页服务-&gt;网页账号-&gt;网页授权获取用户基本信息</code>的配置选项中，修改权限回调域名。</li>\n</ul>\n<h2 id=\"利用第三方SDK\"><a href=\"#利用第三方SDK\" class=\"headerlink\" title=\"利用第三方SDK\"></a>利用第三方SDK</h2>","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>\n<h1 id=\"获取OpenID\"><a href=\"#获取OpenID\" class=\"headerlink\" title=\"获取OpenID\"></a>获取OpenID</h1><h2 id=\"手工方式\"><a href=\"#手工方式\" class=\"headerlink\" title=\"手工方式\"></a>手工方式</h2><h3 id=\"微信网页授权\"><a href=\"#微信网页授权\" class=\"headerlink\" title=\"微信网页授权\"></a>微信网页授权</h3><ul>\n<li>官方文档:<code>https://mp.weixin.qq.com/wiki</code> 支付的文档:<code>https://pay.weixin.qq.com/wiki</code> 调试:<code>https://natapp.cn</code> 第三方SDK:<code>https://github.com/Wechat-Group/weixin-java-tools</code></li>\n<li>第一步：设置域名。公众平台官网，<code>开发-&gt;接口授权-&gt;网页服务-&gt;网页账号-&gt;网页授权获取用户基本信息</code>的配置选项中，修改权限回调域名。</li>\n</ul>\n<h2 id=\"利用第三方SDK\"><a href=\"#利用第三方SDK\" class=\"headerlink\" title=\"利用第三方SDK\"></a>利用第三方SDK</h2>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}